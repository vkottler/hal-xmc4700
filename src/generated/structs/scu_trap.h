/**
 * \file
 * \brief Generated by ifgen (3.2.0).
 */
#pragma once

#include "../ifgen/common.h"

namespace XMC4700
{

/**
 * System Control Unit
 */
struct [[gnu::packed]] scu_trap
{
    /* Constant attributes. */
    static constexpr std::size_t size = 20; /*!< scu_trap's size in bytes. */

    /* Fields. */
    const uint32_t TRAPSTAT = {}; /*!< (read-only) Trap Status Register */
    const uint32_t TRAPRAW = {};  /*!< (read-only) Trap Raw Status Register */
    uint32_t TRAPDIS;             /*!< (read-write) Trap Disable Register */
    uint32_t TRAPCLR;             /*!< (write-only) Trap Clear Register */
    uint32_t TRAPSET;             /*!< (write-only) Trap Set Register */

    /* Methods. */

    /**
     * Get TRAPSTAT's BWERR1T bit.
     *
     * Peripheral Bridge 1 Trap Status
     */
    inline bool get_TRAPSTAT_BWERR1T() volatile
    {
        return TRAPSTAT & (1u << 8u);
    }

    /**
     * Get TRAPSTAT's BWERR0T bit.
     *
     * Peripheral Bridge 0 Trap Status
     */
    inline bool get_TRAPSTAT_BWERR0T() volatile
    {
        return TRAPSTAT & (1u << 7u);
    }

    /**
     * Get TRAPSTAT's ULPWDGT bit.
     *
     * OSC_ULP Oscillator Watchdog Trap Status
     */
    inline bool get_TRAPSTAT_ULPWDGT() volatile
    {
        return TRAPSTAT & (1u << 6u);
    }

    /**
     * Get TRAPSTAT's BRWNT bit.
     *
     * Brown Out Trap Status
     */
    inline bool get_TRAPSTAT_BRWNT() volatile
    {
        return TRAPSTAT & (1u << 5u);
    }

    /**
     * Get TRAPSTAT's PET bit.
     *
     * Parity Error Trap Status
     */
    inline bool get_TRAPSTAT_PET() volatile
    {
        return TRAPSTAT & (1u << 4u);
    }

    /**
     * Get TRAPSTAT's UVCOLCKT bit.
     *
     * USB VCO Lock Trap Status
     */
    inline bool get_TRAPSTAT_UVCOLCKT() volatile
    {
        return TRAPSTAT & (1u << 3u);
    }

    /**
     * Get TRAPSTAT's SVCOLCKT bit.
     *
     * System VCO Lock Trap Status
     */
    inline bool get_TRAPSTAT_SVCOLCKT() volatile
    {
        return TRAPSTAT & (1u << 2u);
    }

    /**
     * Get TRAPSTAT's SOSCWDGT bit.
     *
     * OSC_HP Oscillator Watchdog Trap Status
     */
    inline bool get_TRAPSTAT_SOSCWDGT() volatile
    {
        return TRAPSTAT & (1u << 0u);
    }

    /**
     * Get all of TRAPSTAT's bit fields.
     *
     * (read-only) Trap Status Register
     */
    inline void get_TRAPSTAT(bool &BWERR1T, bool &BWERR0T, bool &ULPWDGT,
                             bool &BRWNT, bool &PET, bool &UVCOLCKT,
                             bool &SVCOLCKT, bool &SOSCWDGT) volatile
    {
        uint32_t curr = TRAPSTAT;

        BWERR1T = curr & (1u << 8u);
        BWERR0T = curr & (1u << 7u);
        ULPWDGT = curr & (1u << 6u);
        BRWNT = curr & (1u << 5u);
        PET = curr & (1u << 4u);
        UVCOLCKT = curr & (1u << 3u);
        SVCOLCKT = curr & (1u << 2u);
        SOSCWDGT = curr & (1u << 0u);
    }

    /**
     * Get TRAPRAW's BWERR1T bit.
     *
     * Peripheral Bridge 1 Trap Raw Status
     */
    inline bool get_TRAPRAW_BWERR1T() volatile
    {
        return TRAPRAW & (1u << 8u);
    }

    /**
     * Get TRAPRAW's BWERR0T bit.
     *
     * Peripheral Bridge 0 Trap Raw Status
     */
    inline bool get_TRAPRAW_BWERR0T() volatile
    {
        return TRAPRAW & (1u << 7u);
    }

    /**
     * Get TRAPRAW's ULPWDGT bit.
     *
     * OSC_ULP Oscillator Watchdog Trap Raw Status
     */
    inline bool get_TRAPRAW_ULPWDGT() volatile
    {
        return TRAPRAW & (1u << 6u);
    }

    /**
     * Get TRAPRAW's BRWNT bit.
     *
     * Brown Out Trap Raw Status
     */
    inline bool get_TRAPRAW_BRWNT() volatile
    {
        return TRAPRAW & (1u << 5u);
    }

    /**
     * Get TRAPRAW's PET bit.
     *
     * Parity Error Trap Raw Status
     */
    inline bool get_TRAPRAW_PET() volatile
    {
        return TRAPRAW & (1u << 4u);
    }

    /**
     * Get TRAPRAW's UVCOLCKT bit.
     *
     * USB VCO Lock Trap Raw Status
     */
    inline bool get_TRAPRAW_UVCOLCKT() volatile
    {
        return TRAPRAW & (1u << 3u);
    }

    /**
     * Get TRAPRAW's SVCOLCKT bit.
     *
     * System VCO Lock Trap Raw Status
     */
    inline bool get_TRAPRAW_SVCOLCKT() volatile
    {
        return TRAPRAW & (1u << 2u);
    }

    /**
     * Get TRAPRAW's SOSCWDGT bit.
     *
     * OSC_HP Oscillator Watchdog Trap Raw Status
     */
    inline bool get_TRAPRAW_SOSCWDGT() volatile
    {
        return TRAPRAW & (1u << 0u);
    }

    /**
     * Get all of TRAPRAW's bit fields.
     *
     * (read-only) Trap Raw Status Register
     */
    inline void get_TRAPRAW(bool &BWERR1T, bool &BWERR0T, bool &ULPWDGT,
                            bool &BRWNT, bool &PET, bool &UVCOLCKT,
                            bool &SVCOLCKT, bool &SOSCWDGT) volatile
    {
        uint32_t curr = TRAPRAW;

        BWERR1T = curr & (1u << 8u);
        BWERR0T = curr & (1u << 7u);
        ULPWDGT = curr & (1u << 6u);
        BRWNT = curr & (1u << 5u);
        PET = curr & (1u << 4u);
        UVCOLCKT = curr & (1u << 3u);
        SVCOLCKT = curr & (1u << 2u);
        SOSCWDGT = curr & (1u << 0u);
    }

    /**
     * Get TRAPDIS's BWERR1T bit.
     *
     * Peripheral Bridge 1 Trap Disable
     */
    inline bool get_TRAPDIS_BWERR1T() volatile
    {
        return TRAPDIS & (1u << 8u);
    }

    /**
     * Set TRAPDIS's BWERR1T bit.
     *
     * Peripheral Bridge 1 Trap Disable
     */
    inline void set_TRAPDIS_BWERR1T() volatile
    {
        TRAPDIS |= 1u << 8u;
    }

    /**
     * Clear TRAPDIS's BWERR1T bit.
     *
     * Peripheral Bridge 1 Trap Disable
     */
    inline void clear_TRAPDIS_BWERR1T() volatile
    {
        TRAPDIS &= ~(1u << 8u);
    }

    /**
     * Toggle TRAPDIS's BWERR1T bit.
     *
     * Peripheral Bridge 1 Trap Disable
     */
    inline void toggle_TRAPDIS_BWERR1T() volatile
    {
        TRAPDIS ^= 1u << 8u;
    }

    /**
     * Get TRAPDIS's BWERR0T bit.
     *
     * Peripheral Bridge 0 Trap Disable
     */
    inline bool get_TRAPDIS_BWERR0T() volatile
    {
        return TRAPDIS & (1u << 7u);
    }

    /**
     * Set TRAPDIS's BWERR0T bit.
     *
     * Peripheral Bridge 0 Trap Disable
     */
    inline void set_TRAPDIS_BWERR0T() volatile
    {
        TRAPDIS |= 1u << 7u;
    }

    /**
     * Clear TRAPDIS's BWERR0T bit.
     *
     * Peripheral Bridge 0 Trap Disable
     */
    inline void clear_TRAPDIS_BWERR0T() volatile
    {
        TRAPDIS &= ~(1u << 7u);
    }

    /**
     * Toggle TRAPDIS's BWERR0T bit.
     *
     * Peripheral Bridge 0 Trap Disable
     */
    inline void toggle_TRAPDIS_BWERR0T() volatile
    {
        TRAPDIS ^= 1u << 7u;
    }

    /**
     * Get TRAPDIS's ULPWDGT bit.
     *
     * OSC_ULP Oscillator Watchdog Trap Disable
     */
    inline bool get_TRAPDIS_ULPWDGT() volatile
    {
        return TRAPDIS & (1u << 6u);
    }

    /**
     * Set TRAPDIS's ULPWDGT bit.
     *
     * OSC_ULP Oscillator Watchdog Trap Disable
     */
    inline void set_TRAPDIS_ULPWDGT() volatile
    {
        TRAPDIS |= 1u << 6u;
    }

    /**
     * Clear TRAPDIS's ULPWDGT bit.
     *
     * OSC_ULP Oscillator Watchdog Trap Disable
     */
    inline void clear_TRAPDIS_ULPWDGT() volatile
    {
        TRAPDIS &= ~(1u << 6u);
    }

    /**
     * Toggle TRAPDIS's ULPWDGT bit.
     *
     * OSC_ULP Oscillator Watchdog Trap Disable
     */
    inline void toggle_TRAPDIS_ULPWDGT() volatile
    {
        TRAPDIS ^= 1u << 6u;
    }

    /**
     * Get TRAPDIS's BRWNT bit.
     *
     * Brown Out Trap Disable
     */
    inline bool get_TRAPDIS_BRWNT() volatile
    {
        return TRAPDIS & (1u << 5u);
    }

    /**
     * Set TRAPDIS's BRWNT bit.
     *
     * Brown Out Trap Disable
     */
    inline void set_TRAPDIS_BRWNT() volatile
    {
        TRAPDIS |= 1u << 5u;
    }

    /**
     * Clear TRAPDIS's BRWNT bit.
     *
     * Brown Out Trap Disable
     */
    inline void clear_TRAPDIS_BRWNT() volatile
    {
        TRAPDIS &= ~(1u << 5u);
    }

    /**
     * Toggle TRAPDIS's BRWNT bit.
     *
     * Brown Out Trap Disable
     */
    inline void toggle_TRAPDIS_BRWNT() volatile
    {
        TRAPDIS ^= 1u << 5u;
    }

    /**
     * Get TRAPDIS's PET bit.
     *
     * Parity Error Trap Disable
     */
    inline bool get_TRAPDIS_PET() volatile
    {
        return TRAPDIS & (1u << 4u);
    }

    /**
     * Set TRAPDIS's PET bit.
     *
     * Parity Error Trap Disable
     */
    inline void set_TRAPDIS_PET() volatile
    {
        TRAPDIS |= 1u << 4u;
    }

    /**
     * Clear TRAPDIS's PET bit.
     *
     * Parity Error Trap Disable
     */
    inline void clear_TRAPDIS_PET() volatile
    {
        TRAPDIS &= ~(1u << 4u);
    }

    /**
     * Toggle TRAPDIS's PET bit.
     *
     * Parity Error Trap Disable
     */
    inline void toggle_TRAPDIS_PET() volatile
    {
        TRAPDIS ^= 1u << 4u;
    }

    /**
     * Get TRAPDIS's UVCOLCKT bit.
     *
     * USB VCO Lock Trap Disable
     */
    inline bool get_TRAPDIS_UVCOLCKT() volatile
    {
        return TRAPDIS & (1u << 3u);
    }

    /**
     * Set TRAPDIS's UVCOLCKT bit.
     *
     * USB VCO Lock Trap Disable
     */
    inline void set_TRAPDIS_UVCOLCKT() volatile
    {
        TRAPDIS |= 1u << 3u;
    }

    /**
     * Clear TRAPDIS's UVCOLCKT bit.
     *
     * USB VCO Lock Trap Disable
     */
    inline void clear_TRAPDIS_UVCOLCKT() volatile
    {
        TRAPDIS &= ~(1u << 3u);
    }

    /**
     * Toggle TRAPDIS's UVCOLCKT bit.
     *
     * USB VCO Lock Trap Disable
     */
    inline void toggle_TRAPDIS_UVCOLCKT() volatile
    {
        TRAPDIS ^= 1u << 3u;
    }

    /**
     * Get TRAPDIS's SVCOLCKT bit.
     *
     * System VCO Lock Trap Disable
     */
    inline bool get_TRAPDIS_SVCOLCKT() volatile
    {
        return TRAPDIS & (1u << 2u);
    }

    /**
     * Set TRAPDIS's SVCOLCKT bit.
     *
     * System VCO Lock Trap Disable
     */
    inline void set_TRAPDIS_SVCOLCKT() volatile
    {
        TRAPDIS |= 1u << 2u;
    }

    /**
     * Clear TRAPDIS's SVCOLCKT bit.
     *
     * System VCO Lock Trap Disable
     */
    inline void clear_TRAPDIS_SVCOLCKT() volatile
    {
        TRAPDIS &= ~(1u << 2u);
    }

    /**
     * Toggle TRAPDIS's SVCOLCKT bit.
     *
     * System VCO Lock Trap Disable
     */
    inline void toggle_TRAPDIS_SVCOLCKT() volatile
    {
        TRAPDIS ^= 1u << 2u;
    }

    /**
     * Get TRAPDIS's SOSCWDGT bit.
     *
     * OSC_HP Oscillator Watchdog Trap Disable
     */
    inline bool get_TRAPDIS_SOSCWDGT() volatile
    {
        return TRAPDIS & (1u << 0u);
    }

    /**
     * Set TRAPDIS's SOSCWDGT bit.
     *
     * OSC_HP Oscillator Watchdog Trap Disable
     */
    inline void set_TRAPDIS_SOSCWDGT() volatile
    {
        TRAPDIS |= 1u << 0u;
    }

    /**
     * Clear TRAPDIS's SOSCWDGT bit.
     *
     * OSC_HP Oscillator Watchdog Trap Disable
     */
    inline void clear_TRAPDIS_SOSCWDGT() volatile
    {
        TRAPDIS &= ~(1u << 0u);
    }

    /**
     * Toggle TRAPDIS's SOSCWDGT bit.
     *
     * OSC_HP Oscillator Watchdog Trap Disable
     */
    inline void toggle_TRAPDIS_SOSCWDGT() volatile
    {
        TRAPDIS ^= 1u << 0u;
    }

    /**
     * Get all of TRAPDIS's bit fields.
     *
     * (read-write) Trap Disable Register
     */
    inline void get_TRAPDIS(bool &BWERR1T, bool &BWERR0T, bool &ULPWDGT,
                            bool &BRWNT, bool &PET, bool &UVCOLCKT,
                            bool &SVCOLCKT, bool &SOSCWDGT) volatile
    {
        uint32_t curr = TRAPDIS;

        BWERR1T = curr & (1u << 8u);
        BWERR0T = curr & (1u << 7u);
        ULPWDGT = curr & (1u << 6u);
        BRWNT = curr & (1u << 5u);
        PET = curr & (1u << 4u);
        UVCOLCKT = curr & (1u << 3u);
        SVCOLCKT = curr & (1u << 2u);
        SOSCWDGT = curr & (1u << 0u);
    }

    /**
     * Set all of TRAPDIS's bit fields.
     *
     * (read-write) Trap Disable Register
     */
    inline void set_TRAPDIS(bool BWERR1T, bool BWERR0T, bool ULPWDGT,
                            bool BRWNT, bool PET, bool UVCOLCKT, bool SVCOLCKT,
                            bool SOSCWDGT) volatile
    {
        uint32_t curr = TRAPDIS;

        curr &= ~(0b1u << 8u);
        curr |= (BWERR1T & 0b1u) << 8u;
        curr &= ~(0b1u << 7u);
        curr |= (BWERR0T & 0b1u) << 7u;
        curr &= ~(0b1u << 6u);
        curr |= (ULPWDGT & 0b1u) << 6u;
        curr &= ~(0b1u << 5u);
        curr |= (BRWNT & 0b1u) << 5u;
        curr &= ~(0b1u << 4u);
        curr |= (PET & 0b1u) << 4u;
        curr &= ~(0b1u << 3u);
        curr |= (UVCOLCKT & 0b1u) << 3u;
        curr &= ~(0b1u << 2u);
        curr |= (SVCOLCKT & 0b1u) << 2u;
        curr &= ~(0b1u << 0u);
        curr |= (SOSCWDGT & 0b1u) << 0u;

        TRAPDIS = curr;
    }

    /**
     * Set TRAPCLR's BWERR1T bit.
     *
     * Peripheral Bridge 1 Trap Clear
     */
    inline void set_TRAPCLR_BWERR1T() volatile
    {
        TRAPCLR |= 1u << 8u;
    }

    /**
     * Clear TRAPCLR's BWERR1T bit.
     *
     * Peripheral Bridge 1 Trap Clear
     */
    inline void clear_TRAPCLR_BWERR1T() volatile
    {
        TRAPCLR &= ~(1u << 8u);
    }

    /**
     * Toggle TRAPCLR's BWERR1T bit.
     *
     * Peripheral Bridge 1 Trap Clear
     */
    inline void toggle_TRAPCLR_BWERR1T() volatile
    {
        TRAPCLR ^= 1u << 8u;
    }

    /**
     * Set TRAPCLR's BWERR0T bit.
     *
     * Peripheral Bridge 0 Trap Clear
     */
    inline void set_TRAPCLR_BWERR0T() volatile
    {
        TRAPCLR |= 1u << 7u;
    }

    /**
     * Clear TRAPCLR's BWERR0T bit.
     *
     * Peripheral Bridge 0 Trap Clear
     */
    inline void clear_TRAPCLR_BWERR0T() volatile
    {
        TRAPCLR &= ~(1u << 7u);
    }

    /**
     * Toggle TRAPCLR's BWERR0T bit.
     *
     * Peripheral Bridge 0 Trap Clear
     */
    inline void toggle_TRAPCLR_BWERR0T() volatile
    {
        TRAPCLR ^= 1u << 7u;
    }

    /**
     * Set TRAPCLR's ULPWDGT bit.
     *
     * OSC_ULP Oscillator Watchdog Trap Clear
     */
    inline void set_TRAPCLR_ULPWDGT() volatile
    {
        TRAPCLR |= 1u << 6u;
    }

    /**
     * Clear TRAPCLR's ULPWDGT bit.
     *
     * OSC_ULP Oscillator Watchdog Trap Clear
     */
    inline void clear_TRAPCLR_ULPWDGT() volatile
    {
        TRAPCLR &= ~(1u << 6u);
    }

    /**
     * Toggle TRAPCLR's ULPWDGT bit.
     *
     * OSC_ULP Oscillator Watchdog Trap Clear
     */
    inline void toggle_TRAPCLR_ULPWDGT() volatile
    {
        TRAPCLR ^= 1u << 6u;
    }

    /**
     * Set TRAPCLR's BRWNT bit.
     *
     * Brown Out Trap Clear
     */
    inline void set_TRAPCLR_BRWNT() volatile
    {
        TRAPCLR |= 1u << 5u;
    }

    /**
     * Clear TRAPCLR's BRWNT bit.
     *
     * Brown Out Trap Clear
     */
    inline void clear_TRAPCLR_BRWNT() volatile
    {
        TRAPCLR &= ~(1u << 5u);
    }

    /**
     * Toggle TRAPCLR's BRWNT bit.
     *
     * Brown Out Trap Clear
     */
    inline void toggle_TRAPCLR_BRWNT() volatile
    {
        TRAPCLR ^= 1u << 5u;
    }

    /**
     * Set TRAPCLR's PET bit.
     *
     * Parity Error Trap Clear
     */
    inline void set_TRAPCLR_PET() volatile
    {
        TRAPCLR |= 1u << 4u;
    }

    /**
     * Clear TRAPCLR's PET bit.
     *
     * Parity Error Trap Clear
     */
    inline void clear_TRAPCLR_PET() volatile
    {
        TRAPCLR &= ~(1u << 4u);
    }

    /**
     * Toggle TRAPCLR's PET bit.
     *
     * Parity Error Trap Clear
     */
    inline void toggle_TRAPCLR_PET() volatile
    {
        TRAPCLR ^= 1u << 4u;
    }

    /**
     * Set TRAPCLR's UVCOLCKT bit.
     *
     * USB VCO Lock Trap Clear
     */
    inline void set_TRAPCLR_UVCOLCKT() volatile
    {
        TRAPCLR |= 1u << 3u;
    }

    /**
     * Clear TRAPCLR's UVCOLCKT bit.
     *
     * USB VCO Lock Trap Clear
     */
    inline void clear_TRAPCLR_UVCOLCKT() volatile
    {
        TRAPCLR &= ~(1u << 3u);
    }

    /**
     * Toggle TRAPCLR's UVCOLCKT bit.
     *
     * USB VCO Lock Trap Clear
     */
    inline void toggle_TRAPCLR_UVCOLCKT() volatile
    {
        TRAPCLR ^= 1u << 3u;
    }

    /**
     * Set TRAPCLR's SVCOLCKT bit.
     *
     * System VCO Lock Trap Clear
     */
    inline void set_TRAPCLR_SVCOLCKT() volatile
    {
        TRAPCLR |= 1u << 2u;
    }

    /**
     * Clear TRAPCLR's SVCOLCKT bit.
     *
     * System VCO Lock Trap Clear
     */
    inline void clear_TRAPCLR_SVCOLCKT() volatile
    {
        TRAPCLR &= ~(1u << 2u);
    }

    /**
     * Toggle TRAPCLR's SVCOLCKT bit.
     *
     * System VCO Lock Trap Clear
     */
    inline void toggle_TRAPCLR_SVCOLCKT() volatile
    {
        TRAPCLR ^= 1u << 2u;
    }

    /**
     * Set TRAPCLR's SOSCWDGT bit.
     *
     * OSC_HP Oscillator Watchdog Trap Clear
     */
    inline void set_TRAPCLR_SOSCWDGT() volatile
    {
        TRAPCLR |= 1u << 0u;
    }

    /**
     * Clear TRAPCLR's SOSCWDGT bit.
     *
     * OSC_HP Oscillator Watchdog Trap Clear
     */
    inline void clear_TRAPCLR_SOSCWDGT() volatile
    {
        TRAPCLR &= ~(1u << 0u);
    }

    /**
     * Toggle TRAPCLR's SOSCWDGT bit.
     *
     * OSC_HP Oscillator Watchdog Trap Clear
     */
    inline void toggle_TRAPCLR_SOSCWDGT() volatile
    {
        TRAPCLR ^= 1u << 0u;
    }

    /**
     * Set all of TRAPCLR's bit fields.
     *
     * (write-only) Trap Clear Register
     */
    inline void set_TRAPCLR(bool BWERR1T, bool BWERR0T, bool ULPWDGT,
                            bool BRWNT, bool PET, bool UVCOLCKT, bool SVCOLCKT,
                            bool SOSCWDGT) volatile
    {
        uint32_t curr = TRAPCLR;

        curr &= ~(0b1u << 8u);
        curr |= (BWERR1T & 0b1u) << 8u;
        curr &= ~(0b1u << 7u);
        curr |= (BWERR0T & 0b1u) << 7u;
        curr &= ~(0b1u << 6u);
        curr |= (ULPWDGT & 0b1u) << 6u;
        curr &= ~(0b1u << 5u);
        curr |= (BRWNT & 0b1u) << 5u;
        curr &= ~(0b1u << 4u);
        curr |= (PET & 0b1u) << 4u;
        curr &= ~(0b1u << 3u);
        curr |= (UVCOLCKT & 0b1u) << 3u;
        curr &= ~(0b1u << 2u);
        curr |= (SVCOLCKT & 0b1u) << 2u;
        curr &= ~(0b1u << 0u);
        curr |= (SOSCWDGT & 0b1u) << 0u;

        TRAPCLR = curr;
    }

    /**
     * Set TRAPSET's BWERR1T bit.
     *
     * Peripheral Bridge 1 Trap Set
     */
    inline void set_TRAPSET_BWERR1T() volatile
    {
        TRAPSET |= 1u << 8u;
    }

    /**
     * Clear TRAPSET's BWERR1T bit.
     *
     * Peripheral Bridge 1 Trap Set
     */
    inline void clear_TRAPSET_BWERR1T() volatile
    {
        TRAPSET &= ~(1u << 8u);
    }

    /**
     * Toggle TRAPSET's BWERR1T bit.
     *
     * Peripheral Bridge 1 Trap Set
     */
    inline void toggle_TRAPSET_BWERR1T() volatile
    {
        TRAPSET ^= 1u << 8u;
    }

    /**
     * Set TRAPSET's BWERR0T bit.
     *
     * Peripheral Bridge 0 Trap Set
     */
    inline void set_TRAPSET_BWERR0T() volatile
    {
        TRAPSET |= 1u << 7u;
    }

    /**
     * Clear TRAPSET's BWERR0T bit.
     *
     * Peripheral Bridge 0 Trap Set
     */
    inline void clear_TRAPSET_BWERR0T() volatile
    {
        TRAPSET &= ~(1u << 7u);
    }

    /**
     * Toggle TRAPSET's BWERR0T bit.
     *
     * Peripheral Bridge 0 Trap Set
     */
    inline void toggle_TRAPSET_BWERR0T() volatile
    {
        TRAPSET ^= 1u << 7u;
    }

    /**
     * Set TRAPSET's ULPWDT bit.
     *
     * OSC_ULP Oscillator Watchdog Trap Set
     */
    inline void set_TRAPSET_ULPWDT() volatile
    {
        TRAPSET |= 1u << 6u;
    }

    /**
     * Clear TRAPSET's ULPWDT bit.
     *
     * OSC_ULP Oscillator Watchdog Trap Set
     */
    inline void clear_TRAPSET_ULPWDT() volatile
    {
        TRAPSET &= ~(1u << 6u);
    }

    /**
     * Toggle TRAPSET's ULPWDT bit.
     *
     * OSC_ULP Oscillator Watchdog Trap Set
     */
    inline void toggle_TRAPSET_ULPWDT() volatile
    {
        TRAPSET ^= 1u << 6u;
    }

    /**
     * Set TRAPSET's BRWNT bit.
     *
     * Brown Out Trap Set
     */
    inline void set_TRAPSET_BRWNT() volatile
    {
        TRAPSET |= 1u << 5u;
    }

    /**
     * Clear TRAPSET's BRWNT bit.
     *
     * Brown Out Trap Set
     */
    inline void clear_TRAPSET_BRWNT() volatile
    {
        TRAPSET &= ~(1u << 5u);
    }

    /**
     * Toggle TRAPSET's BRWNT bit.
     *
     * Brown Out Trap Set
     */
    inline void toggle_TRAPSET_BRWNT() volatile
    {
        TRAPSET ^= 1u << 5u;
    }

    /**
     * Set TRAPSET's PET bit.
     *
     * Parity Error Trap Set
     */
    inline void set_TRAPSET_PET() volatile
    {
        TRAPSET |= 1u << 4u;
    }

    /**
     * Clear TRAPSET's PET bit.
     *
     * Parity Error Trap Set
     */
    inline void clear_TRAPSET_PET() volatile
    {
        TRAPSET &= ~(1u << 4u);
    }

    /**
     * Toggle TRAPSET's PET bit.
     *
     * Parity Error Trap Set
     */
    inline void toggle_TRAPSET_PET() volatile
    {
        TRAPSET ^= 1u << 4u;
    }

    /**
     * Set TRAPSET's UVCOLCKT bit.
     *
     * USB VCO Lock Trap Set
     */
    inline void set_TRAPSET_UVCOLCKT() volatile
    {
        TRAPSET |= 1u << 3u;
    }

    /**
     * Clear TRAPSET's UVCOLCKT bit.
     *
     * USB VCO Lock Trap Set
     */
    inline void clear_TRAPSET_UVCOLCKT() volatile
    {
        TRAPSET &= ~(1u << 3u);
    }

    /**
     * Toggle TRAPSET's UVCOLCKT bit.
     *
     * USB VCO Lock Trap Set
     */
    inline void toggle_TRAPSET_UVCOLCKT() volatile
    {
        TRAPSET ^= 1u << 3u;
    }

    /**
     * Set TRAPSET's SVCOLCKT bit.
     *
     * System VCO Lock Trap Set
     */
    inline void set_TRAPSET_SVCOLCKT() volatile
    {
        TRAPSET |= 1u << 2u;
    }

    /**
     * Clear TRAPSET's SVCOLCKT bit.
     *
     * System VCO Lock Trap Set
     */
    inline void clear_TRAPSET_SVCOLCKT() volatile
    {
        TRAPSET &= ~(1u << 2u);
    }

    /**
     * Toggle TRAPSET's SVCOLCKT bit.
     *
     * System VCO Lock Trap Set
     */
    inline void toggle_TRAPSET_SVCOLCKT() volatile
    {
        TRAPSET ^= 1u << 2u;
    }

    /**
     * Set TRAPSET's SOSCWDGT bit.
     *
     * OSC_HP Oscillator Watchdog Trap Set
     */
    inline void set_TRAPSET_SOSCWDGT() volatile
    {
        TRAPSET |= 1u << 0u;
    }

    /**
     * Clear TRAPSET's SOSCWDGT bit.
     *
     * OSC_HP Oscillator Watchdog Trap Set
     */
    inline void clear_TRAPSET_SOSCWDGT() volatile
    {
        TRAPSET &= ~(1u << 0u);
    }

    /**
     * Toggle TRAPSET's SOSCWDGT bit.
     *
     * OSC_HP Oscillator Watchdog Trap Set
     */
    inline void toggle_TRAPSET_SOSCWDGT() volatile
    {
        TRAPSET ^= 1u << 0u;
    }

    /**
     * Set all of TRAPSET's bit fields.
     *
     * (write-only) Trap Set Register
     */
    inline void set_TRAPSET(bool BWERR1T, bool BWERR0T, bool ULPWDT,
                            bool BRWNT, bool PET, bool UVCOLCKT, bool SVCOLCKT,
                            bool SOSCWDGT) volatile
    {
        uint32_t curr = TRAPSET;

        curr &= ~(0b1u << 8u);
        curr |= (BWERR1T & 0b1u) << 8u;
        curr &= ~(0b1u << 7u);
        curr |= (BWERR0T & 0b1u) << 7u;
        curr &= ~(0b1u << 6u);
        curr |= (ULPWDT & 0b1u) << 6u;
        curr &= ~(0b1u << 5u);
        curr |= (BRWNT & 0b1u) << 5u;
        curr &= ~(0b1u << 4u);
        curr |= (PET & 0b1u) << 4u;
        curr &= ~(0b1u << 3u);
        curr |= (UVCOLCKT & 0b1u) << 3u;
        curr &= ~(0b1u << 2u);
        curr |= (SVCOLCKT & 0b1u) << 2u;
        curr &= ~(0b1u << 0u);
        curr |= (SOSCWDGT & 0b1u) << 0u;

        TRAPSET = curr;
    }
};

static_assert(sizeof(scu_trap) == scu_trap::size);

static volatile scu_trap *const SCU_TRAP =
    reinterpret_cast<scu_trap *>(0x50004160);

}; // namespace XMC4700
