/**
 * \file
 * \brief Generated by ifgen (3.0.0).
 */
#pragma once

#include "../ifgen/common.h"
#include "CAN_MO.h"

namespace XMC4700
{

/**
 * Controller Area Networks
 */
struct [[gnu::packed]] can
{
    /* Constant attributes. */
    static constexpr uint16_t id = 1;         /*!< can's identifier. */
    static constexpr std::size_t size = 8192; /*!< can's size in bytes. */

    /* Fields. */
    static constexpr std::size_t MO_length = 256;
    CAN_MO MO[MO_length]; /*!< Message Object Registers */

    /* Methods. */
};

static_assert(sizeof(can) == can::size);

static volatile can *const CAN_MO = reinterpret_cast<can *>(0x48015000);

static volatile can *const CAN_NODE0 = reinterpret_cast<can *>(0x48014200);

static volatile can *const CAN = reinterpret_cast<can *>(0x48014000);

static volatile can *const CAN_NODE1 = reinterpret_cast<can *>(0x48014300);

static volatile can *const CAN_NODE2 = reinterpret_cast<can *>(0x48014400);

static volatile can *const CAN_NODE3 = reinterpret_cast<can *>(0x48014500);

static volatile can *const CAN_NODE4 = reinterpret_cast<can *>(0x48014600);

static volatile can *const CAN_NODE5 = reinterpret_cast<can *>(0x48014700);

}; // namespace XMC4700
