/**
 * \file
 * \brief Generated by ifgen (3.0.0).
 */
#pragma once

#include "../enums/PREF_PCON_DBYP.h"
#include "../enums/PREF_PCON_IBYP.h"
#include "../enums/PREF_PCON_IINV.h"
#include "../ifgen/common.h"

namespace XMC4700
{

/**
 * Prefetch Unit
 */
struct [[gnu::packed]] pref
{
    /* Constant attributes. */
    static constexpr uint16_t id = 1;      /*!< pref's identifier. */
    static constexpr std::size_t size = 4; /*!< pref's size in bytes. */

    /* Fields. */
    uint32_t PCON; /*!< (read-write) Prefetch Configuration Register */

    /* Methods. */

    /**
     * Get PCON's DBYP bit.
     */
    PREF_PCON_DBYP get_PCON_DBYP()
    {
        return PREF_PCON_DBYP(PCON & (1u << 4u));
    }

    /**
     * Set PCON's DBYP bit.
     */
    inline void set_PCON_DBYP()
    {
        PCON |= 1u << 4u;
    }

    /**
     * Clear PCON's DBYP bit.
     */
    inline void clear_PCON_DBYP()
    {
        PCON &= ~(1u << 4u);
    }

    /**
     * Toggle PCON's DBYP bit.
     */
    inline void toggle_PCON_DBYP()
    {
        PCON ^= 1u << 4u;
    }

    /**
     * Set PCON's IINV bit.
     */
    inline void set_PCON_IINV()
    {
        PCON |= 1u << 1u;
    }

    /**
     * Clear PCON's IINV bit.
     */
    inline void clear_PCON_IINV()
    {
        PCON &= ~(1u << 1u);
    }

    /**
     * Toggle PCON's IINV bit.
     */
    inline void toggle_PCON_IINV()
    {
        PCON ^= 1u << 1u;
    }

    /**
     * Get PCON's IBYP bit.
     */
    PREF_PCON_IBYP get_PCON_IBYP()
    {
        return PREF_PCON_IBYP(PCON & (1u << 0u));
    }

    /**
     * Set PCON's IBYP bit.
     */
    inline void set_PCON_IBYP()
    {
        PCON |= 1u << 0u;
    }

    /**
     * Clear PCON's IBYP bit.
     */
    inline void clear_PCON_IBYP()
    {
        PCON &= ~(1u << 0u);
    }

    /**
     * Toggle PCON's IBYP bit.
     */
    inline void toggle_PCON_IBYP()
    {
        PCON ^= 1u << 0u;
    }
};

static_assert(sizeof(pref) == pref::size);

static volatile pref *const PREF = reinterpret_cast<pref *>(0x58004000);

}; // namespace XMC4700
