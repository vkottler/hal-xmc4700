/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_HCFG_FrListEn : uint8_t
{
    8_entries /*!< 8 Entries */,
    16_entries = 1 /*!< 16 Entries */,
    32_entries = 2 /*!< 32 Entries */,
    64_entries = 3 /*!< 64 Entries */
};
static_assert(sizeof(USB0_HCFG_FrListEn) == 1);

/**
 * Converts USB0_HCFG_FrListEn to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_HCFG_FrListEn instance)
{
    const char *result = "UNKNOWN USB0_HCFG_FrListEn";

    switch (instance)
    {
    case USB0_HCFG_FrListEn::8_entries:
        result = "8_entries";
        break;
    case USB0_HCFG_FrListEn::16_entries:
        result = "16_entries";
        break;
    case USB0_HCFG_FrListEn::32_entries:
        result = "32_entries";
        break;
    case USB0_HCFG_FrListEn::64_entries:
        result = "64_entries";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_HCFG_FrListEn.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB0_HCFG_FrListEn &output)
{
    bool result = false;

    if ((result = !strncmp(data, "8_entries", 9)))
    {
        output = USB0_HCFG_FrListEn::8_entries;
    }
    else if ((result = !strncmp(data, "16_entries", 10)))
    {
        output = USB0_HCFG_FrListEn::16_entries;
    }
    else if ((result = !strncmp(data, "32_entries", 10)))
    {
        output = USB0_HCFG_FrListEn::32_entries;
    }
    else if ((result = !strncmp(data, "64_entries", 10)))
    {
        output = USB0_HCFG_FrListEn::64_entries;
    }

    return result;
}

}; // namespace XMC4700
