/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_G0_QMR0_ENGT : uint8_t
{
    no_conversion_requests_issued /*!< No conversion requests are issued */,
    conversion_requests_issued_if_valid_conversio_cont =
        1 /*!< Conversion requests are issued if a valid conversion request is
             pending in the queue 0 register or in the backup register */
        ,
    conversion_requests_issued_if_valid_conversio_cont_ =
        2 /*!< Conversion requests are issued if a valid conversion request is
             pending in the queue 0 register or in the backup register and
             REQGTx = 1 */
        ,
    conversion_requests_issued_if_valid_conversio_cont__ =
        3 /*!< Conversion requests are issued if a valid conversion request is
             pending in the queue 0 register or in the backup register and
             REQGTx = 0 */
};
static_assert(sizeof(VADC_G0_QMR0_ENGT) == 1);

/**
 * Converts VADC_G0_QMR0_ENGT to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_G0_QMR0_ENGT instance)
{
    const char *result = "UNKNOWN VADC_G0_QMR0_ENGT";

    switch (instance)
    {
    case VADC_G0_QMR0_ENGT::no_conversion_requests_issued:
        result = "no_conversion_requests_issued";
        break;
    case VADC_G0_QMR0_ENGT::conversion_requests_issued_if_valid_conversio_cont:
        result = "conversion_requests_issued_if_valid_conversio_cont";
        break;
    case VADC_G0_QMR0_ENGT::
        conversion_requests_issued_if_valid_conversio_cont_:
        result = "conversion_requests_issued_if_valid_conversio_cont_";
        break;
    case VADC_G0_QMR0_ENGT::
        conversion_requests_issued_if_valid_conversio_cont__:
        result = "conversion_requests_issued_if_valid_conversio_cont__";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_G0_QMR0_ENGT.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_G0_QMR0_ENGT &output)
{
    bool result = false;

    if ((result = !strncmp(data, "no_conversion_requests_issued", 29)))
    {
        output = VADC_G0_QMR0_ENGT::no_conversion_requests_issued;
    }
    else if ((result = !strncmp(
                  data, "conversion_requests_issued_if_valid_conversio_cont",
                  50)))
    {
        output = VADC_G0_QMR0_ENGT::
            conversion_requests_issued_if_valid_conversio_cont;
    }
    else if ((result = !strncmp(
                  data, "conversion_requests_issued_if_valid_conversio_cont_",
                  51)))
    {
        output = VADC_G0_QMR0_ENGT::
            conversion_requests_issued_if_valid_conversio_cont_;
    }
    else if ((result = !strncmp(
                  data, "conversion_requests_issued_if_valid_conversio_cont__",
                  52)))
    {
        output = VADC_G0_QMR0_ENGT::
            conversion_requests_issued_if_valid_conversio_cont__;
    }

    return result;
}

}; // namespace XMC4700
