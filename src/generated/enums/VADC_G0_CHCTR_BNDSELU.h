/**
 * \file
 * \brief Generated by ifgen (3.2.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_G0_CHCTR_BNDSELU : uint8_t
{
    roup_specific_boundary_0 /*!< Use group-specific boundary 0 */,
    roup_specific_boundary_1 = 1 /*!< Use group-specific boundary 1 */,
    lobal_boundary_0 = 2 /*!< Use global boundary 0 */,
    lobal_boundary_1 = 3 /*!< Use global boundary 1 */
};
static_assert(sizeof(VADC_G0_CHCTR_BNDSELU) == 1);

/**
 * Converts VADC_G0_CHCTR_BNDSELU to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_G0_CHCTR_BNDSELU instance)
{
    const char *result = "UNKNOWN VADC_G0_CHCTR_BNDSELU";

    switch (instance)
    {
    case VADC_G0_CHCTR_BNDSELU::roup_specific_boundary_0:
        result = "roup_specific_boundary_0";
        break;
    case VADC_G0_CHCTR_BNDSELU::roup_specific_boundary_1:
        result = "roup_specific_boundary_1";
        break;
    case VADC_G0_CHCTR_BNDSELU::lobal_boundary_0:
        result = "lobal_boundary_0";
        break;
    case VADC_G0_CHCTR_BNDSELU::lobal_boundary_1:
        result = "lobal_boundary_1";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_G0_CHCTR_BNDSELU.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_G0_CHCTR_BNDSELU &output)
{
    bool result = false;

    if ((result = !strncmp(data, "roup_specific_boundary_0", 24)))
    {
        output = VADC_G0_CHCTR_BNDSELU::roup_specific_boundary_0;
    }
    else if ((result = !strncmp(data, "roup_specific_boundary_1", 24)))
    {
        output = VADC_G0_CHCTR_BNDSELU::roup_specific_boundary_1;
    }
    else if ((result = !strncmp(data, "lobal_boundary_0", 16)))
    {
        output = VADC_G0_CHCTR_BNDSELU::lobal_boundary_0;
    }
    else if ((result = !strncmp(data, "lobal_boundary_1", 16)))
    {
        output = VADC_G0_CHCTR_BNDSELU::lobal_boundary_1;
    }

    return result;
}

}; // namespace XMC4700
