/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class CCU80_GCTRL_MSE3 : uint8_t
{
    only_be_requested_by_sw /*!< Shadow transfer can only be requested by SW */
        ,
    be_requested_via_sw_via_ccu8xmcss_input =
        1 /*!< Shadow transfer can be requested via SW and via the CCU8x.MCSS
             input. */
};
static_assert(sizeof(CCU80_GCTRL_MSE3) == 1);

/**
 * Converts CCU80_GCTRL_MSE3 to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CCU80_GCTRL_MSE3 instance)
{
    const char *result = "UNKNOWN CCU80_GCTRL_MSE3";

    switch (instance)
    {
    case CCU80_GCTRL_MSE3::only_be_requested_by_sw:
        result = "only_be_requested_by_sw";
        break;
    case CCU80_GCTRL_MSE3::be_requested_via_sw_via_ccu8xmcss_input:
        result = "be_requested_via_sw_via_ccu8xmcss_input";
        break;
    }

    return result;
}

/**
 * Converts a C string to CCU80_GCTRL_MSE3.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CCU80_GCTRL_MSE3 &output)
{
    bool result = false;

    if ((result = !strncmp(data, "only_be_requested_by_sw", 23)))
    {
        output = CCU80_GCTRL_MSE3::only_be_requested_by_sw;
    }
    else if ((result = !strncmp(
                  data, "be_requested_via_sw_via_ccu8xmcss_input", 39)))
    {
        output = CCU80_GCTRL_MSE3::be_requested_via_sw_via_ccu8xmcss_input;
    }

    return result;
}

}; // namespace XMC4700
