/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SDMMC_TRANSFER_MODE_BLOCK_COUNT_EN : uint8_t
{
    disable /*!< Disable */,
    enable = 1 /*!< Enable */
};
static_assert(sizeof(SDMMC_TRANSFER_MODE_BLOCK_COUNT_EN) == 1);

/**
 * Converts SDMMC_TRANSFER_MODE_BLOCK_COUNT_EN to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SDMMC_TRANSFER_MODE_BLOCK_COUNT_EN instance)
{
    const char *result = "UNKNOWN SDMMC_TRANSFER_MODE_BLOCK_COUNT_EN";

    switch (instance)
    {
    case SDMMC_TRANSFER_MODE_BLOCK_COUNT_EN::disable:
        result = "disable";
        break;
    case SDMMC_TRANSFER_MODE_BLOCK_COUNT_EN::enable:
        result = "enable";
        break;
    }

    return result;
}

/**
 * Converts a C string to SDMMC_TRANSFER_MODE_BLOCK_COUNT_EN.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        SDMMC_TRANSFER_MODE_BLOCK_COUNT_EN &output)
{
    bool result = false;

    if ((result = !strncmp(data, "disable", 7)))
    {
        output = SDMMC_TRANSFER_MODE_BLOCK_COUNT_EN::disable;
    }
    else if ((result = !strncmp(data, "enable", 6)))
    {
        output = SDMMC_TRANSFER_MODE_BLOCK_COUNT_EN::enable;
    }

    return result;
}

}; // namespace XMC4700
