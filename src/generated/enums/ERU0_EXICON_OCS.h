/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class ERU0_EXICON_OCS : uint8_t
{
    _0 /*!< Trigger pulses are sent to OGU0 */,
    _1 = 1 /*!< Trigger pulses are sent to OGU1 */,
    _2 = 2 /*!< Trigger pulses are sent to OGU2 */,
    _3 = 3 /*!< Trigger pulses are sent to OGU3 */
};
static_assert(sizeof(ERU0_EXICON_OCS) == 1);

/**
 * Converts ERU0_EXICON_OCS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(ERU0_EXICON_OCS instance)
{
    const char *result = "UNKNOWN ERU0_EXICON_OCS";

    switch (instance)
    {
    case ERU0_EXICON_OCS::_0:
        result = "_0";
        break;
    case ERU0_EXICON_OCS::_1:
        result = "_1";
        break;
    case ERU0_EXICON_OCS::_2:
        result = "_2";
        break;
    case ERU0_EXICON_OCS::_3:
        result = "_3";
        break;
    }

    return result;
}

/**
 * Converts a C string to ERU0_EXICON_OCS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, ERU0_EXICON_OCS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0", 2)))
    {
        output = ERU0_EXICON_OCS::_0;
    }
    else if ((result = !strncmp(data, "_1", 2)))
    {
        output = ERU0_EXICON_OCS::_1;
    }
    else if ((result = !strncmp(data, "_2", 2)))
    {
        output = ERU0_EXICON_OCS::_2;
    }
    else if ((result = !strncmp(data, "_3", 2)))
    {
        output = ERU0_EXICON_OCS::_3;
    }

    return result;
}

}; // namespace XMC4700
