/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SCU_PLL_PLLSTAT_BY : uint8_t
{
    not_entered /*!< Bypass Mode is not entered */,
    entered_input_fosc_selected_output_fpll =
        1 /*!< Bypass Mode is entered. Input fOSC is selected as output fPLL.
           */
};
static_assert(sizeof(SCU_PLL_PLLSTAT_BY) == 1);

/**
 * Converts SCU_PLL_PLLSTAT_BY to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SCU_PLL_PLLSTAT_BY instance)
{
    const char *result = "UNKNOWN SCU_PLL_PLLSTAT_BY";

    switch (instance)
    {
    case SCU_PLL_PLLSTAT_BY::not_entered:
        result = "not_entered";
        break;
    case SCU_PLL_PLLSTAT_BY::entered_input_fosc_selected_output_fpll:
        result = "entered_input_fosc_selected_output_fpll";
        break;
    }

    return result;
}

/**
 * Converts a C string to SCU_PLL_PLLSTAT_BY.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, SCU_PLL_PLLSTAT_BY &output)
{
    bool result = false;

    if ((result = !strncmp(data, "not_entered", 11)))
    {
        output = SCU_PLL_PLLSTAT_BY::not_entered;
    }
    else if ((result = !strncmp(
                  data, "entered_input_fosc_selected_output_fpll", 39)))
    {
        output = SCU_PLL_PLLSTAT_BY::entered_input_fosc_selected_output_fpll;
    }

    return result;
}

}; // namespace XMC4700
