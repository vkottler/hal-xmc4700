/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class ERU0_EXOCON_ISS : uint8_t
{
    peripheral_trigger_function_disabled /*!< The peripheral trigger function
                                            is disabled */
        ,
    input_eru_oguy1_selected = 1 /*!< Input ERU_OGUy1 is selected */,
    input_eru_oguy2_selected = 2 /*!< Input ERU_OGUy2 is selected */,
    input_eru_oguy3_selected = 3 /*!< Input ERU_OGUy3 is selected */
};
static_assert(sizeof(ERU0_EXOCON_ISS) == 1);

/**
 * Converts ERU0_EXOCON_ISS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(ERU0_EXOCON_ISS instance)
{
    const char *result = "UNKNOWN ERU0_EXOCON_ISS";

    switch (instance)
    {
    case ERU0_EXOCON_ISS::peripheral_trigger_function_disabled:
        result = "peripheral_trigger_function_disabled";
        break;
    case ERU0_EXOCON_ISS::input_eru_oguy1_selected:
        result = "input_eru_oguy1_selected";
        break;
    case ERU0_EXOCON_ISS::input_eru_oguy2_selected:
        result = "input_eru_oguy2_selected";
        break;
    case ERU0_EXOCON_ISS::input_eru_oguy3_selected:
        result = "input_eru_oguy3_selected";
        break;
    }

    return result;
}

/**
 * Converts a C string to ERU0_EXOCON_ISS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, ERU0_EXOCON_ISS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "peripheral_trigger_function_disabled", 36)))
    {
        output = ERU0_EXOCON_ISS::peripheral_trigger_function_disabled;
    }
    else if ((result = !strncmp(data, "input_eru_oguy1_selected", 24)))
    {
        output = ERU0_EXOCON_ISS::input_eru_oguy1_selected;
    }
    else if ((result = !strncmp(data, "input_eru_oguy2_selected", 24)))
    {
        output = ERU0_EXOCON_ISS::input_eru_oguy2_selected;
    }
    else if ((result = !strncmp(data, "input_eru_oguy3_selected", 24)))
    {
        output = ERU0_EXOCON_ISS::input_eru_oguy3_selected;
    }

    return result;
}

}; // namespace XMC4700
