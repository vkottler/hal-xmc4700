/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class CAN_NODE0_NECNT_LETD : uint8_t
{
    rece_cont /*!< The last error occurred while the CAN node x was receiver
                 (REC has been incremented). */
        ,
    tran_cont = 1 /*!< The last error occurred while the CAN node x was
                     transmitter (TEC has been incremented). */
};
static_assert(sizeof(CAN_NODE0_NECNT_LETD) == 1);

/**
 * Converts CAN_NODE0_NECNT_LETD to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CAN_NODE0_NECNT_LETD instance)
{
    const char *result = "UNKNOWN CAN_NODE0_NECNT_LETD";

    switch (instance)
    {
    case CAN_NODE0_NECNT_LETD::rece_cont:
        result = "rece_cont";
        break;
    case CAN_NODE0_NECNT_LETD::tran_cont:
        result = "tran_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to CAN_NODE0_NECNT_LETD.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CAN_NODE0_NECNT_LETD &output)
{
    bool result = false;

    if ((result = !strncmp(data, "rece_cont", 9)))
    {
        output = CAN_NODE0_NECNT_LETD::rece_cont;
    }
    else if ((result = !strncmp(data, "tran_cont", 9)))
    {
        output = CAN_NODE0_NECNT_LETD::tran_cont;
    }

    return result;
}

}; // namespace XMC4700
