/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class CAN_MO_MOSTAT_RTSEL : uint8_t
{
    not_selected_receive_or_transmit_operation /*!< Message object n is not
                                                  selected for receive or
                                                  transmit operation. */
        ,
    selected_receive_or_transmit_operation =
        1 /*!< Message object n is selected for receive or transmit operation.
           */
};
static_assert(sizeof(CAN_MO_MOSTAT_RTSEL) == 1);

/**
 * Converts CAN_MO_MOSTAT_RTSEL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CAN_MO_MOSTAT_RTSEL instance)
{
    const char *result = "UNKNOWN CAN_MO_MOSTAT_RTSEL";

    switch (instance)
    {
    case CAN_MO_MOSTAT_RTSEL::not_selected_receive_or_transmit_operation:
        result = "not_selected_receive_or_transmit_operation";
        break;
    case CAN_MO_MOSTAT_RTSEL::selected_receive_or_transmit_operation:
        result = "selected_receive_or_transmit_operation";
        break;
    }

    return result;
}

/**
 * Converts a C string to CAN_MO_MOSTAT_RTSEL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CAN_MO_MOSTAT_RTSEL &output)
{
    bool result = false;

    if ((result =
             !strncmp(data, "not_selected_receive_or_transmit_operation", 42)))
    {
        output =
            CAN_MO_MOSTAT_RTSEL::not_selected_receive_or_transmit_operation;
    }
    else if ((result = !strncmp(data, "selected_receive_or_transmit_operation",
                                38)))
    {
        output = CAN_MO_MOSTAT_RTSEL::selected_receive_or_transmit_operation;
    }

    return result;
}

}; // namespace XMC4700
