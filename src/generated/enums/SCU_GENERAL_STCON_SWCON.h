/**
 * \file
 * \brief Generated by ifgen (3.1.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SCU_GENERAL_STCON_SWCON : uint8_t
{
    value1 /*!< Normal mode, boot from Boot ROM */,
    value2 = 1 /*!< ASC BSL enabled */,
    value3 = 2 /*!< BMI customized boot enabled */,
    value4 = 3 /*!< CAN BSL enabled */,
    value5 = 4 /*!< Boot from Code SRAM */,
    value6 = 8 /*!< Boot from alternate Flash Address 0 */,
    value7 = 12 /*!< Boot from alternate Flash Address 1 */,
    value8 = 14 /*!< Enable fallback Alternate Boot Mode (ABM) */
};
static_assert(sizeof(SCU_GENERAL_STCON_SWCON) == 1);

/**
 * Converts SCU_GENERAL_STCON_SWCON to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SCU_GENERAL_STCON_SWCON instance)
{
    const char *result = "UNKNOWN SCU_GENERAL_STCON_SWCON";

    switch (instance)
    {
    case SCU_GENERAL_STCON_SWCON::value1:
        result = "value1";
        break;
    case SCU_GENERAL_STCON_SWCON::value2:
        result = "value2";
        break;
    case SCU_GENERAL_STCON_SWCON::value3:
        result = "value3";
        break;
    case SCU_GENERAL_STCON_SWCON::value4:
        result = "value4";
        break;
    case SCU_GENERAL_STCON_SWCON::value5:
        result = "value5";
        break;
    case SCU_GENERAL_STCON_SWCON::value6:
        result = "value6";
        break;
    case SCU_GENERAL_STCON_SWCON::value7:
        result = "value7";
        break;
    case SCU_GENERAL_STCON_SWCON::value8:
        result = "value8";
        break;
    }

    return result;
}

/**
 * Converts a C string to SCU_GENERAL_STCON_SWCON.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, SCU_GENERAL_STCON_SWCON &output)
{
    bool result = false;

    if ((result = !strncmp(data, "value1", 6)))
    {
        output = SCU_GENERAL_STCON_SWCON::value1;
    }
    else if ((result = !strncmp(data, "value2", 6)))
    {
        output = SCU_GENERAL_STCON_SWCON::value2;
    }
    else if ((result = !strncmp(data, "value3", 6)))
    {
        output = SCU_GENERAL_STCON_SWCON::value3;
    }
    else if ((result = !strncmp(data, "value4", 6)))
    {
        output = SCU_GENERAL_STCON_SWCON::value4;
    }
    else if ((result = !strncmp(data, "value5", 6)))
    {
        output = SCU_GENERAL_STCON_SWCON::value5;
    }
    else if ((result = !strncmp(data, "value6", 6)))
    {
        output = SCU_GENERAL_STCON_SWCON::value6;
    }
    else if ((result = !strncmp(data, "value7", 6)))
    {
        output = SCU_GENERAL_STCON_SWCON::value7;
    }
    else if ((result = !strncmp(data, "value8", 6)))
    {
        output = SCU_GENERAL_STCON_SWCON::value8;
    }

    return result;
}

}; // namespace XMC4700
