/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class DSD_CH0_FCFGA_ESEL : uint8_t
{
    always_each_new_result_value /*!< Always, for each new result value */,
    if_result_inside_boundary_band =
        1 /*!< If result is inside the boundary band */,
    if_result_outside_boundary_band =
        2 /*!< If result is outside the boundary band */
};
static_assert(sizeof(DSD_CH0_FCFGA_ESEL) == 1);

/**
 * Converts DSD_CH0_FCFGA_ESEL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(DSD_CH0_FCFGA_ESEL instance)
{
    const char *result = "UNKNOWN DSD_CH0_FCFGA_ESEL";

    switch (instance)
    {
    case DSD_CH0_FCFGA_ESEL::always_each_new_result_value:
        result = "always_each_new_result_value";
        break;
    case DSD_CH0_FCFGA_ESEL::if_result_inside_boundary_band:
        result = "if_result_inside_boundary_band";
        break;
    case DSD_CH0_FCFGA_ESEL::if_result_outside_boundary_band:
        result = "if_result_outside_boundary_band";
        break;
    }

    return result;
}

/**
 * Converts a C string to DSD_CH0_FCFGA_ESEL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, DSD_CH0_FCFGA_ESEL &output)
{
    bool result = false;

    if ((result = !strncmp(data, "always_each_new_result_value", 28)))
    {
        output = DSD_CH0_FCFGA_ESEL::always_each_new_result_value;
    }
    else if ((result = !strncmp(data, "if_result_inside_boundary_band", 30)))
    {
        output = DSD_CH0_FCFGA_ESEL::if_result_inside_boundary_band;
    }
    else if ((result = !strncmp(data, "if_result_outside_boundary_band", 31)))
    {
        output = DSD_CH0_FCFGA_ESEL::if_result_outside_boundary_band;
    }

    return result;
}

}; // namespace XMC4700
