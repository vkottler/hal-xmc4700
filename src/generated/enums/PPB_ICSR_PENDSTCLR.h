/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class PPB_ICSR_PENDSTCLR : uint8_t
{
    no_effect /*!< no effect */,
    removes_pending_state_systick_exception =
        1 /*!< removes the pending state from the SysTick exception. */
};
static_assert(sizeof(PPB_ICSR_PENDSTCLR) == 1);

/**
 * Converts PPB_ICSR_PENDSTCLR to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(PPB_ICSR_PENDSTCLR instance)
{
    const char *result = "UNKNOWN PPB_ICSR_PENDSTCLR";

    switch (instance)
    {
    case PPB_ICSR_PENDSTCLR::no_effect:
        result = "no_effect";
        break;
    case PPB_ICSR_PENDSTCLR::removes_pending_state_systick_exception:
        result = "removes_pending_state_systick_exception";
        break;
    }

    return result;
}

/**
 * Converts a C string to PPB_ICSR_PENDSTCLR.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, PPB_ICSR_PENDSTCLR &output)
{
    bool result = false;

    if ((result = !strncmp(data, "no_effect", 9)))
    {
        output = PPB_ICSR_PENDSTCLR::no_effect;
    }
    else if ((result = !strncmp(
                  data, "removes_pending_state_systick_exception", 39)))
    {
        output = PPB_ICSR_PENDSTCLR::removes_pending_state_systick_exception;
    }

    return result;
}

}; // namespace XMC4700
