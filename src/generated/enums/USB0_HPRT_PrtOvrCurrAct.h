/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_HPRT_PrtOvrCurrAct : uint8_t
{
    no_overcurrent_condition /*!< No overcurrent condition */,
    overcurrent_condition = 1 /*!< Overcurrent condition */
};
static_assert(sizeof(USB0_HPRT_PrtOvrCurrAct) == 1);

/**
 * Converts USB0_HPRT_PrtOvrCurrAct to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_HPRT_PrtOvrCurrAct instance)
{
    const char *result = "UNKNOWN USB0_HPRT_PrtOvrCurrAct";

    switch (instance)
    {
    case USB0_HPRT_PrtOvrCurrAct::no_overcurrent_condition:
        result = "no_overcurrent_condition";
        break;
    case USB0_HPRT_PrtOvrCurrAct::overcurrent_condition:
        result = "overcurrent_condition";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_HPRT_PrtOvrCurrAct.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB0_HPRT_PrtOvrCurrAct &output)
{
    bool result = false;

    if ((result = !strncmp(data, "no_overcurrent_condition", 24)))
    {
        output = USB0_HPRT_PrtOvrCurrAct::no_overcurrent_condition;
    }
    else if ((result = !strncmp(data, "overcurrent_condition", 21)))
    {
        output = USB0_HPRT_PrtOvrCurrAct::overcurrent_condition;
    }

    return result;
}

}; // namespace XMC4700
