/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_G0_QSR0_EMPTY : uint8_t
{
    there_valid_entries_queue_see_fill /*!< There are valid entries in the
                                          queue (see FILL) */
        ,
    no_valid_entries_queue_empty = 1 /*!< No valid entries (queue is empty) */
};
static_assert(sizeof(VADC_G0_QSR0_EMPTY) == 1);

/**
 * Converts VADC_G0_QSR0_EMPTY to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_G0_QSR0_EMPTY instance)
{
    const char *result = "UNKNOWN VADC_G0_QSR0_EMPTY";

    switch (instance)
    {
    case VADC_G0_QSR0_EMPTY::there_valid_entries_queue_see_fill:
        result = "there_valid_entries_queue_see_fill";
        break;
    case VADC_G0_QSR0_EMPTY::no_valid_entries_queue_empty:
        result = "no_valid_entries_queue_empty";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_G0_QSR0_EMPTY.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_G0_QSR0_EMPTY &output)
{
    bool result = false;

    if ((result = !strncmp(data, "there_valid_entries_queue_see_fill", 34)))
    {
        output = VADC_G0_QSR0_EMPTY::there_valid_entries_queue_see_fill;
    }
    else if ((result = !strncmp(data, "no_valid_entries_queue_empty", 28)))
    {
        output = VADC_G0_QSR0_EMPTY::no_valid_entries_queue_empty;
    }

    return result;
}

}; // namespace XMC4700
