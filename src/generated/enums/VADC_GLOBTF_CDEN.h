/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_GLOBTF_CDEN : uint8_t
{
    all_diagnostic_pull_devices_disconnected /*!< All diagnostic pull devices
                                                are disconnected */
        ,
    diagnostic_pull_devices_connected_selected_by_cont =
        1 /*!< Diagnostic pull devices connected as selected by bitfield CDSEL
           */
};
static_assert(sizeof(VADC_GLOBTF_CDEN) == 1);

/**
 * Converts VADC_GLOBTF_CDEN to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_GLOBTF_CDEN instance)
{
    const char *result = "UNKNOWN VADC_GLOBTF_CDEN";

    switch (instance)
    {
    case VADC_GLOBTF_CDEN::all_diagnostic_pull_devices_disconnected:
        result = "all_diagnostic_pull_devices_disconnected";
        break;
    case VADC_GLOBTF_CDEN::diagnostic_pull_devices_connected_selected_by_cont:
        result = "diagnostic_pull_devices_connected_selected_by_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_GLOBTF_CDEN.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_GLOBTF_CDEN &output)
{
    bool result = false;

    if ((result =
             !strncmp(data, "all_diagnostic_pull_devices_disconnected", 40)))
    {
        output = VADC_GLOBTF_CDEN::all_diagnostic_pull_devices_disconnected;
    }
    else if ((result = !strncmp(
                  data, "diagnostic_pull_devices_connected_selected_by_cont",
                  50)))
    {
        output = VADC_GLOBTF_CDEN::
            diagnostic_pull_devices_connected_selected_by_cont;
    }

    return result;
}

}; // namespace XMC4700
