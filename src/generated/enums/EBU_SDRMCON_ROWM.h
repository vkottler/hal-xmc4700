/**
 * \file
 * \brief Generated by ifgen (3.2.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class EBU_SDRMCON_ROWM : uint8_t
{
    _9 = 1 /*!< Address bit 26 to 9 */,
    _10 = 2 /*!< Address bit 26 to 10 */,
    _11 = 3 /*!< Address bit 26 to 11 */,
    _12 = 4 /*!< Address bit 26 to 12 */,
    _13 = 5 /*!< Address bit 26 to 13 */
};
static_assert(sizeof(EBU_SDRMCON_ROWM) == 1);

/**
 * Converts EBU_SDRMCON_ROWM to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(EBU_SDRMCON_ROWM instance)
{
    const char *result = "UNKNOWN EBU_SDRMCON_ROWM";

    switch (instance)
    {
    case EBU_SDRMCON_ROWM::_9:
        result = "_9";
        break;
    case EBU_SDRMCON_ROWM::_10:
        result = "_10";
        break;
    case EBU_SDRMCON_ROWM::_11:
        result = "_11";
        break;
    case EBU_SDRMCON_ROWM::_12:
        result = "_12";
        break;
    case EBU_SDRMCON_ROWM::_13:
        result = "_13";
        break;
    }

    return result;
}

/**
 * Converts a C string to EBU_SDRMCON_ROWM.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, EBU_SDRMCON_ROWM &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_9", 2)))
    {
        output = EBU_SDRMCON_ROWM::_9;
    }
    else if ((result = !strncmp(data, "_10", 3)))
    {
        output = EBU_SDRMCON_ROWM::_10;
    }
    else if ((result = !strncmp(data, "_11", 3)))
    {
        output = EBU_SDRMCON_ROWM::_11;
    }
    else if ((result = !strncmp(data, "_12", 3)))
    {
        output = EBU_SDRMCON_ROWM::_12;
    }
    else if ((result = !strncmp(data, "_13", 3)))
    {
        output = EBU_SDRMCON_ROWM::_13;
    }

    return result;
}

}; // namespace XMC4700
