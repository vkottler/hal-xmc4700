/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_GAHBCFG_PTxFEmpLvl : uint8_t
{
    gintstsptxfemp_interrupt_indicates_periodic_t_cont /*!< GINTSTS.PTxFEmp
                                                          interrupt indicates
                                                          that the Periodic
                                                          TxFIFO is half empty
                                                        */
        ,
    _ = 1 /*!< GINTSTS.PTxFEmp interrupt indicates that the Periodic TxFIFO is
             completely empty */
};
static_assert(sizeof(USB0_GAHBCFG_PTxFEmpLvl) == 1);

/**
 * Converts USB0_GAHBCFG_PTxFEmpLvl to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_GAHBCFG_PTxFEmpLvl instance)
{
    const char *result = "UNKNOWN USB0_GAHBCFG_PTxFEmpLvl";

    switch (instance)
    {
    case USB0_GAHBCFG_PTxFEmpLvl::
        gintstsptxfemp_interrupt_indicates_periodic_t_cont:
        result = "gintstsptxfemp_interrupt_indicates_periodic_t_cont";
        break;
    case USB0_GAHBCFG_PTxFEmpLvl::_:
        result = "_";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_GAHBCFG_PTxFEmpLvl.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB0_GAHBCFG_PTxFEmpLvl &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "gintstsptxfemp_interrupt_indicates_periodic_t_cont", 50)))
    {
        output = USB0_GAHBCFG_PTxFEmpLvl::
            gintstsptxfemp_interrupt_indicates_periodic_t_cont;
    }
    else if ((result = !strncmp(data, "_", 1)))
    {
        output = USB0_GAHBCFG_PTxFEmpLvl::_;
    }

    return result;
}

}; // namespace XMC4700
