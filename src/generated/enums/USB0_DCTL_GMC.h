/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_DCTL_GMC : uint8_t
{
    invalid /*!< Invalid. */,
    _1_packet = 1 /*!< 1 packet. */,
    _2_packets = 2 /*!< 2 packets. */,
    _3_packets = 3 /*!< 3 packets. */
};
static_assert(sizeof(USB0_DCTL_GMC) == 1);

/**
 * Converts USB0_DCTL_GMC to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_DCTL_GMC instance)
{
    const char *result = "UNKNOWN USB0_DCTL_GMC";

    switch (instance)
    {
    case USB0_DCTL_GMC::invalid:
        result = "invalid";
        break;
    case USB0_DCTL_GMC::_1_packet:
        result = "_1_packet";
        break;
    case USB0_DCTL_GMC::_2_packets:
        result = "_2_packets";
        break;
    case USB0_DCTL_GMC::_3_packets:
        result = "_3_packets";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_DCTL_GMC.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB0_DCTL_GMC &output)
{
    bool result = false;

    if ((result = !strncmp(data, "invalid", 7)))
    {
        output = USB0_DCTL_GMC::invalid;
    }
    else if ((result = !strncmp(data, "_1_packet", 9)))
    {
        output = USB0_DCTL_GMC::_1_packet;
    }
    else if ((result = !strncmp(data, "_2_packets", 10)))
    {
        output = USB0_DCTL_GMC::_2_packets;
    }
    else if ((result = !strncmp(data, "_3_packets", 10)))
    {
        output = USB0_DCTL_GMC::_3_packets;
    }

    return result;
}

}; // namespace XMC4700
