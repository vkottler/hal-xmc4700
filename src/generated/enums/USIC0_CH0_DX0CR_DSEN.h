/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_DX0CR_DSEN : uint8_t
{
    un_synchronized_signal_can_be_taken_input_dat_cont /*!< The un-synchronized
                                                          signal can be taken
                                                          as input for the data
                                                          shift unit. */
        ,
    synchronized_signal_can_be_taken_input_data_s_cont =
        1 /*!< The synchronized signal can be taken as input for the data shift
             unit. */
};
static_assert(sizeof(USIC0_CH0_DX0CR_DSEN) == 1);

/**
 * Converts USIC0_CH0_DX0CR_DSEN to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_DX0CR_DSEN instance)
{
    const char *result = "UNKNOWN USIC0_CH0_DX0CR_DSEN";

    switch (instance)
    {
    case USIC0_CH0_DX0CR_DSEN::
        un_synchronized_signal_can_be_taken_input_dat_cont:
        result = "un_synchronized_signal_can_be_taken_input_dat_cont";
        break;
    case USIC0_CH0_DX0CR_DSEN::
        synchronized_signal_can_be_taken_input_data_s_cont:
        result = "synchronized_signal_can_be_taken_input_data_s_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_DX0CR_DSEN.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_DX0CR_DSEN &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "un_synchronized_signal_can_be_taken_input_dat_cont", 50)))
    {
        output = USIC0_CH0_DX0CR_DSEN::
            un_synchronized_signal_can_be_taken_input_dat_cont;
    }
    else if ((result = !strncmp(
                  data, "synchronized_signal_can_be_taken_input_data_s_cont",
                  50)))
    {
        output = USIC0_CH0_DX0CR_DSEN::
            synchronized_signal_can_be_taken_input_data_s_cont;
    }

    return result;
}

}; // namespace XMC4700
