/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class EBU_CLC_SYNC : uint8_t
{
    asynchronously_ahb_bus_clock_use_separate_clo_cont /*!< request EBU to run
                                                          asynchronously to AHB
                                                          bus clock and use
                                                          separate clock source
                                                        */
        ,
    synchronously_arm_processor_default_after_reset =
        1 /*!< request EBU to run synchronously to ARM processor (default after
             reset) */
};
static_assert(sizeof(EBU_CLC_SYNC) == 1);

/**
 * Converts EBU_CLC_SYNC to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(EBU_CLC_SYNC instance)
{
    const char *result = "UNKNOWN EBU_CLC_SYNC";

    switch (instance)
    {
    case EBU_CLC_SYNC::asynchronously_ahb_bus_clock_use_separate_clo_cont:
        result = "asynchronously_ahb_bus_clock_use_separate_clo_cont";
        break;
    case EBU_CLC_SYNC::synchronously_arm_processor_default_after_reset:
        result = "synchronously_arm_processor_default_after_reset";
        break;
    }

    return result;
}

/**
 * Converts a C string to EBU_CLC_SYNC.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, EBU_CLC_SYNC &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "asynchronously_ahb_bus_clock_use_separate_clo_cont", 50)))
    {
        output =
            EBU_CLC_SYNC::asynchronously_ahb_bus_clock_use_separate_clo_cont;
    }
    else if ((result = !strncmp(
                  data, "synchronously_arm_processor_default_after_reset",
                  47)))
    {
        output = EBU_CLC_SYNC::synchronously_arm_processor_default_after_reset;
    }

    return result;
}

}; // namespace XMC4700
