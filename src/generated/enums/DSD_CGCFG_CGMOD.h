/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class DSD_CGCFG_CGMOD : uint8_t
{
    stopped /*!< Stopped */,
    square_wave = 1 /*!< Square wave */,
    triangle = 2 /*!< Triangle */,
    sine_wave = 3 /*!< Sine wave */
};
static_assert(sizeof(DSD_CGCFG_CGMOD) == 1);

/**
 * Converts DSD_CGCFG_CGMOD to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(DSD_CGCFG_CGMOD instance)
{
    const char *result = "UNKNOWN DSD_CGCFG_CGMOD";

    switch (instance)
    {
    case DSD_CGCFG_CGMOD::stopped:
        result = "stopped";
        break;
    case DSD_CGCFG_CGMOD::square_wave:
        result = "square_wave";
        break;
    case DSD_CGCFG_CGMOD::triangle:
        result = "triangle";
        break;
    case DSD_CGCFG_CGMOD::sine_wave:
        result = "sine_wave";
        break;
    }

    return result;
}

/**
 * Converts a C string to DSD_CGCFG_CGMOD.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, DSD_CGCFG_CGMOD &output)
{
    bool result = false;

    if ((result = !strncmp(data, "stopped", 7)))
    {
        output = DSD_CGCFG_CGMOD::stopped;
    }
    else if ((result = !strncmp(data, "square_wave", 11)))
    {
        output = DSD_CGCFG_CGMOD::square_wave;
    }
    else if ((result = !strncmp(data, "triangle", 8)))
    {
        output = DSD_CGCFG_CGMOD::triangle;
    }
    else if ((result = !strncmp(data, "sine_wave", 9)))
    {
        output = DSD_CGCFG_CGMOD::sine_wave;
    }

    return result;
}

}; // namespace XMC4700
