/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class EBU_BUSRCON0_WAITINV : uint8_t
{
    low_default_after_reset /*!< input at WAIT pin is active low (default after
                               reset). */
        ,
    high = 1 /*!< input at WAIT pin is active high. */
};
static_assert(sizeof(EBU_BUSRCON0_WAITINV) == 1);

/**
 * Converts EBU_BUSRCON0_WAITINV to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(EBU_BUSRCON0_WAITINV instance)
{
    const char *result = "UNKNOWN EBU_BUSRCON0_WAITINV";

    switch (instance)
    {
    case EBU_BUSRCON0_WAITINV::low_default_after_reset:
        result = "low_default_after_reset";
        break;
    case EBU_BUSRCON0_WAITINV::high:
        result = "high";
        break;
    }

    return result;
}

/**
 * Converts a C string to EBU_BUSRCON0_WAITINV.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, EBU_BUSRCON0_WAITINV &output)
{
    bool result = false;

    if ((result = !strncmp(data, "low_default_after_reset", 23)))
    {
        output = EBU_BUSRCON0_WAITINV::low_default_after_reset;
    }
    else if ((result = !strncmp(data, "high", 4)))
    {
        output = EBU_BUSRCON0_WAITINV::high;
    }

    return result;
}

}; // namespace XMC4700
