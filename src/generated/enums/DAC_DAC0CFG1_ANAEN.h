/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class DAC_DAC0CFG1_ANAEN : uint8_t
{
    dac0_set_standby_analog_output_only /*!< DAC0 is set to standby (analog
                                           output only) */
        ,
    enable_dac0_analog_output_only = 1 /*!< enable DAC0 (analog output only) */
};
static_assert(sizeof(DAC_DAC0CFG1_ANAEN) == 1);

/**
 * Converts DAC_DAC0CFG1_ANAEN to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(DAC_DAC0CFG1_ANAEN instance)
{
    const char *result = "UNKNOWN DAC_DAC0CFG1_ANAEN";

    switch (instance)
    {
    case DAC_DAC0CFG1_ANAEN::dac0_set_standby_analog_output_only:
        result = "dac0_set_standby_analog_output_only";
        break;
    case DAC_DAC0CFG1_ANAEN::enable_dac0_analog_output_only:
        result = "enable_dac0_analog_output_only";
        break;
    }

    return result;
}

/**
 * Converts a C string to DAC_DAC0CFG1_ANAEN.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, DAC_DAC0CFG1_ANAEN &output)
{
    bool result = false;

    if ((result = !strncmp(data, "dac0_set_standby_analog_output_only", 35)))
    {
        output = DAC_DAC0CFG1_ANAEN::dac0_set_standby_analog_output_only;
    }
    else if ((result = !strncmp(data, "enable_dac0_analog_output_only", 30)))
    {
        output = DAC_DAC0CFG1_ANAEN::enable_dac0_analog_output_only;
    }

    return result;
}

}; // namespace XMC4700
