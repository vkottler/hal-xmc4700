/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_DCFG_PerFrInt : uint8_t
{
    _80_frame_interval /*!< 80% of the frame interval */,
    _85 = 1 /*!< 85% */,
    _90 = 2 /*!< 90% */,
    _95 = 3 /*!< 95% */
};
static_assert(sizeof(USB0_DCFG_PerFrInt) == 1);

/**
 * Converts USB0_DCFG_PerFrInt to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_DCFG_PerFrInt instance)
{
    const char *result = "UNKNOWN USB0_DCFG_PerFrInt";

    switch (instance)
    {
    case USB0_DCFG_PerFrInt::_80_frame_interval:
        result = "_80_frame_interval";
        break;
    case USB0_DCFG_PerFrInt::_85:
        result = "_85";
        break;
    case USB0_DCFG_PerFrInt::_90:
        result = "_90";
        break;
    case USB0_DCFG_PerFrInt::_95:
        result = "_95";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_DCFG_PerFrInt.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB0_DCFG_PerFrInt &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_80_frame_interval", 18)))
    {
        output = USB0_DCFG_PerFrInt::_80_frame_interval;
    }
    else if ((result = !strncmp(data, "_85", 3)))
    {
        output = USB0_DCFG_PerFrInt::_85;
    }
    else if ((result = !strncmp(data, "_90", 3)))
    {
        output = USB0_DCFG_PerFrInt::_90;
    }
    else if ((result = !strncmp(data, "_95", 3)))
    {
        output = USB0_DCFG_PerFrInt::_95;
    }

    return result;
}

}; // namespace XMC4700
