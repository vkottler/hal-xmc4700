/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class CAN_MO_MOFCR_IDC : uint8_t
{
    not_copied /*!< The identifier of the gateway source object is not copied.
                */
        ,
    after_storin_cont = 1 /*!< The identifier of the gateway source object
                             (after storing the received frame in the source)
                             is copied to the gateway destination object. */
};
static_assert(sizeof(CAN_MO_MOFCR_IDC) == 1);

/**
 * Converts CAN_MO_MOFCR_IDC to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CAN_MO_MOFCR_IDC instance)
{
    const char *result = "UNKNOWN CAN_MO_MOFCR_IDC";

    switch (instance)
    {
    case CAN_MO_MOFCR_IDC::not_copied:
        result = "not_copied";
        break;
    case CAN_MO_MOFCR_IDC::after_storin_cont:
        result = "after_storin_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to CAN_MO_MOFCR_IDC.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CAN_MO_MOFCR_IDC &output)
{
    bool result = false;

    if ((result = !strncmp(data, "not_copied", 10)))
    {
        output = CAN_MO_MOFCR_IDC::not_copied;
    }
    else if ((result = !strncmp(data, "after_storin_cont", 17)))
    {
        output = CAN_MO_MOFCR_IDC::after_storin_cont;
    }

    return result;
}

}; // namespace XMC4700
