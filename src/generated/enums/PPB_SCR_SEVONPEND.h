/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class PPB_SCR_SEVONPEND : uint8_t
{
    only_enabled_interrupts_or_events_can_wakeup__cont /*!< only enabled
                                                          interrupts or events
                                                          can wakeup the
                                                          processor, disabled
                                                          interrupts are
                                                          excluded */
        ,
    enabled_events_all_interrupts_including_disab_cont =
        1 /*!< enabled events and all interrupts, including disabled
             interrupts, can wakeup the processor. */
};
static_assert(sizeof(PPB_SCR_SEVONPEND) == 1);

/**
 * Converts PPB_SCR_SEVONPEND to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(PPB_SCR_SEVONPEND instance)
{
    const char *result = "UNKNOWN PPB_SCR_SEVONPEND";

    switch (instance)
    {
    case PPB_SCR_SEVONPEND::only_enabled_interrupts_or_events_can_wakeup__cont:
        result = "only_enabled_interrupts_or_events_can_wakeup__cont";
        break;
    case PPB_SCR_SEVONPEND::enabled_events_all_interrupts_including_disab_cont:
        result = "enabled_events_all_interrupts_including_disab_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to PPB_SCR_SEVONPEND.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, PPB_SCR_SEVONPEND &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "only_enabled_interrupts_or_events_can_wakeup__cont", 50)))
    {
        output = PPB_SCR_SEVONPEND::
            only_enabled_interrupts_or_events_can_wakeup__cont;
    }
    else if ((result = !strncmp(
                  data, "enabled_events_all_interrupts_including_disab_cont",
                  50)))
    {
        output = PPB_SCR_SEVONPEND::
            enabled_events_all_interrupts_including_disab_cont;
    }

    return result;
}

}; // namespace XMC4700
