/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SCU_HIBERNATE_HDSTAT_HIBNOUT : uint8_t
{
    not_driven_active_pads /*!< Hibernate not driven active to pads */,
    driven_active_pads = 1 /*!< Hibernate driven active to pads */
};
static_assert(sizeof(SCU_HIBERNATE_HDSTAT_HIBNOUT) == 1);

/**
 * Converts SCU_HIBERNATE_HDSTAT_HIBNOUT to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SCU_HIBERNATE_HDSTAT_HIBNOUT instance)
{
    const char *result = "UNKNOWN SCU_HIBERNATE_HDSTAT_HIBNOUT";

    switch (instance)
    {
    case SCU_HIBERNATE_HDSTAT_HIBNOUT::not_driven_active_pads:
        result = "not_driven_active_pads";
        break;
    case SCU_HIBERNATE_HDSTAT_HIBNOUT::driven_active_pads:
        result = "driven_active_pads";
        break;
    }

    return result;
}

/**
 * Converts a C string to SCU_HIBERNATE_HDSTAT_HIBNOUT.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, SCU_HIBERNATE_HDSTAT_HIBNOUT &output)
{
    bool result = false;

    if ((result = !strncmp(data, "not_driven_active_pads", 22)))
    {
        output = SCU_HIBERNATE_HDSTAT_HIBNOUT::not_driven_active_pads;
    }
    else if ((result = !strncmp(data, "driven_active_pads", 18)))
    {
        output = SCU_HIBERNATE_HDSTAT_HIBNOUT::driven_active_pads;
    }

    return result;
}

}; // namespace XMC4700
