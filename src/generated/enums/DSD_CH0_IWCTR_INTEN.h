/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class DSD_CH0_IWCTR_INTEN : uint8_t
{
    stopped_inten_cleared_at_end_inte_cont /*!< Integration stopped. INTEN is
                                              cleared at the end of the
                                              integration window, i.e. upon the
                                              inverse trigger event transition
                                              of the external trigger signal.
                                            */
        ,
    enabled_inten_set_upon_defined_tr_cont =
        1 /*!< Integration enabled. INTEN is set upon the defined trigger
             event. */
};
static_assert(sizeof(DSD_CH0_IWCTR_INTEN) == 1);

/**
 * Converts DSD_CH0_IWCTR_INTEN to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(DSD_CH0_IWCTR_INTEN instance)
{
    const char *result = "UNKNOWN DSD_CH0_IWCTR_INTEN";

    switch (instance)
    {
    case DSD_CH0_IWCTR_INTEN::stopped_inten_cleared_at_end_inte_cont:
        result = "stopped_inten_cleared_at_end_inte_cont";
        break;
    case DSD_CH0_IWCTR_INTEN::enabled_inten_set_upon_defined_tr_cont:
        result = "enabled_inten_set_upon_defined_tr_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to DSD_CH0_IWCTR_INTEN.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, DSD_CH0_IWCTR_INTEN &output)
{
    bool result = false;

    if ((result =
             !strncmp(data, "stopped_inten_cleared_at_end_inte_cont", 38)))
    {
        output = DSD_CH0_IWCTR_INTEN::stopped_inten_cleared_at_end_inte_cont;
    }
    else if ((result = !strncmp(data, "enabled_inten_set_upon_defined_tr_cont",
                                38)))
    {
        output = DSD_CH0_IWCTR_INTEN::enabled_inten_set_upon_defined_tr_cont;
    }

    return result;
}

}; // namespace XMC4700
