/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_DX1CR_DSEL : uint8_t
{
    dx1a_selected /*!< The data input DX1A is selected. */,
    dx1b_selected = 1 /*!< The data input DX1B is selected. */,
    dx1c_selected = 2 /*!< The data input DX1C is selected. */,
    dx1d_selected = 3 /*!< The data input DX1D is selected. */,
    dx1e_selected = 4 /*!< The data input DX1E is selected. */,
    dx1f_selected = 5 /*!< The data input DX1F is selected. */,
    dx1g_selected = 6 /*!< The data input DX1G is selected. */,
    always_1 = 7 /*!< The data input is always 1. */
};
static_assert(sizeof(USIC0_CH0_DX1CR_DSEL) == 1);

/**
 * Converts USIC0_CH0_DX1CR_DSEL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_DX1CR_DSEL instance)
{
    const char *result = "UNKNOWN USIC0_CH0_DX1CR_DSEL";

    switch (instance)
    {
    case USIC0_CH0_DX1CR_DSEL::dx1a_selected:
        result = "dx1a_selected";
        break;
    case USIC0_CH0_DX1CR_DSEL::dx1b_selected:
        result = "dx1b_selected";
        break;
    case USIC0_CH0_DX1CR_DSEL::dx1c_selected:
        result = "dx1c_selected";
        break;
    case USIC0_CH0_DX1CR_DSEL::dx1d_selected:
        result = "dx1d_selected";
        break;
    case USIC0_CH0_DX1CR_DSEL::dx1e_selected:
        result = "dx1e_selected";
        break;
    case USIC0_CH0_DX1CR_DSEL::dx1f_selected:
        result = "dx1f_selected";
        break;
    case USIC0_CH0_DX1CR_DSEL::dx1g_selected:
        result = "dx1g_selected";
        break;
    case USIC0_CH0_DX1CR_DSEL::always_1:
        result = "always_1";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_DX1CR_DSEL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_DX1CR_DSEL &output)
{
    bool result = false;

    if ((result = !strncmp(data, "dx1a_selected", 13)))
    {
        output = USIC0_CH0_DX1CR_DSEL::dx1a_selected;
    }
    else if ((result = !strncmp(data, "dx1b_selected", 13)))
    {
        output = USIC0_CH0_DX1CR_DSEL::dx1b_selected;
    }
    else if ((result = !strncmp(data, "dx1c_selected", 13)))
    {
        output = USIC0_CH0_DX1CR_DSEL::dx1c_selected;
    }
    else if ((result = !strncmp(data, "dx1d_selected", 13)))
    {
        output = USIC0_CH0_DX1CR_DSEL::dx1d_selected;
    }
    else if ((result = !strncmp(data, "dx1e_selected", 13)))
    {
        output = USIC0_CH0_DX1CR_DSEL::dx1e_selected;
    }
    else if ((result = !strncmp(data, "dx1f_selected", 13)))
    {
        output = USIC0_CH0_DX1CR_DSEL::dx1f_selected;
    }
    else if ((result = !strncmp(data, "dx1g_selected", 13)))
    {
        output = USIC0_CH0_DX1CR_DSEL::dx1g_selected;
    }
    else if ((result = !strncmp(data, "always_1", 8)))
    {
        output = USIC0_CH0_DX1CR_DSEL::always_1;
    }

    return result;
}

}; // namespace XMC4700
