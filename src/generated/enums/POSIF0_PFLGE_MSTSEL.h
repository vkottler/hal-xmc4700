/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class POSIF0_PFLGE_MSTSEL : uint8_t
{
    multi_channel_pattern_update_event_interrupt__cont /*!< Multi-Channel
                                                          pattern Update Event
                                                          interrupt forward to
                                                          POSIFx.SR0 */
        ,
    _ = 1 /*!< Multi-Channel pattern Update Event interrupt forward to
             POSIFx.SR1 */
};
static_assert(sizeof(POSIF0_PFLGE_MSTSEL) == 1);

/**
 * Converts POSIF0_PFLGE_MSTSEL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(POSIF0_PFLGE_MSTSEL instance)
{
    const char *result = "UNKNOWN POSIF0_PFLGE_MSTSEL";

    switch (instance)
    {
    case POSIF0_PFLGE_MSTSEL::
        multi_channel_pattern_update_event_interrupt__cont:
        result = "multi_channel_pattern_update_event_interrupt__cont";
        break;
    case POSIF0_PFLGE_MSTSEL::_:
        result = "_";
        break;
    }

    return result;
}

/**
 * Converts a C string to POSIF0_PFLGE_MSTSEL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, POSIF0_PFLGE_MSTSEL &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "multi_channel_pattern_update_event_interrupt__cont", 50)))
    {
        output = POSIF0_PFLGE_MSTSEL::
            multi_channel_pattern_update_event_interrupt__cont;
    }
    else if ((result = !strncmp(data, "_", 1)))
    {
        output = POSIF0_PFLGE_MSTSEL::_;
    }

    return result;
}

}; // namespace XMC4700
