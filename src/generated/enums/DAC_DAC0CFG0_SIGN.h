/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class DAC_DAC0CFG0_SIGN : uint8_t
{
    unsigned_input_data /*!< DAC expects unsigned input data */,
    signed_input_data = 1 /*!< DAC expects signed input data */
};
static_assert(sizeof(DAC_DAC0CFG0_SIGN) == 1);

/**
 * Converts DAC_DAC0CFG0_SIGN to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(DAC_DAC0CFG0_SIGN instance)
{
    const char *result = "UNKNOWN DAC_DAC0CFG0_SIGN";

    switch (instance)
    {
    case DAC_DAC0CFG0_SIGN::unsigned_input_data:
        result = "unsigned_input_data";
        break;
    case DAC_DAC0CFG0_SIGN::signed_input_data:
        result = "signed_input_data";
        break;
    }

    return result;
}

/**
 * Converts a C string to DAC_DAC0CFG0_SIGN.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, DAC_DAC0CFG0_SIGN &output)
{
    bool result = false;

    if ((result = !strncmp(data, "unsigned_input_data", 19)))
    {
        output = DAC_DAC0CFG0_SIGN::unsigned_input_data;
    }
    else if ((result = !strncmp(data, "signed_input_data", 17)))
    {
        output = DAC_DAC0CFG0_SIGN::signed_input_data;
    }

    return result;
}

}; // namespace XMC4700
