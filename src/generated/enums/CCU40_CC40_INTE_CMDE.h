/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class CCU40_CC40_INTE_CMDE : uint8_t
{
    d_cont /*!< Compare Match while counting down interrupt is disabled */,
    e_cont = 1 /*!< Compare Match while counting down interrupt is enabled */
};
static_assert(sizeof(CCU40_CC40_INTE_CMDE) == 1);

/**
 * Converts CCU40_CC40_INTE_CMDE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CCU40_CC40_INTE_CMDE instance)
{
    const char *result = "UNKNOWN CCU40_CC40_INTE_CMDE";

    switch (instance)
    {
    case CCU40_CC40_INTE_CMDE::d_cont:
        result = "d_cont";
        break;
    case CCU40_CC40_INTE_CMDE::e_cont:
        result = "e_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to CCU40_CC40_INTE_CMDE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CCU40_CC40_INTE_CMDE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "d_cont", 6)))
    {
        output = CCU40_CC40_INTE_CMDE::d_cont;
    }
    else if ((result = !strncmp(data, "e_cont", 6)))
    {
        output = CCU40_CC40_INTE_CMDE::e_cont;
    }

    return result;
}

}; // namespace XMC4700
