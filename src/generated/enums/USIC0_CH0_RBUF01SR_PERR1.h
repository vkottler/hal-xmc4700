/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_RBUF01SR_PERR1 : uint8_t
{
    matches_expected_value_reception_data_word_se_cont /*!< The received
                                                          protocol-related
                                                          argument PAR matches
                                                          the expected value.
                                                          The reception of the
                                                          data word sets bit
                                                          PSR.RIF and can
                                                          generate a receive
                                                          interrupt. */
        ,
    does_not_match_expected_value_reception_data__cont =
        1 /*!< The received protocol-related argument PAR does not match the
             expected value. The reception of the data word sets bit PSR.AIF
             and can generate an alternative receive interrupt. */
};
static_assert(sizeof(USIC0_CH0_RBUF01SR_PERR1) == 1);

/**
 * Converts USIC0_CH0_RBUF01SR_PERR1 to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_RBUF01SR_PERR1 instance)
{
    const char *result = "UNKNOWN USIC0_CH0_RBUF01SR_PERR1";

    switch (instance)
    {
    case USIC0_CH0_RBUF01SR_PERR1::
        matches_expected_value_reception_data_word_se_cont:
        result = "matches_expected_value_reception_data_word_se_cont";
        break;
    case USIC0_CH0_RBUF01SR_PERR1::
        does_not_match_expected_value_reception_data__cont:
        result = "does_not_match_expected_value_reception_data__cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_RBUF01SR_PERR1.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_RBUF01SR_PERR1 &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "matches_expected_value_reception_data_word_se_cont", 50)))
    {
        output = USIC0_CH0_RBUF01SR_PERR1::
            matches_expected_value_reception_data_word_se_cont;
    }
    else if ((result = !strncmp(
                  data, "does_not_match_expected_value_reception_data__cont",
                  50)))
    {
        output = USIC0_CH0_RBUF01SR_PERR1::
            does_not_match_expected_value_reception_data__cont;
    }

    return result;
}

}; // namespace XMC4700
