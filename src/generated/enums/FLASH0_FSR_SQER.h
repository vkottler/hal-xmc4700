/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class FLASH0_FSR_SQER : uint8_t
{
    no_sequence_error /*!< No sequence error */,
    command_state_machine_operation_unsuccessful__cont =
        1 /*!< Command state machine operation unsuccessful because of improper
             address or command sequence. */
};
static_assert(sizeof(FLASH0_FSR_SQER) == 1);

/**
 * Converts FLASH0_FSR_SQER to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLASH0_FSR_SQER instance)
{
    const char *result = "UNKNOWN FLASH0_FSR_SQER";

    switch (instance)
    {
    case FLASH0_FSR_SQER::no_sequence_error:
        result = "no_sequence_error";
        break;
    case FLASH0_FSR_SQER::command_state_machine_operation_unsuccessful__cont:
        result = "command_state_machine_operation_unsuccessful__cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLASH0_FSR_SQER.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLASH0_FSR_SQER &output)
{
    bool result = false;

    if ((result = !strncmp(data, "no_sequence_error", 17)))
    {
        output = FLASH0_FSR_SQER::no_sequence_error;
    }
    else if ((result = !strncmp(
                  data, "command_state_machine_operation_unsuccessful__cont",
                  50)))
    {
        output = FLASH0_FSR_SQER::
            command_state_machine_operation_unsuccessful__cont;
    }

    return result;
}

}; // namespace XMC4700
