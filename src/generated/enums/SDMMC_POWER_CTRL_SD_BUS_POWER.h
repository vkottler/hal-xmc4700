/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SDMMC_POWER_CTRL_SD_BUS_POWER : uint8_t
{
    _off /*!< Power off */,
    power = 1 /*!< Power on */
};
static_assert(sizeof(SDMMC_POWER_CTRL_SD_BUS_POWER) == 1);

/**
 * Converts SDMMC_POWER_CTRL_SD_BUS_POWER to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SDMMC_POWER_CTRL_SD_BUS_POWER instance)
{
    const char *result = "UNKNOWN SDMMC_POWER_CTRL_SD_BUS_POWER";

    switch (instance)
    {
    case SDMMC_POWER_CTRL_SD_BUS_POWER::_off:
        result = "_off";
        break;
    case SDMMC_POWER_CTRL_SD_BUS_POWER::power:
        result = "power";
        break;
    }

    return result;
}

/**
 * Converts a C string to SDMMC_POWER_CTRL_SD_BUS_POWER.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        SDMMC_POWER_CTRL_SD_BUS_POWER &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_off", 4)))
    {
        output = SDMMC_POWER_CTRL_SD_BUS_POWER::_off;
    }
    else if ((result = !strncmp(data, "power", 5)))
    {
        output = SDMMC_POWER_CTRL_SD_BUS_POWER::power;
    }

    return result;
}

}; // namespace XMC4700
