/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_G0_ARBCFG_BUSY : uint8_t
{
    not_busy /*!< Not busy */,
    converter_busy_with_conversion =
        1 /*!< Converter is busy with a conversion */
};
static_assert(sizeof(VADC_G0_ARBCFG_BUSY) == 1);

/**
 * Converts VADC_G0_ARBCFG_BUSY to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_G0_ARBCFG_BUSY instance)
{
    const char *result = "UNKNOWN VADC_G0_ARBCFG_BUSY";

    switch (instance)
    {
    case VADC_G0_ARBCFG_BUSY::not_busy:
        result = "not_busy";
        break;
    case VADC_G0_ARBCFG_BUSY::converter_busy_with_conversion:
        result = "converter_busy_with_conversion";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_G0_ARBCFG_BUSY.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_G0_ARBCFG_BUSY &output)
{
    bool result = false;

    if ((result = !strncmp(data, "not_busy", 8)))
    {
        output = VADC_G0_ARBCFG_BUSY::not_busy;
    }
    else if ((result = !strncmp(data, "converter_busy_with_conversion", 30)))
    {
        output = VADC_G0_ARBCFG_BUSY::converter_busy_with_conversion;
    }

    return result;
}

}; // namespace XMC4700
