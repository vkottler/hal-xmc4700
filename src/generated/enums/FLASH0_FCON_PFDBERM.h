/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class FLASH0_FCON_PFDBERM : uint8_t
{
    not_enabled /*!< Double-Bit Error interrupt for PFLASH not enabled */,
    enabled_esp_cont = 1 /*!< Double-Bit Error interrupt for PFLASH enabled.
                            Especially intended for margin check */
};
static_assert(sizeof(FLASH0_FCON_PFDBERM) == 1);

/**
 * Converts FLASH0_FCON_PFDBERM to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLASH0_FCON_PFDBERM instance)
{
    const char *result = "UNKNOWN FLASH0_FCON_PFDBERM";

    switch (instance)
    {
    case FLASH0_FCON_PFDBERM::not_enabled:
        result = "not_enabled";
        break;
    case FLASH0_FCON_PFDBERM::enabled_esp_cont:
        result = "enabled_esp_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLASH0_FCON_PFDBERM.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLASH0_FCON_PFDBERM &output)
{
    bool result = false;

    if ((result = !strncmp(data, "not_enabled", 11)))
    {
        output = FLASH0_FCON_PFDBERM::not_enabled;
    }
    else if ((result = !strncmp(data, "enabled_esp_cont", 16)))
    {
        output = FLASH0_FCON_PFDBERM::enabled_esp_cont;
    }

    return result;
}

}; // namespace XMC4700
