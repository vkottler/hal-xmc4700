/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class DSD_CH0_DICFG_ITRMODE : uint8_t
{
    no_integration_trigger_integrator_bypassed_in_cont /*!< No integration
                                                          trigger, integrator
                                                          bypassed, INTEN = 0
                                                          all the time */
        ,
    trigger_event_upon_falling_edge =
        1 /*!< Trigger event upon a falling edge */,
    trigger_event_upon_rising_edge =
        2 /*!< Trigger event upon a rising edge */,
    no_trigger_integrator_active_all_time_inten_1_cont =
        3 /*!< No trigger, integrator active all the time, INTEN = 1 all the
             time */
};
static_assert(sizeof(DSD_CH0_DICFG_ITRMODE) == 1);

/**
 * Converts DSD_CH0_DICFG_ITRMODE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(DSD_CH0_DICFG_ITRMODE instance)
{
    const char *result = "UNKNOWN DSD_CH0_DICFG_ITRMODE";

    switch (instance)
    {
    case DSD_CH0_DICFG_ITRMODE::
        no_integration_trigger_integrator_bypassed_in_cont:
        result = "no_integration_trigger_integrator_bypassed_in_cont";
        break;
    case DSD_CH0_DICFG_ITRMODE::trigger_event_upon_falling_edge:
        result = "trigger_event_upon_falling_edge";
        break;
    case DSD_CH0_DICFG_ITRMODE::trigger_event_upon_rising_edge:
        result = "trigger_event_upon_rising_edge";
        break;
    case DSD_CH0_DICFG_ITRMODE::
        no_trigger_integrator_active_all_time_inten_1_cont:
        result = "no_trigger_integrator_active_all_time_inten_1_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to DSD_CH0_DICFG_ITRMODE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, DSD_CH0_DICFG_ITRMODE &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "no_integration_trigger_integrator_bypassed_in_cont", 50)))
    {
        output = DSD_CH0_DICFG_ITRMODE::
            no_integration_trigger_integrator_bypassed_in_cont;
    }
    else if ((result = !strncmp(data, "trigger_event_upon_falling_edge", 31)))
    {
        output = DSD_CH0_DICFG_ITRMODE::trigger_event_upon_falling_edge;
    }
    else if ((result = !strncmp(data, "trigger_event_upon_rising_edge", 30)))
    {
        output = DSD_CH0_DICFG_ITRMODE::trigger_event_upon_rising_edge;
    }
    else if ((result = !strncmp(
                  data, "no_trigger_integrator_active_all_time_inten_1_cont",
                  50)))
    {
        output = DSD_CH0_DICFG_ITRMODE::
            no_trigger_integrator_active_all_time_inten_1_cont;
    }

    return result;
}

}; // namespace XMC4700
