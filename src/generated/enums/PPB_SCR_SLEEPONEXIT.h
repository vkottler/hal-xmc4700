/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class PPB_SCR_SLEEPONEXIT : uint8_t
{
    do_not_sleep_when_returning_thread_mode /*!< do not sleep when returning to
                                               Thread mode. */
        ,
    enter_sleep_or_deep_sleep_return_an_isr =
        1 /*!< enter sleep, or deep sleep, on return from an ISR. */
};
static_assert(sizeof(PPB_SCR_SLEEPONEXIT) == 1);

/**
 * Converts PPB_SCR_SLEEPONEXIT to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(PPB_SCR_SLEEPONEXIT instance)
{
    const char *result = "UNKNOWN PPB_SCR_SLEEPONEXIT";

    switch (instance)
    {
    case PPB_SCR_SLEEPONEXIT::do_not_sleep_when_returning_thread_mode:
        result = "do_not_sleep_when_returning_thread_mode";
        break;
    case PPB_SCR_SLEEPONEXIT::enter_sleep_or_deep_sleep_return_an_isr:
        result = "enter_sleep_or_deep_sleep_return_an_isr";
        break;
    }

    return result;
}

/**
 * Converts a C string to PPB_SCR_SLEEPONEXIT.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, PPB_SCR_SLEEPONEXIT &output)
{
    bool result = false;

    if ((result =
             !strncmp(data, "do_not_sleep_when_returning_thread_mode", 39)))
    {
        output = PPB_SCR_SLEEPONEXIT::do_not_sleep_when_returning_thread_mode;
    }
    else if ((result = !strncmp(
                  data, "enter_sleep_or_deep_sleep_return_an_isr", 39)))
    {
        output = PPB_SCR_SLEEPONEXIT::enter_sleep_or_deep_sleep_return_an_isr;
    }

    return result;
}

}; // namespace XMC4700
