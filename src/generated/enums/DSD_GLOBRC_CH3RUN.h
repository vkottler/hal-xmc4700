/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class DSD_GLOBRC_CH3RUN : uint8_t
{
    stop_channel_x /*!< Stop channel x */,
    demodulator_channel_x_enabled_runs =
        1 /*!< Demodulator channel x is enabled and runs */
};
static_assert(sizeof(DSD_GLOBRC_CH3RUN) == 1);

/**
 * Converts DSD_GLOBRC_CH3RUN to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(DSD_GLOBRC_CH3RUN instance)
{
    const char *result = "UNKNOWN DSD_GLOBRC_CH3RUN";

    switch (instance)
    {
    case DSD_GLOBRC_CH3RUN::stop_channel_x:
        result = "stop_channel_x";
        break;
    case DSD_GLOBRC_CH3RUN::demodulator_channel_x_enabled_runs:
        result = "demodulator_channel_x_enabled_runs";
        break;
    }

    return result;
}

/**
 * Converts a C string to DSD_GLOBRC_CH3RUN.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, DSD_GLOBRC_CH3RUN &output)
{
    bool result = false;

    if ((result = !strncmp(data, "stop_channel_x", 14)))
    {
        output = DSD_GLOBRC_CH3RUN::stop_channel_x;
    }
    else if ((result =
                  !strncmp(data, "demodulator_channel_x_enabled_runs", 34)))
    {
        output = DSD_GLOBRC_CH3RUN::demodulator_channel_x_enabled_runs;
    }

    return result;
}

}; // namespace XMC4700
