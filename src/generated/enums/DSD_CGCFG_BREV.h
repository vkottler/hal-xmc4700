/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class DSD_CGCFG_BREV : uint8_t
{
    normal_mode /*!< Normal mode */,
    bit_reverse_mode = 1 /*!< Bit-reverse mode */
};
static_assert(sizeof(DSD_CGCFG_BREV) == 1);

/**
 * Converts DSD_CGCFG_BREV to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(DSD_CGCFG_BREV instance)
{
    const char *result = "UNKNOWN DSD_CGCFG_BREV";

    switch (instance)
    {
    case DSD_CGCFG_BREV::normal_mode:
        result = "normal_mode";
        break;
    case DSD_CGCFG_BREV::bit_reverse_mode:
        result = "bit_reverse_mode";
        break;
    }

    return result;
}

/**
 * Converts a C string to DSD_CGCFG_BREV.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, DSD_CGCFG_BREV &output)
{
    bool result = false;

    if ((result = !strncmp(data, "normal_mode", 11)))
    {
        output = DSD_CGCFG_BREV::normal_mode;
    }
    else if ((result = !strncmp(data, "bit_reverse_mode", 16)))
    {
        output = DSD_CGCFG_BREV::bit_reverse_mode;
    }

    return result;
}

}; // namespace XMC4700
