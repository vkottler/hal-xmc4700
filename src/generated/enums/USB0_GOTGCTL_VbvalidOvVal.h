/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_GOTGCTL_VbvalidOvVal : uint8_t
{
    _0_when_gotgctlvbvalidoven_1 /*!< vbusvalid value is 0# when
                                    GOTGCTL.VbvalidOvEn = 1 */
        ,
    _1_when_gotgctlvbvalidoven_1 =
        1 /*!< vbusvalid value is 1# when GOTGCTL.VbvalidOvEn = 1 */
};
static_assert(sizeof(USB0_GOTGCTL_VbvalidOvVal) == 1);

/**
 * Converts USB0_GOTGCTL_VbvalidOvVal to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_GOTGCTL_VbvalidOvVal instance)
{
    const char *result = "UNKNOWN USB0_GOTGCTL_VbvalidOvVal";

    switch (instance)
    {
    case USB0_GOTGCTL_VbvalidOvVal::_0_when_gotgctlvbvalidoven_1:
        result = "_0_when_gotgctlvbvalidoven_1";
        break;
    case USB0_GOTGCTL_VbvalidOvVal::_1_when_gotgctlvbvalidoven_1:
        result = "_1_when_gotgctlvbvalidoven_1";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_GOTGCTL_VbvalidOvVal.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB0_GOTGCTL_VbvalidOvVal &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_when_gotgctlvbvalidoven_1", 28)))
    {
        output = USB0_GOTGCTL_VbvalidOvVal::_0_when_gotgctlvbvalidoven_1;
    }
    else if ((result = !strncmp(data, "_1_when_gotgctlvbvalidoven_1", 28)))
    {
        output = USB0_GOTGCTL_VbvalidOvVal::_1_when_gotgctlvbvalidoven_1;
    }

    return result;
}

}; // namespace XMC4700
