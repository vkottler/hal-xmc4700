/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_GRXSTSR_DEVICEMODE_PktSts : uint8_t
{
    global_out_nak_triggers_an_interrupt =
        1 /*!< Global OUT NAK (triggers an interrupt) */,
    out_data_packet_received = 2 /*!< OUT data packet received */,
    out_transfer_completed_triggers_an_interrupt =
        3 /*!< OUT transfer completed (triggers an interrupt) */,
    setup_transaction_completed_triggers_an_interrupt =
        4 /*!< SETUP transaction completed (triggers an interrupt) */,
    setup_data_packet_received = 6 /*!< SETUP data packet received */
};
static_assert(sizeof(USB0_GRXSTSR_DEVICEMODE_PktSts) == 1);

/**
 * Converts USB0_GRXSTSR_DEVICEMODE_PktSts to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_GRXSTSR_DEVICEMODE_PktSts instance)
{
    const char *result = "UNKNOWN USB0_GRXSTSR_DEVICEMODE_PktSts";

    switch (instance)
    {
    case USB0_GRXSTSR_DEVICEMODE_PktSts::global_out_nak_triggers_an_interrupt:
        result = "global_out_nak_triggers_an_interrupt";
        break;
    case USB0_GRXSTSR_DEVICEMODE_PktSts::out_data_packet_received:
        result = "out_data_packet_received";
        break;
    case USB0_GRXSTSR_DEVICEMODE_PktSts::
        out_transfer_completed_triggers_an_interrupt:
        result = "out_transfer_completed_triggers_an_interrupt";
        break;
    case USB0_GRXSTSR_DEVICEMODE_PktSts::
        setup_transaction_completed_triggers_an_interrupt:
        result = "setup_transaction_completed_triggers_an_interrupt";
        break;
    case USB0_GRXSTSR_DEVICEMODE_PktSts::setup_data_packet_received:
        result = "setup_data_packet_received";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_GRXSTSR_DEVICEMODE_PktSts.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        USB0_GRXSTSR_DEVICEMODE_PktSts &output)
{
    bool result = false;

    if ((result = !strncmp(data, "global_out_nak_triggers_an_interrupt", 36)))
    {
        output = USB0_GRXSTSR_DEVICEMODE_PktSts::
            global_out_nak_triggers_an_interrupt;
    }
    else if ((result = !strncmp(data, "out_data_packet_received", 24)))
    {
        output = USB0_GRXSTSR_DEVICEMODE_PktSts::out_data_packet_received;
    }
    else if ((result = !strncmp(
                  data, "out_transfer_completed_triggers_an_interrupt", 44)))
    {
        output = USB0_GRXSTSR_DEVICEMODE_PktSts::
            out_transfer_completed_triggers_an_interrupt;
    }
    else if ((result = !strncmp(
                  data, "setup_transaction_completed_triggers_an_interrupt",
                  49)))
    {
        output = USB0_GRXSTSR_DEVICEMODE_PktSts::
            setup_transaction_completed_triggers_an_interrupt;
    }
    else if ((result = !strncmp(data, "setup_data_packet_received", 26)))
    {
        output = USB0_GRXSTSR_DEVICEMODE_PktSts::setup_data_packet_received;
    }

    return result;
}

}; // namespace XMC4700
