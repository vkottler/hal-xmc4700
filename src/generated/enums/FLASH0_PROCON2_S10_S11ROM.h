/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class FLASH0_PROCON2_S10_S11ROM : uint8_t
{
    no_rom_functionality_configured_sectors_1011 /*!< No ROM functionality is
                                                    configured for sectors
                                                    10+11. */
        ,
    rom_functionality_configured_sectors_1011 =
        1 /*!< ROM functionality is configured for sectors 10+11. */
};
static_assert(sizeof(FLASH0_PROCON2_S10_S11ROM) == 1);

/**
 * Converts FLASH0_PROCON2_S10_S11ROM to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLASH0_PROCON2_S10_S11ROM instance)
{
    const char *result = "UNKNOWN FLASH0_PROCON2_S10_S11ROM";

    switch (instance)
    {
    case FLASH0_PROCON2_S10_S11ROM::
        no_rom_functionality_configured_sectors_1011:
        result = "no_rom_functionality_configured_sectors_1011";
        break;
    case FLASH0_PROCON2_S10_S11ROM::rom_functionality_configured_sectors_1011:
        result = "rom_functionality_configured_sectors_1011";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLASH0_PROCON2_S10_S11ROM.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLASH0_PROCON2_S10_S11ROM &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "no_rom_functionality_configured_sectors_1011", 44)))
    {
        output = FLASH0_PROCON2_S10_S11ROM::
            no_rom_functionality_configured_sectors_1011;
    }
    else if ((result = !strncmp(
                  data, "rom_functionality_configured_sectors_1011", 41)))
    {
        output = FLASH0_PROCON2_S10_S11ROM::
            rom_functionality_configured_sectors_1011;
    }

    return result;
}

}; // namespace XMC4700
