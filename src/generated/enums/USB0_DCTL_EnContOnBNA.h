/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_DCTL_EnContOnBNA : uint8_t
{
    after_receiving_bna_interrupt_core_disables_e_cont /*!< After receiving BNA
                                                          interrupt, the core
                                                          disables the
                                                          endpoint. When the
                                                          endpoint is
                                                          re-enabled by the
                                                          application, the core
                                                          starts processing
                                                          from the DOEPDMA
                                                          descriptor. */
        ,
    _ = 1 /*!< After receiving BNA interrupt, the core disables the endpoint.
             When the endpoint is re-enabled by the application, the core
             starts processing from the descriptor that received the BNA
             interrupt. */
};
static_assert(sizeof(USB0_DCTL_EnContOnBNA) == 1);

/**
 * Converts USB0_DCTL_EnContOnBNA to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_DCTL_EnContOnBNA instance)
{
    const char *result = "UNKNOWN USB0_DCTL_EnContOnBNA";

    switch (instance)
    {
    case USB0_DCTL_EnContOnBNA::
        after_receiving_bna_interrupt_core_disables_e_cont:
        result = "after_receiving_bna_interrupt_core_disables_e_cont";
        break;
    case USB0_DCTL_EnContOnBNA::_:
        result = "_";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_DCTL_EnContOnBNA.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB0_DCTL_EnContOnBNA &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "after_receiving_bna_interrupt_core_disables_e_cont", 50)))
    {
        output = USB0_DCTL_EnContOnBNA::
            after_receiving_bna_interrupt_core_disables_e_cont;
    }
    else if ((result = !strncmp(data, "_", 1)))
    {
        output = USB0_DCTL_EnContOnBNA::_;
    }

    return result;
}

}; // namespace XMC4700
