/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class LEDTS0_FNCTL_EPULL : uint8_t
{
    hw_over_rule_enable_internal_pull_up_active_t_cont /*!< HW over-rule to
                                                          enable internal
                                                          pull-up is active on
                                                          TSIN[x] for set
                                                          duration in
                                                          touch-sense time
                                                          slice. With this
                                                          setting, it is not
                                                          specified to assign
                                                          the COLA to any pin.
                                                        */
        ,
    enable_external_pull_up_output_1_pin_cola_who_cont =
        1 /*!< Enable external pull-up: Output 1 on pin COLA for whole duration
             of touch-sense time slice. */
};
static_assert(sizeof(LEDTS0_FNCTL_EPULL) == 1);

/**
 * Converts LEDTS0_FNCTL_EPULL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(LEDTS0_FNCTL_EPULL instance)
{
    const char *result = "UNKNOWN LEDTS0_FNCTL_EPULL";

    switch (instance)
    {
    case LEDTS0_FNCTL_EPULL::
        hw_over_rule_enable_internal_pull_up_active_t_cont:
        result = "hw_over_rule_enable_internal_pull_up_active_t_cont";
        break;
    case LEDTS0_FNCTL_EPULL::
        enable_external_pull_up_output_1_pin_cola_who_cont:
        result = "enable_external_pull_up_output_1_pin_cola_who_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to LEDTS0_FNCTL_EPULL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, LEDTS0_FNCTL_EPULL &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "hw_over_rule_enable_internal_pull_up_active_t_cont", 50)))
    {
        output = LEDTS0_FNCTL_EPULL::
            hw_over_rule_enable_internal_pull_up_active_t_cont;
    }
    else if ((result = !strncmp(
                  data, "enable_external_pull_up_output_1_pin_cola_who_cont",
                  50)))
    {
        output = LEDTS0_FNCTL_EPULL::
            enable_external_pull_up_output_1_pin_cola_who_cont;
    }

    return result;
}

}; // namespace XMC4700
