/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class PPB_FPCCR_LSPACT : uint8_t
{
    not_active /*!< Lazy state preservation is not active. */,
    active_floating_point_cont =
        1 /*!< Lazy state preservation is active. floating-point stack frame
             has been allocated but saving state to it has been deferred. */
};
static_assert(sizeof(PPB_FPCCR_LSPACT) == 1);

/**
 * Converts PPB_FPCCR_LSPACT to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(PPB_FPCCR_LSPACT instance)
{
    const char *result = "UNKNOWN PPB_FPCCR_LSPACT";

    switch (instance)
    {
    case PPB_FPCCR_LSPACT::not_active:
        result = "not_active";
        break;
    case PPB_FPCCR_LSPACT::active_floating_point_cont:
        result = "active_floating_point_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to PPB_FPCCR_LSPACT.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, PPB_FPCCR_LSPACT &output)
{
    bool result = false;

    if ((result = !strncmp(data, "not_active", 10)))
    {
        output = PPB_FPCCR_LSPACT::not_active;
    }
    else if ((result = !strncmp(data, "active_floating_point_cont", 26)))
    {
        output = PPB_FPCCR_LSPACT::active_floating_point_cont;
    }

    return result;
}

}; // namespace XMC4700
