/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SCU_PLL_PLLCON2_K1INSEL : uint8_t
{
    pll_external_oscillator_selected /*!< PLL external oscillator selected */,
    backup_clock_fofi_selected = 1 /*!< Backup clock fofi selected */
};
static_assert(sizeof(SCU_PLL_PLLCON2_K1INSEL) == 1);

/**
 * Converts SCU_PLL_PLLCON2_K1INSEL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SCU_PLL_PLLCON2_K1INSEL instance)
{
    const char *result = "UNKNOWN SCU_PLL_PLLCON2_K1INSEL";

    switch (instance)
    {
    case SCU_PLL_PLLCON2_K1INSEL::pll_external_oscillator_selected:
        result = "pll_external_oscillator_selected";
        break;
    case SCU_PLL_PLLCON2_K1INSEL::backup_clock_fofi_selected:
        result = "backup_clock_fofi_selected";
        break;
    }

    return result;
}

/**
 * Converts a C string to SCU_PLL_PLLCON2_K1INSEL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, SCU_PLL_PLLCON2_K1INSEL &output)
{
    bool result = false;

    if ((result = !strncmp(data, "pll_external_oscillator_selected", 32)))
    {
        output = SCU_PLL_PLLCON2_K1INSEL::pll_external_oscillator_selected;
    }
    else if ((result = !strncmp(data, "backup_clock_fofi_selected", 26)))
    {
        output = SCU_PLL_PLLCON2_K1INSEL::backup_clock_fofi_selected;
    }

    return result;
}

}; // namespace XMC4700
