/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_G0_ARBPR_ASEN2 : uint8_t
{
    disabled_considered_empty_pending_conversion__cont /*!< The corresponding
                                                          arbitration slot is
                                                          disabled and
                                                          considered as empty.
                                                          Pending conversion
                                                          requests from the
                                                          associated request
                                                          source are
                                                          disregarded. */
        ,
    enabled_pending_conversion_requests_associate_cont =
        1 /*!< The corresponding arbitration slot is enabled. Pending
             conversion requests from the associated request source are
             arbitrated. */
};
static_assert(sizeof(VADC_G0_ARBPR_ASEN2) == 1);

/**
 * Converts VADC_G0_ARBPR_ASEN2 to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_G0_ARBPR_ASEN2 instance)
{
    const char *result = "UNKNOWN VADC_G0_ARBPR_ASEN2";

    switch (instance)
    {
    case VADC_G0_ARBPR_ASEN2::
        disabled_considered_empty_pending_conversion__cont:
        result = "disabled_considered_empty_pending_conversion__cont";
        break;
    case VADC_G0_ARBPR_ASEN2::
        enabled_pending_conversion_requests_associate_cont:
        result = "enabled_pending_conversion_requests_associate_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_G0_ARBPR_ASEN2.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_G0_ARBPR_ASEN2 &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "disabled_considered_empty_pending_conversion__cont", 50)))
    {
        output = VADC_G0_ARBPR_ASEN2::
            disabled_considered_empty_pending_conversion__cont;
    }
    else if ((result = !strncmp(
                  data, "enabled_pending_conversion_requests_associate_cont",
                  50)))
    {
        output = VADC_G0_ARBPR_ASEN2::
            enabled_pending_conversion_requests_associate_cont;
    }

    return result;
}

}; // namespace XMC4700
