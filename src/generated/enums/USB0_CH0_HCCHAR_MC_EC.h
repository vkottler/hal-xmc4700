/**
 * \file
 * \brief Generated by ifgen (3.2.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_CH0_HCCHAR_MC_EC : uint8_t
{
    _1_transaction = 1 /*!< 1 transaction */,
    _2_transactions_be_issued_this_endpoint_per_frame =
        2 /*!< 2 transactions to be issued for this endpoint per frame */,
    _3_transactions_be_issued_this_endpoint_per_frame =
        3 /*!< 3 transactions to be issued for this endpoint per frame */
};
static_assert(sizeof(USB0_CH0_HCCHAR_MC_EC) == 1);

/**
 * Converts USB0_CH0_HCCHAR_MC_EC to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_CH0_HCCHAR_MC_EC instance)
{
    const char *result = "UNKNOWN USB0_CH0_HCCHAR_MC_EC";

    switch (instance)
    {
    case USB0_CH0_HCCHAR_MC_EC::_1_transaction:
        result = "_1_transaction";
        break;
    case USB0_CH0_HCCHAR_MC_EC::
        _2_transactions_be_issued_this_endpoint_per_frame:
        result = "_2_transactions_be_issued_this_endpoint_per_frame";
        break;
    case USB0_CH0_HCCHAR_MC_EC::
        _3_transactions_be_issued_this_endpoint_per_frame:
        result = "_3_transactions_be_issued_this_endpoint_per_frame";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_CH0_HCCHAR_MC_EC.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB0_CH0_HCCHAR_MC_EC &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_1_transaction", 14)))
    {
        output = USB0_CH0_HCCHAR_MC_EC::_1_transaction;
    }
    else if ((result = !strncmp(
                  data, "_2_transactions_be_issued_this_endpoint_per_frame",
                  49)))
    {
        output = USB0_CH0_HCCHAR_MC_EC::
            _2_transactions_be_issued_this_endpoint_per_frame;
    }
    else if ((result = !strncmp(
                  data, "_3_transactions_be_issued_this_endpoint_per_frame",
                  49)))
    {
        output = USB0_CH0_HCCHAR_MC_EC::
            _3_transactions_be_issued_this_endpoint_per_frame;
    }

    return result;
}

}; // namespace XMC4700
