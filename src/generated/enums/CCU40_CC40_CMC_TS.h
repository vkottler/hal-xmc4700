/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class CCU40_CC40_CMC_TS : uint8_t
{
    disabled /*!< Trap function disabled */,
    connected_event_2 = 1 /*!< TRAP function connected to Event 2 */
};
static_assert(sizeof(CCU40_CC40_CMC_TS) == 1);

/**
 * Converts CCU40_CC40_CMC_TS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CCU40_CC40_CMC_TS instance)
{
    const char *result = "UNKNOWN CCU40_CC40_CMC_TS";

    switch (instance)
    {
    case CCU40_CC40_CMC_TS::disabled:
        result = "disabled";
        break;
    case CCU40_CC40_CMC_TS::connected_event_2:
        result = "connected_event_2";
        break;
    }

    return result;
}

/**
 * Converts a C string to CCU40_CC40_CMC_TS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CCU40_CC40_CMC_TS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "disabled", 8)))
    {
        output = CCU40_CC40_CMC_TS::disabled;
    }
    else if ((result = !strncmp(data, "connected_event_2", 17)))
    {
        output = CCU40_CC40_CMC_TS::connected_event_2;
    }

    return result;
}

}; // namespace XMC4700
