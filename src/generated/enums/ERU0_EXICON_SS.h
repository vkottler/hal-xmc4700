/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class ERU0_EXICON_SS : uint8_t
{
    without_additional_combination /*!< Input A without additional combination
                                    */
        ,
    b_without_additional_combination =
        1 /*!< Input B without additional combination */,
    or_input_b = 2 /*!< Input A OR input B */,
    input_b = 3 /*!< Input A AND input B */
};
static_assert(sizeof(ERU0_EXICON_SS) == 1);

/**
 * Converts ERU0_EXICON_SS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(ERU0_EXICON_SS instance)
{
    const char *result = "UNKNOWN ERU0_EXICON_SS";

    switch (instance)
    {
    case ERU0_EXICON_SS::without_additional_combination:
        result = "without_additional_combination";
        break;
    case ERU0_EXICON_SS::b_without_additional_combination:
        result = "b_without_additional_combination";
        break;
    case ERU0_EXICON_SS::or_input_b:
        result = "or_input_b";
        break;
    case ERU0_EXICON_SS::input_b:
        result = "input_b";
        break;
    }

    return result;
}

/**
 * Converts a C string to ERU0_EXICON_SS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, ERU0_EXICON_SS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "without_additional_combination", 30)))
    {
        output = ERU0_EXICON_SS::without_additional_combination;
    }
    else if ((result = !strncmp(data, "b_without_additional_combination", 32)))
    {
        output = ERU0_EXICON_SS::b_without_additional_combination;
    }
    else if ((result = !strncmp(data, "or_input_b", 10)))
    {
        output = ERU0_EXICON_SS::or_input_b;
    }
    else if ((result = !strncmp(data, "input_b", 7)))
    {
        output = ERU0_EXICON_SS::input_b;
    }

    return result;
}

}; // namespace XMC4700
