/**
 * \file
 * \brief Generated by ifgen (3.2.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SCU_OSC_OSCHPCTRL_GAINSEL : uint8_t
{
    _8_mhz /*!< The gain control is configured for frequencies from 4 MHz to 8
              MHz */
        ,
    _16_mhz = 1 /*!< The gain control is configured for frequencies from 4 MHz
                   to 16 MHz */
        ,
    _20_mhz = 2 /*!< The gain control is configured for frequencies from 4 MHz
                   to 20 MHz */
        ,
    _25_mhz = 3 /*!< The gain control is configured for frequencies from 4 MHz
                   to 25 MHz */
};
static_assert(sizeof(SCU_OSC_OSCHPCTRL_GAINSEL) == 1);

/**
 * Converts SCU_OSC_OSCHPCTRL_GAINSEL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SCU_OSC_OSCHPCTRL_GAINSEL instance)
{
    const char *result = "UNKNOWN SCU_OSC_OSCHPCTRL_GAINSEL";

    switch (instance)
    {
    case SCU_OSC_OSCHPCTRL_GAINSEL::_8_mhz:
        result = "_8_mhz";
        break;
    case SCU_OSC_OSCHPCTRL_GAINSEL::_16_mhz:
        result = "_16_mhz";
        break;
    case SCU_OSC_OSCHPCTRL_GAINSEL::_20_mhz:
        result = "_20_mhz";
        break;
    case SCU_OSC_OSCHPCTRL_GAINSEL::_25_mhz:
        result = "_25_mhz";
        break;
    }

    return result;
}

/**
 * Converts a C string to SCU_OSC_OSCHPCTRL_GAINSEL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, SCU_OSC_OSCHPCTRL_GAINSEL &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_8_mhz", 6)))
    {
        output = SCU_OSC_OSCHPCTRL_GAINSEL::_8_mhz;
    }
    else if ((result = !strncmp(data, "_16_mhz", 7)))
    {
        output = SCU_OSC_OSCHPCTRL_GAINSEL::_16_mhz;
    }
    else if ((result = !strncmp(data, "_20_mhz", 7)))
    {
        output = SCU_OSC_OSCHPCTRL_GAINSEL::_20_mhz;
    }
    else if ((result = !strncmp(data, "_25_mhz", 7)))
    {
        output = SCU_OSC_OSCHPCTRL_GAINSEL::_25_mhz;
    }

    return result;
}

}; // namespace XMC4700
