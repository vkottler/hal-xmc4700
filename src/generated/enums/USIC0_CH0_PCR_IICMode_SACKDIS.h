/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_PCR_IICMode_SACKDIS : uint8_t
{
    enabled_slave_acknowledge_with_0_level_more_b_cont /*!< The generation of
                                                          an active slave
                                                          acknowledge is
                                                          enabled (slave
                                                          acknowledge with 0
                                                          level = more bytes
                                                          can be received). */
        ,
    disabled_slave_acknowledge_with_1_level_recep_cont =
        1 /*!< The generation of an active slave acknowledge is disabled (slave
             acknowledge with 1 level = reception stopped). */
};
static_assert(sizeof(USIC0_CH0_PCR_IICMode_SACKDIS) == 1);

/**
 * Converts USIC0_CH0_PCR_IICMode_SACKDIS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_PCR_IICMode_SACKDIS instance)
{
    const char *result = "UNKNOWN USIC0_CH0_PCR_IICMode_SACKDIS";

    switch (instance)
    {
    case USIC0_CH0_PCR_IICMode_SACKDIS::
        enabled_slave_acknowledge_with_0_level_more_b_cont:
        result = "enabled_slave_acknowledge_with_0_level_more_b_cont";
        break;
    case USIC0_CH0_PCR_IICMode_SACKDIS::
        disabled_slave_acknowledge_with_1_level_recep_cont:
        result = "disabled_slave_acknowledge_with_1_level_recep_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_PCR_IICMode_SACKDIS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        USIC0_CH0_PCR_IICMode_SACKDIS &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "enabled_slave_acknowledge_with_0_level_more_b_cont", 50)))
    {
        output = USIC0_CH0_PCR_IICMode_SACKDIS::
            enabled_slave_acknowledge_with_0_level_more_b_cont;
    }
    else if ((result = !strncmp(
                  data, "disabled_slave_acknowledge_with_1_level_recep_cont",
                  50)))
    {
        output = USIC0_CH0_PCR_IICMode_SACKDIS::
            disabled_slave_acknowledge_with_1_level_recep_cont;
    }

    return result;
}

}; // namespace XMC4700
