/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class EBU_CLC_DIV2 : uint8_t
{
    standard_clocking_mode_clock_input_selected_b_cont /*!< standard clocking
                                                          mode. clock input
                                                          selected by SYNC
                                                          bitfield (default
                                                          after reset). */
        ,
    request_ebu_run_off_ahb_bus_clock_divided_by_2 =
        1 /*!< request EBU to run off AHB bus clock divided by 2. */
};
static_assert(sizeof(EBU_CLC_DIV2) == 1);

/**
 * Converts EBU_CLC_DIV2 to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(EBU_CLC_DIV2 instance)
{
    const char *result = "UNKNOWN EBU_CLC_DIV2";

    switch (instance)
    {
    case EBU_CLC_DIV2::standard_clocking_mode_clock_input_selected_b_cont:
        result = "standard_clocking_mode_clock_input_selected_b_cont";
        break;
    case EBU_CLC_DIV2::request_ebu_run_off_ahb_bus_clock_divided_by_2:
        result = "request_ebu_run_off_ahb_bus_clock_divided_by_2";
        break;
    }

    return result;
}

/**
 * Converts a C string to EBU_CLC_DIV2.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, EBU_CLC_DIV2 &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "standard_clocking_mode_clock_input_selected_b_cont", 50)))
    {
        output =
            EBU_CLC_DIV2::standard_clocking_mode_clock_input_selected_b_cont;
    }
    else if ((result = !strncmp(
                  data, "request_ebu_run_off_ahb_bus_clock_divided_by_2", 46)))
    {
        output = EBU_CLC_DIV2::request_ebu_run_off_ahb_bus_clock_divided_by_2;
    }

    return result;
}

}; // namespace XMC4700
