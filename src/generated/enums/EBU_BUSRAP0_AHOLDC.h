/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class EBU_BUSRAP0_AHOLDC : uint8_t
{
    _0_clock_cycle_selected /*!< 0 clock cycle selected */,
    _1_clock_cycle_selected = 1 /*!< 1 clock cycle selected */,
    _14_clock_cycles_selected = 14 /*!< 14 clock cycles selected */,
    _15_clock_cycles_selected = 15 /*!< 15 clock cycles selected */
};
static_assert(sizeof(EBU_BUSRAP0_AHOLDC) == 1);

/**
 * Converts EBU_BUSRAP0_AHOLDC to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(EBU_BUSRAP0_AHOLDC instance)
{
    const char *result = "UNKNOWN EBU_BUSRAP0_AHOLDC";

    switch (instance)
    {
    case EBU_BUSRAP0_AHOLDC::_0_clock_cycle_selected:
        result = "_0_clock_cycle_selected";
        break;
    case EBU_BUSRAP0_AHOLDC::_1_clock_cycle_selected:
        result = "_1_clock_cycle_selected";
        break;
    case EBU_BUSRAP0_AHOLDC::_14_clock_cycles_selected:
        result = "_14_clock_cycles_selected";
        break;
    case EBU_BUSRAP0_AHOLDC::_15_clock_cycles_selected:
        result = "_15_clock_cycles_selected";
        break;
    }

    return result;
}

/**
 * Converts a C string to EBU_BUSRAP0_AHOLDC.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, EBU_BUSRAP0_AHOLDC &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_clock_cycle_selected", 23)))
    {
        output = EBU_BUSRAP0_AHOLDC::_0_clock_cycle_selected;
    }
    else if ((result = !strncmp(data, "_1_clock_cycle_selected", 23)))
    {
        output = EBU_BUSRAP0_AHOLDC::_1_clock_cycle_selected;
    }
    else if ((result = !strncmp(data, "_14_clock_cycles_selected", 25)))
    {
        output = EBU_BUSRAP0_AHOLDC::_14_clock_cycles_selected;
    }
    else if ((result = !strncmp(data, "_15_clock_cycles_selected", 25)))
    {
        output = EBU_BUSRAP0_AHOLDC::_15_clock_cycles_selected;
    }

    return result;
}

}; // namespace XMC4700
