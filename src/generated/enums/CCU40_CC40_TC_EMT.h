/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class CCU40_CC40_TC_EMT : uint8_t
{
    clearing_cc_cont /*!< External Modulation functionality is clearing the
                        CC4yST bit. */
        ,
    gating_outputs =
        1 /*!< External Modulation functionality is gating the outputs. */
};
static_assert(sizeof(CCU40_CC40_TC_EMT) == 1);

/**
 * Converts CCU40_CC40_TC_EMT to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CCU40_CC40_TC_EMT instance)
{
    const char *result = "UNKNOWN CCU40_CC40_TC_EMT";

    switch (instance)
    {
    case CCU40_CC40_TC_EMT::clearing_cc_cont:
        result = "clearing_cc_cont";
        break;
    case CCU40_CC40_TC_EMT::gating_outputs:
        result = "gating_outputs";
        break;
    }

    return result;
}

/**
 * Converts a C string to CCU40_CC40_TC_EMT.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CCU40_CC40_TC_EMT &output)
{
    bool result = false;

    if ((result = !strncmp(data, "clearing_cc_cont", 16)))
    {
        output = CCU40_CC40_TC_EMT::clearing_cc_cont;
    }
    else if ((result = !strncmp(data, "gating_outputs", 14)))
    {
        output = CCU40_CC40_TC_EMT::gating_outputs;
    }

    return result;
}

}; // namespace XMC4700
