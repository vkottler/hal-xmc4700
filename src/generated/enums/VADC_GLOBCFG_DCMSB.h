/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_GLOBCFG_DCMSB : uint8_t
{
    _1_clock_cycles_msb_standard /*!< 1 clock cycles for the MSB (standard) */,
    _2_clock_cycles_msb_fadci_20_mhz =
        1 /*!< 2 clock cycles for the MSB (fADCI > 20 MHz) */
};
static_assert(sizeof(VADC_GLOBCFG_DCMSB) == 1);

/**
 * Converts VADC_GLOBCFG_DCMSB to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_GLOBCFG_DCMSB instance)
{
    const char *result = "UNKNOWN VADC_GLOBCFG_DCMSB";

    switch (instance)
    {
    case VADC_GLOBCFG_DCMSB::_1_clock_cycles_msb_standard:
        result = "_1_clock_cycles_msb_standard";
        break;
    case VADC_GLOBCFG_DCMSB::_2_clock_cycles_msb_fadci_20_mhz:
        result = "_2_clock_cycles_msb_fadci_20_mhz";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_GLOBCFG_DCMSB.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_GLOBCFG_DCMSB &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_1_clock_cycles_msb_standard", 28)))
    {
        output = VADC_GLOBCFG_DCMSB::_1_clock_cycles_msb_standard;
    }
    else if ((result = !strncmp(data, "_2_clock_cycles_msb_fadci_20_mhz", 32)))
    {
        output = VADC_GLOBCFG_DCMSB::_2_clock_cycles_msb_fadci_20_mhz;
    }

    return result;
}

}; // namespace XMC4700
