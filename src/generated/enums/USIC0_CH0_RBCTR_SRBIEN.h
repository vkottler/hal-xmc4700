/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_RBCTR_SRBIEN : uint8_t
{
    standard_receive_buffer_interrupt_generation__cont /*!< The standard
                                                          receive buffer
                                                          interrupt generation
                                                          is disabled. */
        ,
    _ = 1 /*!< The standard receive buffer interrupt generation is enabled. */
};
static_assert(sizeof(USIC0_CH0_RBCTR_SRBIEN) == 1);

/**
 * Converts USIC0_CH0_RBCTR_SRBIEN to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_RBCTR_SRBIEN instance)
{
    const char *result = "UNKNOWN USIC0_CH0_RBCTR_SRBIEN";

    switch (instance)
    {
    case USIC0_CH0_RBCTR_SRBIEN::
        standard_receive_buffer_interrupt_generation__cont:
        result = "standard_receive_buffer_interrupt_generation__cont";
        break;
    case USIC0_CH0_RBCTR_SRBIEN::_:
        result = "_";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_RBCTR_SRBIEN.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_RBCTR_SRBIEN &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "standard_receive_buffer_interrupt_generation__cont", 50)))
    {
        output = USIC0_CH0_RBCTR_SRBIEN::
            standard_receive_buffer_interrupt_generation__cont;
    }
    else if ((result = !strncmp(data, "_", 1)))
    {
        output = USIC0_CH0_RBCTR_SRBIEN::_;
    }

    return result;
}

}; // namespace XMC4700
