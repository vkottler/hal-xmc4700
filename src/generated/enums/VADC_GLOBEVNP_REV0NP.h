/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_GLOBEVNP_REV0NP : uint8_t
{
    0_common_s_cont /*!< Select shared service request line 0 of common service
                       request group 0 */
        ,
    3_common_s_cont = 3 /*!< Select shared service request line 3 of common
                           service request group 0 */
        ,
    0_common_s_cont_ = 4 /*!< Select shared service request line 0 of common
                            service request group 1 */
        ,
    3_common_s_cont_ = 7 /*!< Select shared service request line 3 of common
                            service request group 1 */
};
static_assert(sizeof(VADC_GLOBEVNP_REV0NP) == 1);

/**
 * Converts VADC_GLOBEVNP_REV0NP to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_GLOBEVNP_REV0NP instance)
{
    const char *result = "UNKNOWN VADC_GLOBEVNP_REV0NP";

    switch (instance)
    {
    case VADC_GLOBEVNP_REV0NP::0_common_s_cont:
        result = "0_common_s_cont";
        break;
    case VADC_GLOBEVNP_REV0NP::3_common_s_cont:
        result = "3_common_s_cont";
        break;
    case VADC_GLOBEVNP_REV0NP::0_common_s_cont_:
        result = "0_common_s_cont_";
        break;
    case VADC_GLOBEVNP_REV0NP::3_common_s_cont_:
        result = "3_common_s_cont_";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_GLOBEVNP_REV0NP.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_GLOBEVNP_REV0NP &output)
{
    bool result = false;

    if ((result = !strncmp(data, "0_common_s_cont", 15)))
    {
        output = VADC_GLOBEVNP_REV0NP::0_common_s_cont;
    }
    else if ((result = !strncmp(data, "3_common_s_cont", 15)))
    {
        output = VADC_GLOBEVNP_REV0NP::3_common_s_cont;
    }
    else if ((result = !strncmp(data, "0_common_s_cont_", 16)))
    {
        output = VADC_GLOBEVNP_REV0NP::0_common_s_cont_;
    }
    else if ((result = !strncmp(data, "3_common_s_cont_", 16)))
    {
        output = VADC_GLOBEVNP_REV0NP::3_common_s_cont_;
    }

    return result;
}

}; // namespace XMC4700
