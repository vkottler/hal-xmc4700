/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class EBU_SDRMOD_BURSTL : uint8_t
{
    1_default_after_reset /*!< 1 (default after reset) */,
    2 = 1 /*!< 2 */,
    4 = 2 /*!< 4 */,
    8 = 3 /*!< 8 */,
    16 = 4 /*!< 16 */
};
static_assert(sizeof(EBU_SDRMOD_BURSTL) == 1);

/**
 * Converts EBU_SDRMOD_BURSTL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(EBU_SDRMOD_BURSTL instance)
{
    const char *result = "UNKNOWN EBU_SDRMOD_BURSTL";

    switch (instance)
    {
    case EBU_SDRMOD_BURSTL::1_default_after_reset:
        result = "1_default_after_reset";
        break;
    case EBU_SDRMOD_BURSTL::2:
        result = "2";
        break;
    case EBU_SDRMOD_BURSTL::4:
        result = "4";
        break;
    case EBU_SDRMOD_BURSTL::8:
        result = "8";
        break;
    case EBU_SDRMOD_BURSTL::16:
        result = "16";
        break;
    }

    return result;
}

/**
 * Converts a C string to EBU_SDRMOD_BURSTL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, EBU_SDRMOD_BURSTL &output)
{
    bool result = false;

    if ((result = !strncmp(data, "1_default_after_reset", 21)))
    {
        output = EBU_SDRMOD_BURSTL::1_default_after_reset;
    }
    else if ((result = !strncmp(data, "2", 1)))
    {
        output = EBU_SDRMOD_BURSTL::2;
    }
    else if ((result = !strncmp(data, "4", 1)))
    {
        output = EBU_SDRMOD_BURSTL::4;
    }
    else if ((result = !strncmp(data, "8", 1)))
    {
        output = EBU_SDRMOD_BURSTL::8;
    }
    else if ((result = !strncmp(data, "16", 2)))
    {
        output = EBU_SDRMOD_BURSTL::16;
    }

    return result;
}

}; // namespace XMC4700
