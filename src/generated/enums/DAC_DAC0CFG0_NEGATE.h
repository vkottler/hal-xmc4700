/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class DAC_DAC0CFG0_NEGATE : uint8_t
{
    ot_negated /*!< DAC output not negated */,
    egated = 1 /*!< DAC output negated */
};
static_assert(sizeof(DAC_DAC0CFG0_NEGATE) == 1);

/**
 * Converts DAC_DAC0CFG0_NEGATE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(DAC_DAC0CFG0_NEGATE instance)
{
    const char *result = "UNKNOWN DAC_DAC0CFG0_NEGATE";

    switch (instance)
    {
    case DAC_DAC0CFG0_NEGATE::ot_negated:
        result = "ot_negated";
        break;
    case DAC_DAC0CFG0_NEGATE::egated:
        result = "egated";
        break;
    }

    return result;
}

/**
 * Converts a C string to DAC_DAC0CFG0_NEGATE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, DAC_DAC0CFG0_NEGATE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "ot_negated", 10)))
    {
        output = DAC_DAC0CFG0_NEGATE::ot_negated;
    }
    else if ((result = !strncmp(data, "egated", 6)))
    {
        output = DAC_DAC0CFG0_NEGATE::egated;
    }

    return result;
}

}; // namespace XMC4700
