/**
 * \file
 * \brief Generated by ifgen (3.2.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_BRG_SCLKCFG : uint8_t
{
    _0_delay_disabled /*!< The passive level is 0 and the delay is disabled. */
        ,
    _1_delay_disabled =
        1 /*!< The passive level is 1 and the delay is disabled. */,
    _0_delay_enabled =
        2 /*!< The passive level is 0 and the delay is enabled. */,
    _1_delay_enabled =
        3 /*!< The passive level is 1 and the delay is enabled. */
};
static_assert(sizeof(USIC0_CH0_BRG_SCLKCFG) == 1);

/**
 * Converts USIC0_CH0_BRG_SCLKCFG to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_BRG_SCLKCFG instance)
{
    const char *result = "UNKNOWN USIC0_CH0_BRG_SCLKCFG";

    switch (instance)
    {
    case USIC0_CH0_BRG_SCLKCFG::_0_delay_disabled:
        result = "_0_delay_disabled";
        break;
    case USIC0_CH0_BRG_SCLKCFG::_1_delay_disabled:
        result = "_1_delay_disabled";
        break;
    case USIC0_CH0_BRG_SCLKCFG::_0_delay_enabled:
        result = "_0_delay_enabled";
        break;
    case USIC0_CH0_BRG_SCLKCFG::_1_delay_enabled:
        result = "_1_delay_enabled";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_BRG_SCLKCFG.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_BRG_SCLKCFG &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0_delay_disabled", 17)))
    {
        output = USIC0_CH0_BRG_SCLKCFG::_0_delay_disabled;
    }
    else if ((result = !strncmp(data, "_1_delay_disabled", 17)))
    {
        output = USIC0_CH0_BRG_SCLKCFG::_1_delay_disabled;
    }
    else if ((result = !strncmp(data, "_0_delay_enabled", 16)))
    {
        output = USIC0_CH0_BRG_SCLKCFG::_0_delay_enabled;
    }
    else if ((result = !strncmp(data, "_1_delay_enabled", 16)))
    {
        output = USIC0_CH0_BRG_SCLKCFG::_1_delay_enabled;
    }

    return result;
}

}; // namespace XMC4700
