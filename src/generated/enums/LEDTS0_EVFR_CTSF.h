/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class LEDTS0_EVFR_CTSF : uint8_t
{
    no_action /*!< No action. */,
    bit_tsf_cleared = 1 /*!< Bit TSF is cleared. */
};
static_assert(sizeof(LEDTS0_EVFR_CTSF) == 1);

/**
 * Converts LEDTS0_EVFR_CTSF to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(LEDTS0_EVFR_CTSF instance)
{
    const char *result = "UNKNOWN LEDTS0_EVFR_CTSF";

    switch (instance)
    {
    case LEDTS0_EVFR_CTSF::no_action:
        result = "no_action";
        break;
    case LEDTS0_EVFR_CTSF::bit_tsf_cleared:
        result = "bit_tsf_cleared";
        break;
    }

    return result;
}

/**
 * Converts a C string to LEDTS0_EVFR_CTSF.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, LEDTS0_EVFR_CTSF &output)
{
    bool result = false;

    if ((result = !strncmp(data, "no_action", 9)))
    {
        output = LEDTS0_EVFR_CTSF::no_action;
    }
    else if ((result = !strncmp(data, "bit_tsf_cleared", 15)))
    {
        output = LEDTS0_EVFR_CTSF::bit_tsf_cleared;
    }

    return result;
}

}; // namespace XMC4700
