/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class PPB_SYST_CSR_CLKSOURCE : uint8_t
{
    external_clock /*!< external clock */,
    processor_clock = 1 /*!< processor clock. */
};
static_assert(sizeof(PPB_SYST_CSR_CLKSOURCE) == 1);

/**
 * Converts PPB_SYST_CSR_CLKSOURCE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(PPB_SYST_CSR_CLKSOURCE instance)
{
    const char *result = "UNKNOWN PPB_SYST_CSR_CLKSOURCE";

    switch (instance)
    {
    case PPB_SYST_CSR_CLKSOURCE::external_clock:
        result = "external_clock";
        break;
    case PPB_SYST_CSR_CLKSOURCE::processor_clock:
        result = "processor_clock";
        break;
    }

    return result;
}

/**
 * Converts a C string to PPB_SYST_CSR_CLKSOURCE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, PPB_SYST_CSR_CLKSOURCE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "external_clock", 14)))
    {
        output = PPB_SYST_CSR_CLKSOURCE::external_clock;
    }
    else if ((result = !strncmp(data, "processor_clock", 15)))
    {
        output = PPB_SYST_CSR_CLKSOURCE::processor_clock;
    }

    return result;
}

}; // namespace XMC4700
