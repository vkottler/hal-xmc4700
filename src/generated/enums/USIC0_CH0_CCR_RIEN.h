/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_CCR_RIEN : uint8_t
{
    disabled /*!< The receive interrupt is disabled. */,
    enabled_case_receive_event__cont =
        1 /*!< The receive interrupt is enabled. In case of a receive event,
             the service request output SRx indicated by INPR.RINP is
             activated. */
};
static_assert(sizeof(USIC0_CH0_CCR_RIEN) == 1);

/**
 * Converts USIC0_CH0_CCR_RIEN to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_CCR_RIEN instance)
{
    const char *result = "UNKNOWN USIC0_CH0_CCR_RIEN";

    switch (instance)
    {
    case USIC0_CH0_CCR_RIEN::disabled:
        result = "disabled";
        break;
    case USIC0_CH0_CCR_RIEN::enabled_case_receive_event__cont:
        result = "enabled_case_receive_event__cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_CCR_RIEN.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_CCR_RIEN &output)
{
    bool result = false;

    if ((result = !strncmp(data, "disabled", 8)))
    {
        output = USIC0_CH0_CCR_RIEN::disabled;
    }
    else if ((result = !strncmp(data, "enabled_case_receive_event__cont", 32)))
    {
        output = USIC0_CH0_CCR_RIEN::enabled_case_receive_event__cont;
    }

    return result;
}

}; // namespace XMC4700
