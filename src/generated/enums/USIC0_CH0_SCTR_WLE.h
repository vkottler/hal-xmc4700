/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_SCTR_WLE : uint8_t
{
    1_data_bit_located_at_bit__cont /*!< The data word contains 1 data bit
                                       located at bit position 0. */
        ,
    2_data_bits_located_at_bit_cont = 1 /*!< The data word contains 2 data bits
                                           located at bit positions [1:0]. */
        ,
    15_data_bits_located_at_bi_cont =
        14 /*!< The data word contains 15 data bits located at bit positions
              [14:0]. */
        ,
    16_data_bits_located_at_bi_cont =
        15 /*!< The data word contains 16 data bits located at bit positions
              [15:0]. */
};
static_assert(sizeof(USIC0_CH0_SCTR_WLE) == 1);

/**
 * Converts USIC0_CH0_SCTR_WLE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_SCTR_WLE instance)
{
    const char *result = "UNKNOWN USIC0_CH0_SCTR_WLE";

    switch (instance)
    {
    case USIC0_CH0_SCTR_WLE::1_data_bit_located_at_bit__cont:
        result = "1_data_bit_located_at_bit__cont";
        break;
    case USIC0_CH0_SCTR_WLE::2_data_bits_located_at_bit_cont:
        result = "2_data_bits_located_at_bit_cont";
        break;
    case USIC0_CH0_SCTR_WLE::15_data_bits_located_at_bi_cont:
        result = "15_data_bits_located_at_bi_cont";
        break;
    case USIC0_CH0_SCTR_WLE::16_data_bits_located_at_bi_cont:
        result = "16_data_bits_located_at_bi_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_SCTR_WLE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_SCTR_WLE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "1_data_bit_located_at_bit__cont", 31)))
    {
        output = USIC0_CH0_SCTR_WLE::1_data_bit_located_at_bit__cont;
    }
    else if ((result = !strncmp(data, "2_data_bits_located_at_bit_cont", 31)))
    {
        output = USIC0_CH0_SCTR_WLE::2_data_bits_located_at_bit_cont;
    }
    else if ((result = !strncmp(data, "15_data_bits_located_at_bi_cont", 31)))
    {
        output = USIC0_CH0_SCTR_WLE::15_data_bits_located_at_bi_cont;
    }
    else if ((result = !strncmp(data, "16_data_bits_located_at_bi_cont", 31)))
    {
        output = USIC0_CH0_SCTR_WLE::16_data_bits_located_at_bi_cont;
    }

    return result;
}

}; // namespace XMC4700
