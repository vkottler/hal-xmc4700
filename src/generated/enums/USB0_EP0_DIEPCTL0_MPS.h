/**
 * \file
 * \brief Generated by ifgen (3.2.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_EP0_DIEPCTL0_MPS : uint8_t
{
    _64_bytes /*!< 64 bytes */,
    _32_bytes = 1 /*!< 32 bytes */,
    _16_bytes = 2 /*!< 16 bytes */,
    _8_bytes = 3 /*!< 8 bytes */
};
static_assert(sizeof(USB0_EP0_DIEPCTL0_MPS) == 1);

/**
 * Converts USB0_EP0_DIEPCTL0_MPS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_EP0_DIEPCTL0_MPS instance)
{
    const char *result = "UNKNOWN USB0_EP0_DIEPCTL0_MPS";

    switch (instance)
    {
    case USB0_EP0_DIEPCTL0_MPS::_64_bytes:
        result = "_64_bytes";
        break;
    case USB0_EP0_DIEPCTL0_MPS::_32_bytes:
        result = "_32_bytes";
        break;
    case USB0_EP0_DIEPCTL0_MPS::_16_bytes:
        result = "_16_bytes";
        break;
    case USB0_EP0_DIEPCTL0_MPS::_8_bytes:
        result = "_8_bytes";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_EP0_DIEPCTL0_MPS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB0_EP0_DIEPCTL0_MPS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_64_bytes", 9)))
    {
        output = USB0_EP0_DIEPCTL0_MPS::_64_bytes;
    }
    else if ((result = !strncmp(data, "_32_bytes", 9)))
    {
        output = USB0_EP0_DIEPCTL0_MPS::_32_bytes;
    }
    else if ((result = !strncmp(data, "_16_bytes", 9)))
    {
        output = USB0_EP0_DIEPCTL0_MPS::_16_bytes;
    }
    else if ((result = !strncmp(data, "_8_bytes", 8)))
    {
        output = USB0_EP0_DIEPCTL0_MPS::_8_bytes;
    }

    return result;
}

}; // namespace XMC4700
