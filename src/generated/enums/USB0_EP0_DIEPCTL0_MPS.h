/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_EP0_DIEPCTL0_MPS : uint8_t
{
    64_bytes /*!< 64 bytes */,
    32_bytes = 1 /*!< 32 bytes */,
    16_bytes = 2 /*!< 16 bytes */,
    8_bytes = 3 /*!< 8 bytes */
};
static_assert(sizeof(USB0_EP0_DIEPCTL0_MPS) == 1);

/**
 * Converts USB0_EP0_DIEPCTL0_MPS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_EP0_DIEPCTL0_MPS instance)
{
    const char *result = "UNKNOWN USB0_EP0_DIEPCTL0_MPS";

    switch (instance)
    {
    case USB0_EP0_DIEPCTL0_MPS::64_bytes:
        result = "64_bytes";
        break;
    case USB0_EP0_DIEPCTL0_MPS::32_bytes:
        result = "32_bytes";
        break;
    case USB0_EP0_DIEPCTL0_MPS::16_bytes:
        result = "16_bytes";
        break;
    case USB0_EP0_DIEPCTL0_MPS::8_bytes:
        result = "8_bytes";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_EP0_DIEPCTL0_MPS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB0_EP0_DIEPCTL0_MPS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "64_bytes", 8)))
    {
        output = USB0_EP0_DIEPCTL0_MPS::64_bytes;
    }
    else if ((result = !strncmp(data, "32_bytes", 8)))
    {
        output = USB0_EP0_DIEPCTL0_MPS::32_bytes;
    }
    else if ((result = !strncmp(data, "16_bytes", 8)))
    {
        output = USB0_EP0_DIEPCTL0_MPS::16_bytes;
    }
    else if ((result = !strncmp(data, "8_bytes", 7)))
    {
        output = USB0_EP0_DIEPCTL0_MPS::8_bytes;
    }

    return result;
}

}; // namespace XMC4700
