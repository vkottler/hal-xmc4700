/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class EBU_BUSRAP0_WAITRDC : uint8_t
{
    1_wait_state /*!< 1 wait state. */,
    1_wait_states = 1 /*!< 1 wait states. */,
    2_wait_state = 2 /*!< 2 wait state. */,
    30_wait_states = 30 /*!< 30 wait states. */,
    31_wait_states = 31 /*!< 31 wait states. */
};
static_assert(sizeof(EBU_BUSRAP0_WAITRDC) == 1);

/**
 * Converts EBU_BUSRAP0_WAITRDC to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(EBU_BUSRAP0_WAITRDC instance)
{
    const char *result = "UNKNOWN EBU_BUSRAP0_WAITRDC";

    switch (instance)
    {
    case EBU_BUSRAP0_WAITRDC::1_wait_state:
        result = "1_wait_state";
        break;
    case EBU_BUSRAP0_WAITRDC::1_wait_states:
        result = "1_wait_states";
        break;
    case EBU_BUSRAP0_WAITRDC::2_wait_state:
        result = "2_wait_state";
        break;
    case EBU_BUSRAP0_WAITRDC::30_wait_states:
        result = "30_wait_states";
        break;
    case EBU_BUSRAP0_WAITRDC::31_wait_states:
        result = "31_wait_states";
        break;
    }

    return result;
}

/**
 * Converts a C string to EBU_BUSRAP0_WAITRDC.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, EBU_BUSRAP0_WAITRDC &output)
{
    bool result = false;

    if ((result = !strncmp(data, "1_wait_state", 12)))
    {
        output = EBU_BUSRAP0_WAITRDC::1_wait_state;
    }
    else if ((result = !strncmp(data, "1_wait_states", 13)))
    {
        output = EBU_BUSRAP0_WAITRDC::1_wait_states;
    }
    else if ((result = !strncmp(data, "2_wait_state", 12)))
    {
        output = EBU_BUSRAP0_WAITRDC::2_wait_state;
    }
    else if ((result = !strncmp(data, "30_wait_states", 14)))
    {
        output = EBU_BUSRAP0_WAITRDC::30_wait_states;
    }
    else if ((result = !strncmp(data, "31_wait_states", 14)))
    {
        output = EBU_BUSRAP0_WAITRDC::31_wait_states;
    }

    return result;
}

}; // namespace XMC4700
