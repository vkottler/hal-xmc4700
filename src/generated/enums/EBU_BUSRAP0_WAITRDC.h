/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class EBU_BUSRAP0_WAITRDC : uint8_t
{
    _1_wait_state /*!< 1 wait state. */,
    _1_wait_states = 1 /*!< 1 wait states. */,
    _2_wait_state = 2 /*!< 2 wait state. */,
    _30_wait_states = 30 /*!< 30 wait states. */,
    _31_wait_states = 31 /*!< 31 wait states. */
};
static_assert(sizeof(EBU_BUSRAP0_WAITRDC) == 1);

/**
 * Converts EBU_BUSRAP0_WAITRDC to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(EBU_BUSRAP0_WAITRDC instance)
{
    const char *result = "UNKNOWN EBU_BUSRAP0_WAITRDC";

    switch (instance)
    {
    case EBU_BUSRAP0_WAITRDC::_1_wait_state:
        result = "_1_wait_state";
        break;
    case EBU_BUSRAP0_WAITRDC::_1_wait_states:
        result = "_1_wait_states";
        break;
    case EBU_BUSRAP0_WAITRDC::_2_wait_state:
        result = "_2_wait_state";
        break;
    case EBU_BUSRAP0_WAITRDC::_30_wait_states:
        result = "_30_wait_states";
        break;
    case EBU_BUSRAP0_WAITRDC::_31_wait_states:
        result = "_31_wait_states";
        break;
    }

    return result;
}

/**
 * Converts a C string to EBU_BUSRAP0_WAITRDC.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, EBU_BUSRAP0_WAITRDC &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_1_wait_state", 13)))
    {
        output = EBU_BUSRAP0_WAITRDC::_1_wait_state;
    }
    else if ((result = !strncmp(data, "_1_wait_states", 14)))
    {
        output = EBU_BUSRAP0_WAITRDC::_1_wait_states;
    }
    else if ((result = !strncmp(data, "_2_wait_state", 13)))
    {
        output = EBU_BUSRAP0_WAITRDC::_2_wait_state;
    }
    else if ((result = !strncmp(data, "_30_wait_states", 15)))
    {
        output = EBU_BUSRAP0_WAITRDC::_30_wait_states;
    }
    else if ((result = !strncmp(data, "_31_wait_states", 15)))
    {
        output = EBU_BUSRAP0_WAITRDC::_31_wait_states;
    }

    return result;
}

}; // namespace XMC4700
