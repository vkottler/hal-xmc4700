/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class FLASH0_FSR_PFDBER : uint8_t
{
    no_double_bit_error_detected_during_read_acce_cont /*!< No Double-Bit Error
                                                          detected during read
                                                          access to PFLASH */
        ,
    double_bit_error_detected_pflash =
        1 /*!< Double-Bit Error detected in PFLASH */
};
static_assert(sizeof(FLASH0_FSR_PFDBER) == 1);

/**
 * Converts FLASH0_FSR_PFDBER to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLASH0_FSR_PFDBER instance)
{
    const char *result = "UNKNOWN FLASH0_FSR_PFDBER";

    switch (instance)
    {
    case FLASH0_FSR_PFDBER::no_double_bit_error_detected_during_read_acce_cont:
        result = "no_double_bit_error_detected_during_read_acce_cont";
        break;
    case FLASH0_FSR_PFDBER::double_bit_error_detected_pflash:
        result = "double_bit_error_detected_pflash";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLASH0_FSR_PFDBER.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLASH0_FSR_PFDBER &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "no_double_bit_error_detected_during_read_acce_cont", 50)))
    {
        output = FLASH0_FSR_PFDBER::
            no_double_bit_error_detected_during_read_acce_cont;
    }
    else if ((result = !strncmp(data, "double_bit_error_detected_pflash", 32)))
    {
        output = FLASH0_FSR_PFDBER::double_bit_error_detected_pflash;
    }

    return result;
}

}; // namespace XMC4700
