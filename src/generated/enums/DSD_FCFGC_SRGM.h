/**
 * \file
 * \brief Generated by ifgen (3.0.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class DSD_FCFGC_SRGM : uint8_t
{
    value1 /*!< Never, service requests disabled */,
    value4 = 3 /*!< Always, for each new result value */
};
static_assert(sizeof(DSD_FCFGC_SRGM) == 1);

static constexpr uint16_t DSD_FCFGC_SRGM_id = 253;

/**
 * Converts DSD_FCFGC_SRGM to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(DSD_FCFGC_SRGM instance)
{
    const char *result = "UNKNOWN DSD_FCFGC_SRGM";

    switch (instance)
    {
    case DSD_FCFGC_SRGM::value1:
        result = "value1";
        break;
    case DSD_FCFGC_SRGM::value4:
        result = "value4";
        break;
    }

    return result;
}

/**
 * Converts a C string to DSD_FCFGC_SRGM.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, DSD_FCFGC_SRGM &output)
{
    bool result = false;

    if ((result = !strncmp(data, "value1", 6)))
    {
        output = DSD_FCFGC_SRGM::value1;
    }
    else if ((result = !strncmp(data, "value4", 6)))
    {
        output = DSD_FCFGC_SRGM::value4;
    }

    return result;
}

}; // namespace XMC4700
