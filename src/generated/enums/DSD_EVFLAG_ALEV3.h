/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class DSD_EVFLAG_ALEV3 : uint8_t
{
    no_alarm_event /*!< No alarm event */,
    an_alarm_event_has_occurred = 1 /*!< An alarm event has occurred */
};
static_assert(sizeof(DSD_EVFLAG_ALEV3) == 1);

/**
 * Converts DSD_EVFLAG_ALEV3 to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(DSD_EVFLAG_ALEV3 instance)
{
    const char *result = "UNKNOWN DSD_EVFLAG_ALEV3";

    switch (instance)
    {
    case DSD_EVFLAG_ALEV3::no_alarm_event:
        result = "no_alarm_event";
        break;
    case DSD_EVFLAG_ALEV3::an_alarm_event_has_occurred:
        result = "an_alarm_event_has_occurred";
        break;
    }

    return result;
}

/**
 * Converts a C string to DSD_EVFLAG_ALEV3.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, DSD_EVFLAG_ALEV3 &output)
{
    bool result = false;

    if ((result = !strncmp(data, "no_alarm_event", 14)))
    {
        output = DSD_EVFLAG_ALEV3::no_alarm_event;
    }
    else if ((result = !strncmp(data, "an_alarm_event_has_occurred", 27)))
    {
        output = DSD_EVFLAG_ALEV3::an_alarm_event_has_occurred;
    }

    return result;
}

}; // namespace XMC4700
