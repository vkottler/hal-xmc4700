/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class DSD_CH0_FCFGC_CFEN : uint8_t
{
    cic_filter_disabled_bypassed /*!< CIC filter disabled and bypassed */,
    enable_cic_filter = 1 /*!< Enable CIC filter */
};
static_assert(sizeof(DSD_CH0_FCFGC_CFEN) == 1);

/**
 * Converts DSD_CH0_FCFGC_CFEN to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(DSD_CH0_FCFGC_CFEN instance)
{
    const char *result = "UNKNOWN DSD_CH0_FCFGC_CFEN";

    switch (instance)
    {
    case DSD_CH0_FCFGC_CFEN::cic_filter_disabled_bypassed:
        result = "cic_filter_disabled_bypassed";
        break;
    case DSD_CH0_FCFGC_CFEN::enable_cic_filter:
        result = "enable_cic_filter";
        break;
    }

    return result;
}

/**
 * Converts a C string to DSD_CH0_FCFGC_CFEN.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, DSD_CH0_FCFGC_CFEN &output)
{
    bool result = false;

    if ((result = !strncmp(data, "cic_filter_disabled_bypassed", 28)))
    {
        output = DSD_CH0_FCFGC_CFEN::cic_filter_disabled_bypassed;
    }
    else if ((result = !strncmp(data, "enable_cic_filter", 17)))
    {
        output = DSD_CH0_FCFGC_CFEN::enable_cic_filter;
    }

    return result;
}

}; // namespace XMC4700
