/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class FLASH0_FSR_PFPAGE : uint8_t
{
    not_page_mode /*!< Program Flash not in page mode */,
    page_mode_assembly_buffer_pflas_cont =
        1 /*!< Program Flash in page mode; assembly buffer of PFLASH (256 byte)
             is in use (being filled up) */
};
static_assert(sizeof(FLASH0_FSR_PFPAGE) == 1);

/**
 * Converts FLASH0_FSR_PFPAGE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLASH0_FSR_PFPAGE instance)
{
    const char *result = "UNKNOWN FLASH0_FSR_PFPAGE";

    switch (instance)
    {
    case FLASH0_FSR_PFPAGE::not_page_mode:
        result = "not_page_mode";
        break;
    case FLASH0_FSR_PFPAGE::page_mode_assembly_buffer_pflas_cont:
        result = "page_mode_assembly_buffer_pflas_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLASH0_FSR_PFPAGE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLASH0_FSR_PFPAGE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "not_page_mode", 13)))
    {
        output = FLASH0_FSR_PFPAGE::not_page_mode;
    }
    else if ((result =
                  !strncmp(data, "page_mode_assembly_buffer_pflas_cont", 36)))
    {
        output = FLASH0_FSR_PFPAGE::page_mode_assembly_buffer_pflas_cont;
    }

    return result;
}

}; // namespace XMC4700
