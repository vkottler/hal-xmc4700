/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_INPR_TSINP : uint8_t
{
    0_becomes_activated /*!< Output SR0 becomes activated. */,
    1_becomes_activated = 1 /*!< Output SR1 becomes activated. */,
    2_becomes_activated = 2 /*!< Output SR2 becomes activated. */,
    3_becomes_activated = 3 /*!< Output SR3 becomes activated. */,
    4_becomes_activated = 4 /*!< Output SR4 becomes activated. */,
    5_becomes_activated = 5 /*!< Output SR5 becomes activated. */
};
static_assert(sizeof(USIC0_CH0_INPR_TSINP) == 1);

/**
 * Converts USIC0_CH0_INPR_TSINP to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_INPR_TSINP instance)
{
    const char *result = "UNKNOWN USIC0_CH0_INPR_TSINP";

    switch (instance)
    {
    case USIC0_CH0_INPR_TSINP::0_becomes_activated:
        result = "0_becomes_activated";
        break;
    case USIC0_CH0_INPR_TSINP::1_becomes_activated:
        result = "1_becomes_activated";
        break;
    case USIC0_CH0_INPR_TSINP::2_becomes_activated:
        result = "2_becomes_activated";
        break;
    case USIC0_CH0_INPR_TSINP::3_becomes_activated:
        result = "3_becomes_activated";
        break;
    case USIC0_CH0_INPR_TSINP::4_becomes_activated:
        result = "4_becomes_activated";
        break;
    case USIC0_CH0_INPR_TSINP::5_becomes_activated:
        result = "5_becomes_activated";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_INPR_TSINP.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_INPR_TSINP &output)
{
    bool result = false;

    if ((result = !strncmp(data, "0_becomes_activated", 19)))
    {
        output = USIC0_CH0_INPR_TSINP::0_becomes_activated;
    }
    else if ((result = !strncmp(data, "1_becomes_activated", 19)))
    {
        output = USIC0_CH0_INPR_TSINP::1_becomes_activated;
    }
    else if ((result = !strncmp(data, "2_becomes_activated", 19)))
    {
        output = USIC0_CH0_INPR_TSINP::2_becomes_activated;
    }
    else if ((result = !strncmp(data, "3_becomes_activated", 19)))
    {
        output = USIC0_CH0_INPR_TSINP::3_becomes_activated;
    }
    else if ((result = !strncmp(data, "4_becomes_activated", 19)))
    {
        output = USIC0_CH0_INPR_TSINP::4_becomes_activated;
    }
    else if ((result = !strncmp(data, "5_becomes_activated", 19)))
    {
        output = USIC0_CH0_INPR_TSINP::5_becomes_activated;
    }

    return result;
}

}; // namespace XMC4700
