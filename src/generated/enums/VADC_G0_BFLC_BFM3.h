/**
 * \file
 * \brief Generated by ifgen (3.2.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_G0_BFLC_BFM3 : uint8_t
{
    disable_boundary_flag_bfly_not_changed /*!< Disable boundary flag, BFLy is
                                              not changed */
        ,
    always_enable_boundary_flag_follow_compare_results =
        1 /*!< Always enable boundary flag (follow compare results) */,
    enable_boundary_flag_while_gate_source_0_acti_cont =
        2 /*!< Enable boundary flag while gate of source 0 is active, clear
             BFLy while gate is inactive */
        ,
    enable_boundary_flag_while_gate_source_1_acti_cont =
        3 /*!< Enable boundary flag while gate of source 1 is active, clear
             BFLy while gate is inactive */
};
static_assert(sizeof(VADC_G0_BFLC_BFM3) == 1);

/**
 * Converts VADC_G0_BFLC_BFM3 to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_G0_BFLC_BFM3 instance)
{
    const char *result = "UNKNOWN VADC_G0_BFLC_BFM3";

    switch (instance)
    {
    case VADC_G0_BFLC_BFM3::disable_boundary_flag_bfly_not_changed:
        result = "disable_boundary_flag_bfly_not_changed";
        break;
    case VADC_G0_BFLC_BFM3::always_enable_boundary_flag_follow_compare_results:
        result = "always_enable_boundary_flag_follow_compare_results";
        break;
    case VADC_G0_BFLC_BFM3::enable_boundary_flag_while_gate_source_0_acti_cont:
        result = "enable_boundary_flag_while_gate_source_0_acti_cont";
        break;
    case VADC_G0_BFLC_BFM3::enable_boundary_flag_while_gate_source_1_acti_cont:
        result = "enable_boundary_flag_while_gate_source_1_acti_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_G0_BFLC_BFM3.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_G0_BFLC_BFM3 &output)
{
    bool result = false;

    if ((result =
             !strncmp(data, "disable_boundary_flag_bfly_not_changed", 38)))
    {
        output = VADC_G0_BFLC_BFM3::disable_boundary_flag_bfly_not_changed;
    }
    else if ((result = !strncmp(
                  data, "always_enable_boundary_flag_follow_compare_results",
                  50)))
    {
        output = VADC_G0_BFLC_BFM3::
            always_enable_boundary_flag_follow_compare_results;
    }
    else if ((result = !strncmp(
                  data, "enable_boundary_flag_while_gate_source_0_acti_cont",
                  50)))
    {
        output = VADC_G0_BFLC_BFM3::
            enable_boundary_flag_while_gate_source_0_acti_cont;
    }
    else if ((result = !strncmp(
                  data, "enable_boundary_flag_while_gate_source_1_acti_cont",
                  50)))
    {
        output = VADC_G0_BFLC_BFM3::
            enable_boundary_flag_while_gate_source_1_acti_cont;
    }

    return result;
}

}; // namespace XMC4700
