/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class FLASH0_PROCON2_S9ROM : uint8_t
{
    no_rom_functionality_configured_sector_n /*!< No ROM functionality
                                                configured for sector n. */
        ,
    rom_functionality_configured_sector_n_re_prog_cont =
        1 /*!< ROM functionality is configured for sector n. Re-programming of
             this sector is no longer possible. */
};
static_assert(sizeof(FLASH0_PROCON2_S9ROM) == 1);

/**
 * Converts FLASH0_PROCON2_S9ROM to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLASH0_PROCON2_S9ROM instance)
{
    const char *result = "UNKNOWN FLASH0_PROCON2_S9ROM";

    switch (instance)
    {
    case FLASH0_PROCON2_S9ROM::no_rom_functionality_configured_sector_n:
        result = "no_rom_functionality_configured_sector_n";
        break;
    case FLASH0_PROCON2_S9ROM::
        rom_functionality_configured_sector_n_re_prog_cont:
        result = "rom_functionality_configured_sector_n_re_prog_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLASH0_PROCON2_S9ROM.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLASH0_PROCON2_S9ROM &output)
{
    bool result = false;

    if ((result =
             !strncmp(data, "no_rom_functionality_configured_sector_n", 40)))
    {
        output =
            FLASH0_PROCON2_S9ROM::no_rom_functionality_configured_sector_n;
    }
    else if ((result = !strncmp(
                  data, "rom_functionality_configured_sector_n_re_prog_cont",
                  50)))
    {
        output = FLASH0_PROCON2_S9ROM::
            rom_functionality_configured_sector_n_re_prog_cont;
    }

    return result;
}

}; // namespace XMC4700
