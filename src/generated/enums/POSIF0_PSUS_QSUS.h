/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class POSIF0_PSUS_QSUS : uint8_t
{
    suspend_request_ignored /*!< Suspend request ignored */,
    stop_immediately = 1 /*!< Stop immediately */,
    suspend_next_index_occurrence =
        2 /*!< Suspend in the next index occurrence */,
    suspend_next_phase_phasea_or_phaseb_occurrence =
        3 /*!< Suspend in the next phase (PhaseA or PhaseB) occurrence */
};
static_assert(sizeof(POSIF0_PSUS_QSUS) == 1);

/**
 * Converts POSIF0_PSUS_QSUS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(POSIF0_PSUS_QSUS instance)
{
    const char *result = "UNKNOWN POSIF0_PSUS_QSUS";

    switch (instance)
    {
    case POSIF0_PSUS_QSUS::suspend_request_ignored:
        result = "suspend_request_ignored";
        break;
    case POSIF0_PSUS_QSUS::stop_immediately:
        result = "stop_immediately";
        break;
    case POSIF0_PSUS_QSUS::suspend_next_index_occurrence:
        result = "suspend_next_index_occurrence";
        break;
    case POSIF0_PSUS_QSUS::suspend_next_phase_phasea_or_phaseb_occurrence:
        result = "suspend_next_phase_phasea_or_phaseb_occurrence";
        break;
    }

    return result;
}

/**
 * Converts a C string to POSIF0_PSUS_QSUS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, POSIF0_PSUS_QSUS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "suspend_request_ignored", 23)))
    {
        output = POSIF0_PSUS_QSUS::suspend_request_ignored;
    }
    else if ((result = !strncmp(data, "stop_immediately", 16)))
    {
        output = POSIF0_PSUS_QSUS::stop_immediately;
    }
    else if ((result = !strncmp(data, "suspend_next_index_occurrence", 29)))
    {
        output = POSIF0_PSUS_QSUS::suspend_next_index_occurrence;
    }
    else if ((result = !strncmp(
                  data, "suspend_next_phase_phasea_or_phaseb_occurrence", 46)))
    {
        output =
            POSIF0_PSUS_QSUS::suspend_next_phase_phasea_or_phaseb_occurrence;
    }

    return result;
}

}; // namespace XMC4700
