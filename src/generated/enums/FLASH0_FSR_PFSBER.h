/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class FLASH0_FSR_PFSBER : uint8_t
{
    no_single_bit_error_detected_during_read_acce_cont /*!< No Single-Bit Error
                                                          detected during read
                                                          access to PFLASH */
        ,
    single_bit_error_detected_corrected =
        1 /*!< Single-Bit Error detected and corrected */
};
static_assert(sizeof(FLASH0_FSR_PFSBER) == 1);

/**
 * Converts FLASH0_FSR_PFSBER to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLASH0_FSR_PFSBER instance)
{
    const char *result = "UNKNOWN FLASH0_FSR_PFSBER";

    switch (instance)
    {
    case FLASH0_FSR_PFSBER::no_single_bit_error_detected_during_read_acce_cont:
        result = "no_single_bit_error_detected_during_read_acce_cont";
        break;
    case FLASH0_FSR_PFSBER::single_bit_error_detected_corrected:
        result = "single_bit_error_detected_corrected";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLASH0_FSR_PFSBER.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLASH0_FSR_PFSBER &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "no_single_bit_error_detected_during_read_acce_cont", 50)))
    {
        output = FLASH0_FSR_PFSBER::
            no_single_bit_error_detected_during_read_acce_cont;
    }
    else if ((result =
                  !strncmp(data, "single_bit_error_detected_corrected", 35)))
    {
        output = FLASH0_FSR_PFSBER::single_bit_error_detected_corrected;
    }

    return result;
}

}; // namespace XMC4700
