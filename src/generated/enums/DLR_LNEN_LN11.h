/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class DLR_LNEN_LN11 : uint8_t
{
    disables_line /*!< Disables the line */,
    enables_line_resets_pending_request =
        1 /*!< Enables the line and resets a pending request */
};
static_assert(sizeof(DLR_LNEN_LN11) == 1);

/**
 * Converts DLR_LNEN_LN11 to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(DLR_LNEN_LN11 instance)
{
    const char *result = "UNKNOWN DLR_LNEN_LN11";

    switch (instance)
    {
    case DLR_LNEN_LN11::disables_line:
        result = "disables_line";
        break;
    case DLR_LNEN_LN11::enables_line_resets_pending_request:
        result = "enables_line_resets_pending_request";
        break;
    }

    return result;
}

/**
 * Converts a C string to DLR_LNEN_LN11.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, DLR_LNEN_LN11 &output)
{
    bool result = false;

    if ((result = !strncmp(data, "disables_line", 13)))
    {
        output = DLR_LNEN_LN11::disables_line;
    }
    else if ((result =
                  !strncmp(data, "enables_line_resets_pending_request", 35)))
    {
        output = DLR_LNEN_LN11::enables_line_resets_pending_request;
    }

    return result;
}

}; // namespace XMC4700
