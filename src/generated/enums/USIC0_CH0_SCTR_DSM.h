/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_SCTR_DSM : uint8_t
{
    one_bit_at__cont /*!< Receive and transmit data is shifted in and out one
                        bit at a time through DX0 and DOUT0. */
        ,
    two_bits_at_cont = 2 /*!< Receive and transmit data is shifted in and out
                            two bits at a time through two input stages (DX0
                            and DX3) and DOUT[1:0] respectively. */
        ,
    four_bits_a_cont = 3 /*!< Receive and transmit data is shifted in and out
                            four bits at a time through four input stages (DX0,
                            DX[5:3]) and DOUT[3:0] respectively. */
};
static_assert(sizeof(USIC0_CH0_SCTR_DSM) == 1);

/**
 * Converts USIC0_CH0_SCTR_DSM to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_SCTR_DSM instance)
{
    const char *result = "UNKNOWN USIC0_CH0_SCTR_DSM";

    switch (instance)
    {
    case USIC0_CH0_SCTR_DSM::one_bit_at__cont:
        result = "one_bit_at__cont";
        break;
    case USIC0_CH0_SCTR_DSM::two_bits_at_cont:
        result = "two_bits_at_cont";
        break;
    case USIC0_CH0_SCTR_DSM::four_bits_a_cont:
        result = "four_bits_a_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_SCTR_DSM.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_SCTR_DSM &output)
{
    bool result = false;

    if ((result = !strncmp(data, "one_bit_at__cont", 16)))
    {
        output = USIC0_CH0_SCTR_DSM::one_bit_at__cont;
    }
    else if ((result = !strncmp(data, "two_bits_at_cont", 16)))
    {
        output = USIC0_CH0_SCTR_DSM::two_bits_at_cont;
    }
    else if ((result = !strncmp(data, "four_bits_a_cont", 16)))
    {
        output = USIC0_CH0_SCTR_DSM::four_bits_a_cont;
    }

    return result;
}

}; // namespace XMC4700
