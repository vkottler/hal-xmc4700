/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_PCR_IISMode_DTEN : uint8_t
{
    changes_wa_input_signal_ignored_no_transfers__cont /*!< The changes of the
                                                          WA input signal are
                                                          ignored and no
                                                          transfers take place.
                                                        */
        ,
    transfers_enabled = 1 /*!< Transfers are enabled. */
};
static_assert(sizeof(USIC0_CH0_PCR_IISMode_DTEN) == 1);

/**
 * Converts USIC0_CH0_PCR_IISMode_DTEN to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_PCR_IISMode_DTEN instance)
{
    const char *result = "UNKNOWN USIC0_CH0_PCR_IISMode_DTEN";

    switch (instance)
    {
    case USIC0_CH0_PCR_IISMode_DTEN::
        changes_wa_input_signal_ignored_no_transfers__cont:
        result = "changes_wa_input_signal_ignored_no_transfers__cont";
        break;
    case USIC0_CH0_PCR_IISMode_DTEN::transfers_enabled:
        result = "transfers_enabled";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_PCR_IISMode_DTEN.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_PCR_IISMode_DTEN &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "changes_wa_input_signal_ignored_no_transfers__cont", 50)))
    {
        output = USIC0_CH0_PCR_IISMode_DTEN::
            changes_wa_input_signal_ignored_no_transfers__cont;
    }
    else if ((result = !strncmp(data, "transfers_enabled", 17)))
    {
        output = USIC0_CH0_PCR_IISMode_DTEN::transfers_enabled;
    }

    return result;
}

}; // namespace XMC4700
