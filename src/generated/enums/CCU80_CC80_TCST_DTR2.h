/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class CCU80_CC80_TCST_DTR2 : uint8_t
{
    idle /*!< Dead Time counter is idle */,
    running = 1 /*!< Dead Time counter is running */
};
static_assert(sizeof(CCU80_CC80_TCST_DTR2) == 1);

/**
 * Converts CCU80_CC80_TCST_DTR2 to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CCU80_CC80_TCST_DTR2 instance)
{
    const char *result = "UNKNOWN CCU80_CC80_TCST_DTR2";

    switch (instance)
    {
    case CCU80_CC80_TCST_DTR2::idle:
        result = "idle";
        break;
    case CCU80_CC80_TCST_DTR2::running:
        result = "running";
        break;
    }

    return result;
}

/**
 * Converts a C string to CCU80_CC80_TCST_DTR2.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CCU80_CC80_TCST_DTR2 &output)
{
    bool result = false;

    if ((result = !strncmp(data, "idle", 4)))
    {
        output = CCU80_CC80_TCST_DTR2::idle;
    }
    else if ((result = !strncmp(data, "running", 7)))
    {
        output = CCU80_CC80_TCST_DTR2::running;
    }

    return result;
}

}; // namespace XMC4700
