/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class LEDTS0_FNCTL_TSCTRSAT : uint8_t
{
    disable /*!< Disable */,
    enable_ts_counter_stops_counting_touch_sense__cont =
        1 /*!< Enable. TS-counter stops counting in the touch-sense time
             slice(s) of the same (extended) frame when it reaches FFH. Counter
             starts to count again on the first pad turn of a new TSIN[x],
             triggered on compare match. */
};
static_assert(sizeof(LEDTS0_FNCTL_TSCTRSAT) == 1);

/**
 * Converts LEDTS0_FNCTL_TSCTRSAT to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(LEDTS0_FNCTL_TSCTRSAT instance)
{
    const char *result = "UNKNOWN LEDTS0_FNCTL_TSCTRSAT";

    switch (instance)
    {
    case LEDTS0_FNCTL_TSCTRSAT::disable:
        result = "disable";
        break;
    case LEDTS0_FNCTL_TSCTRSAT::
        enable_ts_counter_stops_counting_touch_sense__cont:
        result = "enable_ts_counter_stops_counting_touch_sense__cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to LEDTS0_FNCTL_TSCTRSAT.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, LEDTS0_FNCTL_TSCTRSAT &output)
{
    bool result = false;

    if ((result = !strncmp(data, "disable", 7)))
    {
        output = LEDTS0_FNCTL_TSCTRSAT::disable;
    }
    else if ((result = !strncmp(
                  data, "enable_ts_counter_stops_counting_touch_sense__cont",
                  50)))
    {
        output = LEDTS0_FNCTL_TSCTRSAT::
            enable_ts_counter_stops_counting_touch_sense__cont;
    }

    return result;
}

}; // namespace XMC4700
