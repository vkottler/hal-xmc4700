/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class EBU_SDRMCON_SDCMSEL : uint8_t
{
    disabled_between_accesses = 1 /*!< clock disabled between accesses */,
    continuously_runs /*!< clock continuously runs */
};
static_assert(sizeof(EBU_SDRMCON_SDCMSEL) == 1);

/**
 * Converts EBU_SDRMCON_SDCMSEL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(EBU_SDRMCON_SDCMSEL instance)
{
    const char *result = "UNKNOWN EBU_SDRMCON_SDCMSEL";

    switch (instance)
    {
    case EBU_SDRMCON_SDCMSEL::disabled_between_accesses:
        result = "disabled_between_accesses";
        break;
    case EBU_SDRMCON_SDCMSEL::continuously_runs:
        result = "continuously_runs";
        break;
    }

    return result;
}

/**
 * Converts a C string to EBU_SDRMCON_SDCMSEL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, EBU_SDRMCON_SDCMSEL &output)
{
    bool result = false;

    if ((result = !strncmp(data, "disabled_between_accesses", 25)))
    {
        output = EBU_SDRMCON_SDCMSEL::disabled_between_accesses;
    }
    else if ((result = !strncmp(data, "continuously_runs", 17)))
    {
        output = EBU_SDRMCON_SDCMSEL::continuously_runs;
    }

    return result;
}

}; // namespace XMC4700
