/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class EBU_BUSRCON0_FBBMSEL : uint8_t
{
    burst_buffer_length_defined_by_value_fetblen__cont /*!< Burst buffer length
                                                          defined by value in
                                                          FETBLEN (default
                                                          after reset). */
        ,
    continuous_mode_all_data_required_transaction_cont =
        1 /*!< Continuous mode. All data required for transaction is
             transferred in a single burst. */
};
static_assert(sizeof(EBU_BUSRCON0_FBBMSEL) == 1);

/**
 * Converts EBU_BUSRCON0_FBBMSEL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(EBU_BUSRCON0_FBBMSEL instance)
{
    const char *result = "UNKNOWN EBU_BUSRCON0_FBBMSEL";

    switch (instance)
    {
    case EBU_BUSRCON0_FBBMSEL::
        burst_buffer_length_defined_by_value_fetblen__cont:
        result = "burst_buffer_length_defined_by_value_fetblen__cont";
        break;
    case EBU_BUSRCON0_FBBMSEL::
        continuous_mode_all_data_required_transaction_cont:
        result = "continuous_mode_all_data_required_transaction_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to EBU_BUSRCON0_FBBMSEL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, EBU_BUSRCON0_FBBMSEL &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "burst_buffer_length_defined_by_value_fetblen__cont", 50)))
    {
        output = EBU_BUSRCON0_FBBMSEL::
            burst_buffer_length_defined_by_value_fetblen__cont;
    }
    else if ((result = !strncmp(
                  data, "continuous_mode_all_data_required_transaction_cont",
                  50)))
    {
        output = EBU_BUSRCON0_FBBMSEL::
            continuous_mode_all_data_required_transaction_cont;
    }

    return result;
}

}; // namespace XMC4700
