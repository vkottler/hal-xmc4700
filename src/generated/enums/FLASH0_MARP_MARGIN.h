/**
 * \file
 * \brief Generated by ifgen (3.2.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class FLASH0_MARP_MARGIN : uint8_t
{
    standard_default_margin /*!< Standard (default) margin. */,
    tight_margin_0_low_level_suboptimal_0_bits_read_1s =
        1 /*!< Tight margin for 0 (low) level. Suboptimal 0-bits are read as
             1s. */
        ,
    tight_margin_1_high_level_suboptimal_1_bits_r_cont =
        4 /*!< Tight margin for 1 (high) level. Suboptimal 1-bits are read as
             0s. */
};
static_assert(sizeof(FLASH0_MARP_MARGIN) == 1);

/**
 * Converts FLASH0_MARP_MARGIN to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLASH0_MARP_MARGIN instance)
{
    const char *result = "UNKNOWN FLASH0_MARP_MARGIN";

    switch (instance)
    {
    case FLASH0_MARP_MARGIN::standard_default_margin:
        result = "standard_default_margin";
        break;
    case FLASH0_MARP_MARGIN::
        tight_margin_0_low_level_suboptimal_0_bits_read_1s:
        result = "tight_margin_0_low_level_suboptimal_0_bits_read_1s";
        break;
    case FLASH0_MARP_MARGIN::
        tight_margin_1_high_level_suboptimal_1_bits_r_cont:
        result = "tight_margin_1_high_level_suboptimal_1_bits_r_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLASH0_MARP_MARGIN.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLASH0_MARP_MARGIN &output)
{
    bool result = false;

    if ((result = !strncmp(data, "standard_default_margin", 23)))
    {
        output = FLASH0_MARP_MARGIN::standard_default_margin;
    }
    else if ((result = !strncmp(
                  data, "tight_margin_0_low_level_suboptimal_0_bits_read_1s",
                  50)))
    {
        output = FLASH0_MARP_MARGIN::
            tight_margin_0_low_level_suboptimal_0_bits_read_1s;
    }
    else if ((result = !strncmp(
                  data, "tight_margin_1_high_level_suboptimal_1_bits_r_cont",
                  50)))
    {
        output = FLASH0_MARP_MARGIN::
            tight_margin_1_high_level_suboptimal_1_bits_r_cont;
    }

    return result;
}

}; // namespace XMC4700
