/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class POSIF0_PCONF_MSES : uint8_t
{
    risi_cont /*!< The signal used to enable a pattern update is active on the
                 rising edge */
        ,
    fall_cont = 1 /*!< The signal used to enable a pattern update is active on
                     the falling edge */
};
static_assert(sizeof(POSIF0_PCONF_MSES) == 1);

/**
 * Converts POSIF0_PCONF_MSES to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(POSIF0_PCONF_MSES instance)
{
    const char *result = "UNKNOWN POSIF0_PCONF_MSES";

    switch (instance)
    {
    case POSIF0_PCONF_MSES::risi_cont:
        result = "risi_cont";
        break;
    case POSIF0_PCONF_MSES::fall_cont:
        result = "fall_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to POSIF0_PCONF_MSES.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, POSIF0_PCONF_MSES &output)
{
    bool result = false;

    if ((result = !strncmp(data, "risi_cont", 9)))
    {
        output = POSIF0_PCONF_MSES::risi_cont;
    }
    else if ((result = !strncmp(data, "fall_cont", 9)))
    {
        output = POSIF0_PCONF_MSES::fall_cont;
    }

    return result;
}

}; // namespace XMC4700
