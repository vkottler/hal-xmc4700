/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SDMMC_DEBUG_SEL_DEBUG_SEL : uint8_t
{
    receiver_module_fifo_ctrl_module_signals_prob_cont /*!< receiver module and
                                                          fifo_ctrl module
                                                          signals are probed
                                                          out */
        ,
    cmd_register_interrupt_status_transmitter_mod_cont =
        1 /*!< cmd register, Interrupt status, transmitter module and clk
             sdcard signals are probed out. */
};
static_assert(sizeof(SDMMC_DEBUG_SEL_DEBUG_SEL) == 1);

/**
 * Converts SDMMC_DEBUG_SEL_DEBUG_SEL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SDMMC_DEBUG_SEL_DEBUG_SEL instance)
{
    const char *result = "UNKNOWN SDMMC_DEBUG_SEL_DEBUG_SEL";

    switch (instance)
    {
    case SDMMC_DEBUG_SEL_DEBUG_SEL::
        receiver_module_fifo_ctrl_module_signals_prob_cont:
        result = "receiver_module_fifo_ctrl_module_signals_prob_cont";
        break;
    case SDMMC_DEBUG_SEL_DEBUG_SEL::
        cmd_register_interrupt_status_transmitter_mod_cont:
        result = "cmd_register_interrupt_status_transmitter_mod_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to SDMMC_DEBUG_SEL_DEBUG_SEL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, SDMMC_DEBUG_SEL_DEBUG_SEL &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "receiver_module_fifo_ctrl_module_signals_prob_cont", 50)))
    {
        output = SDMMC_DEBUG_SEL_DEBUG_SEL::
            receiver_module_fifo_ctrl_module_signals_prob_cont;
    }
    else if ((result = !strncmp(
                  data, "cmd_register_interrupt_status_transmitter_mod_cont",
                  50)))
    {
        output = SDMMC_DEBUG_SEL_DEBUG_SEL::
            cmd_register_interrupt_status_transmitter_mod_cont;
    }

    return result;
}

}; // namespace XMC4700
