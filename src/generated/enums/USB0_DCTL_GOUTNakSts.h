/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_DCTL_GOUTNakSts : uint8_t
{
    handshake_sent_based_fifo_status_nak_stall_bi_cont /*!< A handshake is sent
                                                          based on the FIFO
                                                          Status and the NAK
                                                          and STALL bit
                                                          settings. */
        ,
    no_data_written_rxfifo_irrespective_space_ava_cont =
        1 /*!< No data is written to the RxFIFO, irrespective of space
             availability. Sends a NAK handshake on all packets, except on
             SETUP transactions. All isochronous OUT packets are dropped. */
};
static_assert(sizeof(USB0_DCTL_GOUTNakSts) == 1);

/**
 * Converts USB0_DCTL_GOUTNakSts to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_DCTL_GOUTNakSts instance)
{
    const char *result = "UNKNOWN USB0_DCTL_GOUTNakSts";

    switch (instance)
    {
    case USB0_DCTL_GOUTNakSts::
        handshake_sent_based_fifo_status_nak_stall_bi_cont:
        result = "handshake_sent_based_fifo_status_nak_stall_bi_cont";
        break;
    case USB0_DCTL_GOUTNakSts::
        no_data_written_rxfifo_irrespective_space_ava_cont:
        result = "no_data_written_rxfifo_irrespective_space_ava_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_DCTL_GOUTNakSts.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB0_DCTL_GOUTNakSts &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "handshake_sent_based_fifo_status_nak_stall_bi_cont", 50)))
    {
        output = USB0_DCTL_GOUTNakSts::
            handshake_sent_based_fifo_status_nak_stall_bi_cont;
    }
    else if ((result = !strncmp(
                  data, "no_data_written_rxfifo_irrespective_space_ava_cont",
                  50)))
    {
        output = USB0_DCTL_GOUTNakSts::
            no_data_written_rxfifo_irrespective_space_ava_cont;
    }

    return result;
}

}; // namespace XMC4700
