/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_G0_ARBCFG_ARBRND : uint8_t
{
    4_arbitration_slots_per_round_tarb_4_fadcd /*!< 4 arbitration slots per
                                                  round (tARB = 4 / fADCD) */
        ,
    8_arbitration_slots_per_round_tarb_8_fadcd =
        1 /*!< 8 arbitration slots per round (tARB = 8 / fADCD) */,
    16_arbitration_slots_per_round_tarb_16_fadcd =
        2 /*!< 16 arbitration slots per round (tARB = 16 / fADCD) */,
    20_arbitration_slots_per_round_tarb_20_fadcd =
        3 /*!< 20 arbitration slots per round (tARB = 20 / fADCD) */
};
static_assert(sizeof(VADC_G0_ARBCFG_ARBRND) == 1);

/**
 * Converts VADC_G0_ARBCFG_ARBRND to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_G0_ARBCFG_ARBRND instance)
{
    const char *result = "UNKNOWN VADC_G0_ARBCFG_ARBRND";

    switch (instance)
    {
    case VADC_G0_ARBCFG_ARBRND::4_arbitration_slots_per_round_tarb_4_fadcd:
        result = "4_arbitration_slots_per_round_tarb_4_fadcd";
        break;
    case VADC_G0_ARBCFG_ARBRND::8_arbitration_slots_per_round_tarb_8_fadcd:
        result = "8_arbitration_slots_per_round_tarb_8_fadcd";
        break;
    case VADC_G0_ARBCFG_ARBRND::16_arbitration_slots_per_round_tarb_16_fadcd:
        result = "16_arbitration_slots_per_round_tarb_16_fadcd";
        break;
    case VADC_G0_ARBCFG_ARBRND::20_arbitration_slots_per_round_tarb_20_fadcd:
        result = "20_arbitration_slots_per_round_tarb_20_fadcd";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_G0_ARBCFG_ARBRND.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_G0_ARBCFG_ARBRND &output)
{
    bool result = false;

    if ((result =
             !strncmp(data, "4_arbitration_slots_per_round_tarb_4_fadcd", 42)))
    {
        output =
            VADC_G0_ARBCFG_ARBRND::4_arbitration_slots_per_round_tarb_4_fadcd;
    }
    else if ((result = !strncmp(
                  data, "8_arbitration_slots_per_round_tarb_8_fadcd", 42)))
    {
        output =
            VADC_G0_ARBCFG_ARBRND::8_arbitration_slots_per_round_tarb_8_fadcd;
    }
    else if ((result = !strncmp(
                  data, "16_arbitration_slots_per_round_tarb_16_fadcd", 44)))
    {
        output = VADC_G0_ARBCFG_ARBRND::
            16_arbitration_slots_per_round_tarb_16_fadcd;
    }
    else if ((result = !strncmp(
                  data, "20_arbitration_slots_per_round_tarb_20_fadcd", 44)))
    {
        output = VADC_G0_ARBCFG_ARBRND::
            20_arbitration_slots_per_round_tarb_20_fadcd;
    }

    return result;
}

}; // namespace XMC4700
