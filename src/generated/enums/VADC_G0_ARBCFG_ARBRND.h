/**
 * \file
 * \brief Generated by ifgen (3.2.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_G0_ARBCFG_ARBRND : uint8_t
{
    _4_arbitration_slots_per_round_tarb_4_fadcd /*!< 4 arbitration slots per
                                                   round (tARB = 4 / fADCD) */
        ,
    _8_arbitration_slots_per_round_tarb_8_fadcd =
        1 /*!< 8 arbitration slots per round (tARB = 8 / fADCD) */,
    _16_arbitration_slots_per_round_tarb_16_fadcd =
        2 /*!< 16 arbitration slots per round (tARB = 16 / fADCD) */,
    _20_arbitration_slots_per_round_tarb_20_fadcd =
        3 /*!< 20 arbitration slots per round (tARB = 20 / fADCD) */
};
static_assert(sizeof(VADC_G0_ARBCFG_ARBRND) == 1);

/**
 * Converts VADC_G0_ARBCFG_ARBRND to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_G0_ARBCFG_ARBRND instance)
{
    const char *result = "UNKNOWN VADC_G0_ARBCFG_ARBRND";

    switch (instance)
    {
    case VADC_G0_ARBCFG_ARBRND::_4_arbitration_slots_per_round_tarb_4_fadcd:
        result = "_4_arbitration_slots_per_round_tarb_4_fadcd";
        break;
    case VADC_G0_ARBCFG_ARBRND::_8_arbitration_slots_per_round_tarb_8_fadcd:
        result = "_8_arbitration_slots_per_round_tarb_8_fadcd";
        break;
    case VADC_G0_ARBCFG_ARBRND::_16_arbitration_slots_per_round_tarb_16_fadcd:
        result = "_16_arbitration_slots_per_round_tarb_16_fadcd";
        break;
    case VADC_G0_ARBCFG_ARBRND::_20_arbitration_slots_per_round_tarb_20_fadcd:
        result = "_20_arbitration_slots_per_round_tarb_20_fadcd";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_G0_ARBCFG_ARBRND.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_G0_ARBCFG_ARBRND &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_4_arbitration_slots_per_round_tarb_4_fadcd",
                           43)))
    {
        output =
            VADC_G0_ARBCFG_ARBRND::_4_arbitration_slots_per_round_tarb_4_fadcd;
    }
    else if ((result = !strncmp(
                  data, "_8_arbitration_slots_per_round_tarb_8_fadcd", 43)))
    {
        output =
            VADC_G0_ARBCFG_ARBRND::_8_arbitration_slots_per_round_tarb_8_fadcd;
    }
    else if ((result = !strncmp(
                  data, "_16_arbitration_slots_per_round_tarb_16_fadcd", 45)))
    {
        output = VADC_G0_ARBCFG_ARBRND::
            _16_arbitration_slots_per_round_tarb_16_fadcd;
    }
    else if ((result = !strncmp(
                  data, "_20_arbitration_slots_per_round_tarb_20_fadcd", 45)))
    {
        output = VADC_G0_ARBCFG_ARBRND::
            _20_arbitration_slots_per_round_tarb_20_fadcd;
    }

    return result;
}

}; // namespace XMC4700
