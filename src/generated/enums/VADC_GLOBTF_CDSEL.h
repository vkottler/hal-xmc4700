/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_GLOBTF_CDSEL : uint8_t
{
    varef /*!< Connected to VAREF */,
    vagnd = 1 /*!< Connected to VAGND */,
    _13rd_varef = 2 /*!< Connected to 1/3rd VAREF */,
    _23rd_varef = 3 /*!< Connected to 2/3rd VAREF */
};
static_assert(sizeof(VADC_GLOBTF_CDSEL) == 1);

/**
 * Converts VADC_GLOBTF_CDSEL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_GLOBTF_CDSEL instance)
{
    const char *result = "UNKNOWN VADC_GLOBTF_CDSEL";

    switch (instance)
    {
    case VADC_GLOBTF_CDSEL::varef:
        result = "varef";
        break;
    case VADC_GLOBTF_CDSEL::vagnd:
        result = "vagnd";
        break;
    case VADC_GLOBTF_CDSEL::_13rd_varef:
        result = "_13rd_varef";
        break;
    case VADC_GLOBTF_CDSEL::_23rd_varef:
        result = "_23rd_varef";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_GLOBTF_CDSEL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_GLOBTF_CDSEL &output)
{
    bool result = false;

    if ((result = !strncmp(data, "varef", 5)))
    {
        output = VADC_GLOBTF_CDSEL::varef;
    }
    else if ((result = !strncmp(data, "vagnd", 5)))
    {
        output = VADC_GLOBTF_CDSEL::vagnd;
    }
    else if ((result = !strncmp(data, "_13rd_varef", 11)))
    {
        output = VADC_GLOBTF_CDSEL::_13rd_varef;
    }
    else if ((result = !strncmp(data, "_23rd_varef", 11)))
    {
        output = VADC_GLOBTF_CDSEL::_23rd_varef;
    }

    return result;
}

}; // namespace XMC4700
