/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_BYPCR_BDV : uint8_t
{
    not_valid /*!< The bypass data is not valid. */,
    valid = 1 /*!< The bypass data is valid. */
};
static_assert(sizeof(USIC0_CH0_BYPCR_BDV) == 1);

/**
 * Converts USIC0_CH0_BYPCR_BDV to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_BYPCR_BDV instance)
{
    const char *result = "UNKNOWN USIC0_CH0_BYPCR_BDV";

    switch (instance)
    {
    case USIC0_CH0_BYPCR_BDV::not_valid:
        result = "not_valid";
        break;
    case USIC0_CH0_BYPCR_BDV::valid:
        result = "valid";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_BYPCR_BDV.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_BYPCR_BDV &output)
{
    bool result = false;

    if ((result = !strncmp(data, "not_valid", 9)))
    {
        output = USIC0_CH0_BYPCR_BDV::not_valid;
    }
    else if ((result = !strncmp(data, "valid", 5)))
    {
        output = USIC0_CH0_BYPCR_BDV::valid;
    }

    return result;
}

}; // namespace XMC4700
