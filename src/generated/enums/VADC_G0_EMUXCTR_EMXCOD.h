/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_G0_EMUXCTR_EMXCOD : uint8_t
{
    binary_code /*!< Output the channel number in binary code */,
    gray_code = 1 /*!< Output the channel number in Gray code */
};
static_assert(sizeof(VADC_G0_EMUXCTR_EMXCOD) == 1);

/**
 * Converts VADC_G0_EMUXCTR_EMXCOD to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_G0_EMUXCTR_EMXCOD instance)
{
    const char *result = "UNKNOWN VADC_G0_EMUXCTR_EMXCOD";

    switch (instance)
    {
    case VADC_G0_EMUXCTR_EMXCOD::binary_code:
        result = "binary_code";
        break;
    case VADC_G0_EMUXCTR_EMXCOD::gray_code:
        result = "gray_code";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_G0_EMUXCTR_EMXCOD.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_G0_EMUXCTR_EMXCOD &output)
{
    bool result = false;

    if ((result = !strncmp(data, "binary_code", 11)))
    {
        output = VADC_G0_EMUXCTR_EMXCOD::binary_code;
    }
    else if ((result = !strncmp(data, "gray_code", 9)))
    {
        output = VADC_G0_EMUXCTR_EMXCOD::gray_code;
    }

    return result;
}

}; // namespace XMC4700
