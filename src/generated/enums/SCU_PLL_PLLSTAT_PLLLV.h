/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SCU_PLL_PLLSTAT_PLLLV : uint8_t
{
    not_usable_frequency_fref_too_low /*!< The OSC frequency is not usable.
                                         Frequency fREF is too low. */
        ,
    usable = 1 /*!< The OSC frequency is usable */
};
static_assert(sizeof(SCU_PLL_PLLSTAT_PLLLV) == 1);

/**
 * Converts SCU_PLL_PLLSTAT_PLLLV to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SCU_PLL_PLLSTAT_PLLLV instance)
{
    const char *result = "UNKNOWN SCU_PLL_PLLSTAT_PLLLV";

    switch (instance)
    {
    case SCU_PLL_PLLSTAT_PLLLV::not_usable_frequency_fref_too_low:
        result = "not_usable_frequency_fref_too_low";
        break;
    case SCU_PLL_PLLSTAT_PLLLV::usable:
        result = "usable";
        break;
    }

    return result;
}

/**
 * Converts a C string to SCU_PLL_PLLSTAT_PLLLV.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, SCU_PLL_PLLSTAT_PLLLV &output)
{
    bool result = false;

    if ((result = !strncmp(data, "not_usable_frequency_fref_too_low", 33)))
    {
        output = SCU_PLL_PLLSTAT_PLLLV::not_usable_frequency_fref_too_low;
    }
    else if ((result = !strncmp(data, "usable", 6)))
    {
        output = SCU_PLL_PLLSTAT_PLLLV::usable;
    }

    return result;
}

}; // namespace XMC4700
