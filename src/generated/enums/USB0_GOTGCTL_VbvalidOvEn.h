/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_GOTGCTL_VbvalidOvEn : uint8_t
{
    override_disabled_vbus_valid_signal_phy_used__cont /*!< Override is
                                                          disabled and vbus
                                                          valid signal from the
                                                          PHY is used
                                                          internally by the
                                                          core. */
        ,
    internally_vbus_valid_received_phy_overridden_cont =
        1 /*!< Internally vbus valid received from the PHY is overridden with
             GOTGCTL.VbvalidOvVal. */
};
static_assert(sizeof(USB0_GOTGCTL_VbvalidOvEn) == 1);

/**
 * Converts USB0_GOTGCTL_VbvalidOvEn to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_GOTGCTL_VbvalidOvEn instance)
{
    const char *result = "UNKNOWN USB0_GOTGCTL_VbvalidOvEn";

    switch (instance)
    {
    case USB0_GOTGCTL_VbvalidOvEn::
        override_disabled_vbus_valid_signal_phy_used__cont:
        result = "override_disabled_vbus_valid_signal_phy_used__cont";
        break;
    case USB0_GOTGCTL_VbvalidOvEn::
        internally_vbus_valid_received_phy_overridden_cont:
        result = "internally_vbus_valid_received_phy_overridden_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_GOTGCTL_VbvalidOvEn.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB0_GOTGCTL_VbvalidOvEn &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "override_disabled_vbus_valid_signal_phy_used__cont", 50)))
    {
        output = USB0_GOTGCTL_VbvalidOvEn::
            override_disabled_vbus_valid_signal_phy_used__cont;
    }
    else if ((result = !strncmp(
                  data, "internally_vbus_valid_received_phy_overridden_cont",
                  50)))
    {
        output = USB0_GOTGCTL_VbvalidOvEn::
            internally_vbus_valid_received_phy_overridden_cont;
    }

    return result;
}

}; // namespace XMC4700
