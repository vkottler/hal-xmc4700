/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_HFIR_HFIRRldCtrl : uint8_t
{
    not_be_reloaded_dynamically /*!< HFIR cannot be reloaded dynamically */,
    _be_dynamically_reloaded_during_runtime =
        1 /*!< HFIR can be dynamically reloaded during runtime */
};
static_assert(sizeof(USB0_HFIR_HFIRRldCtrl) == 1);

/**
 * Converts USB0_HFIR_HFIRRldCtrl to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_HFIR_HFIRRldCtrl instance)
{
    const char *result = "UNKNOWN USB0_HFIR_HFIRRldCtrl";

    switch (instance)
    {
    case USB0_HFIR_HFIRRldCtrl::not_be_reloaded_dynamically:
        result = "not_be_reloaded_dynamically";
        break;
    case USB0_HFIR_HFIRRldCtrl::_be_dynamically_reloaded_during_runtime:
        result = "_be_dynamically_reloaded_during_runtime";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_HFIR_HFIRRldCtrl.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB0_HFIR_HFIRRldCtrl &output)
{
    bool result = false;

    if ((result = !strncmp(data, "not_be_reloaded_dynamically", 27)))
    {
        output = USB0_HFIR_HFIRRldCtrl::not_be_reloaded_dynamically;
    }
    else if ((result = !strncmp(
                  data, "_be_dynamically_reloaded_during_runtime", 39)))
    {
        output =
            USB0_HFIR_HFIRRldCtrl::_be_dynamically_reloaded_during_runtime;
    }

    return result;
}

}; // namespace XMC4700
