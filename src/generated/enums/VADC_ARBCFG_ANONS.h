/**
 * \file
 * \brief Generated by ifgen (3.0.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_ARBCFG_ANONS : uint8_t
{
    value1 /*!< Analog converter off */,
    value4 = 3 /*!< Normal operation (permanently on) */
};
static_assert(sizeof(VADC_ARBCFG_ANONS) == 1);

static constexpr uint16_t VADC_ARBCFG_ANONS_id = 1385;

/**
 * Converts VADC_ARBCFG_ANONS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_ARBCFG_ANONS instance)
{
    const char *result = "UNKNOWN VADC_ARBCFG_ANONS";

    switch (instance)
    {
    case VADC_ARBCFG_ANONS::value1:
        result = "value1";
        break;
    case VADC_ARBCFG_ANONS::value4:
        result = "value4";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_ARBCFG_ANONS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_ARBCFG_ANONS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "value1", 6)))
    {
        output = VADC_ARBCFG_ANONS::value1;
    }
    else if ((result = !strncmp(data, "value4", 6)))
    {
        output = VADC_ARBCFG_ANONS::value4;
    }

    return result;
}

}; // namespace XMC4700
