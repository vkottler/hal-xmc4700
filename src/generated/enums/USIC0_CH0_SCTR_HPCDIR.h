/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_SCTR_HPCDIR : uint8_t
{
    input_mode /*!< The pin(s) with hardware pin control enabled are selected
                  to be in input mode. */
        ,
    output_mode = 1 /*!< The pin(s) with hardware pin control enabled are
                       selected to be in output mode. */
};
static_assert(sizeof(USIC0_CH0_SCTR_HPCDIR) == 1);

/**
 * Converts USIC0_CH0_SCTR_HPCDIR to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_SCTR_HPCDIR instance)
{
    const char *result = "UNKNOWN USIC0_CH0_SCTR_HPCDIR";

    switch (instance)
    {
    case USIC0_CH0_SCTR_HPCDIR::input_mode:
        result = "input_mode";
        break;
    case USIC0_CH0_SCTR_HPCDIR::output_mode:
        result = "output_mode";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_SCTR_HPCDIR.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_SCTR_HPCDIR &output)
{
    bool result = false;

    if ((result = !strncmp(data, "input_mode", 10)))
    {
        output = USIC0_CH0_SCTR_HPCDIR::input_mode;
    }
    else if ((result = !strncmp(data, "output_mode", 11)))
    {
        output = USIC0_CH0_SCTR_HPCDIR::output_mode;
    }

    return result;
}

}; // namespace XMC4700
