/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_TCSR_SOF : uint8_t
{
    not_considered_first_word_frame /*!< The data word in TBUF is not
                                       considered as first word of a frame. */
        ,
    considered_first_word_frame_currently_running_cont =
        1 /*!< The data word in TBUF is considered as first word of a frame. A
             currently running frame is finished and MSLS becomes deactivated
             (respecting the programmed delays). */
};
static_assert(sizeof(USIC0_CH0_TCSR_SOF) == 1);

/**
 * Converts USIC0_CH0_TCSR_SOF to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_TCSR_SOF instance)
{
    const char *result = "UNKNOWN USIC0_CH0_TCSR_SOF";

    switch (instance)
    {
    case USIC0_CH0_TCSR_SOF::not_considered_first_word_frame:
        result = "not_considered_first_word_frame";
        break;
    case USIC0_CH0_TCSR_SOF::
        considered_first_word_frame_currently_running_cont:
        result = "considered_first_word_frame_currently_running_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_TCSR_SOF.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_TCSR_SOF &output)
{
    bool result = false;

    if ((result = !strncmp(data, "not_considered_first_word_frame", 31)))
    {
        output = USIC0_CH0_TCSR_SOF::not_considered_first_word_frame;
    }
    else if ((result = !strncmp(
                  data, "considered_first_word_frame_currently_running_cont",
                  50)))
    {
        output = USIC0_CH0_TCSR_SOF::
            considered_first_word_frame_currently_running_cont;
    }

    return result;
}

}; // namespace XMC4700
