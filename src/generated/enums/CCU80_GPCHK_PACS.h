/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class CCU80_GPCHK_PACS : uint8_t
{
    0 /*!< CC80 */,
    1 = 1 /*!< CC81 */,
    2 = 2 /*!< CC82 */,
    3 = 3 /*!< CC83 */
};
static_assert(sizeof(CCU80_GPCHK_PACS) == 1);

/**
 * Converts CCU80_GPCHK_PACS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CCU80_GPCHK_PACS instance)
{
    const char *result = "UNKNOWN CCU80_GPCHK_PACS";

    switch (instance)
    {
    case CCU80_GPCHK_PACS::0:
        result = "0";
        break;
    case CCU80_GPCHK_PACS::1:
        result = "1";
        break;
    case CCU80_GPCHK_PACS::2:
        result = "2";
        break;
    case CCU80_GPCHK_PACS::3:
        result = "3";
        break;
    }

    return result;
}

/**
 * Converts a C string to CCU80_GPCHK_PACS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CCU80_GPCHK_PACS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "0", 1)))
    {
        output = CCU80_GPCHK_PACS::0;
    }
    else if ((result = !strncmp(data, "1", 1)))
    {
        output = CCU80_GPCHK_PACS::1;
    }
    else if ((result = !strncmp(data, "2", 1)))
    {
        output = CCU80_GPCHK_PACS::2;
    }
    else if ((result = !strncmp(data, "3", 1)))
    {
        output = CCU80_GPCHK_PACS::3;
    }

    return result;
}

}; // namespace XMC4700
