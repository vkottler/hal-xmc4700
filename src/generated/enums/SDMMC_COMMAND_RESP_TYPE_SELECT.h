/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SDMMC_COMMAND_RESP_TYPE_SELECT : uint8_t
{
    no_response /*!< No Response */,
    response_length_136 = 1 /*!< Response length 136 */,
    response_length_48 = 2 /*!< Response length 48 */,
    response_length_48_check_busy_after_response =
        3 /*!< Response length 48 check Busy after response */
};
static_assert(sizeof(SDMMC_COMMAND_RESP_TYPE_SELECT) == 1);

/**
 * Converts SDMMC_COMMAND_RESP_TYPE_SELECT to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SDMMC_COMMAND_RESP_TYPE_SELECT instance)
{
    const char *result = "UNKNOWN SDMMC_COMMAND_RESP_TYPE_SELECT";

    switch (instance)
    {
    case SDMMC_COMMAND_RESP_TYPE_SELECT::no_response:
        result = "no_response";
        break;
    case SDMMC_COMMAND_RESP_TYPE_SELECT::response_length_136:
        result = "response_length_136";
        break;
    case SDMMC_COMMAND_RESP_TYPE_SELECT::response_length_48:
        result = "response_length_48";
        break;
    case SDMMC_COMMAND_RESP_TYPE_SELECT::
        response_length_48_check_busy_after_response:
        result = "response_length_48_check_busy_after_response";
        break;
    }

    return result;
}

/**
 * Converts a C string to SDMMC_COMMAND_RESP_TYPE_SELECT.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        SDMMC_COMMAND_RESP_TYPE_SELECT &output)
{
    bool result = false;

    if ((result = !strncmp(data, "no_response", 11)))
    {
        output = SDMMC_COMMAND_RESP_TYPE_SELECT::no_response;
    }
    else if ((result = !strncmp(data, "response_length_136", 19)))
    {
        output = SDMMC_COMMAND_RESP_TYPE_SELECT::response_length_136;
    }
    else if ((result = !strncmp(data, "response_length_48", 18)))
    {
        output = SDMMC_COMMAND_RESP_TYPE_SELECT::response_length_48;
    }
    else if ((result = !strncmp(
                  data, "response_length_48_check_busy_after_response", 44)))
    {
        output = SDMMC_COMMAND_RESP_TYPE_SELECT::
            response_length_48_check_busy_after_response;
    }

    return result;
}

}; // namespace XMC4700
