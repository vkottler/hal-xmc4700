/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class ETH0_CON_ETH0_CON_INFSEL : uint8_t
{
    mii /*!< MII */,
    rmii = 1 /*!< RMII */
};
static_assert(sizeof(ETH0_CON_ETH0_CON_INFSEL) == 1);

/**
 * Converts ETH0_CON_ETH0_CON_INFSEL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(ETH0_CON_ETH0_CON_INFSEL instance)
{
    const char *result = "UNKNOWN ETH0_CON_ETH0_CON_INFSEL";

    switch (instance)
    {
    case ETH0_CON_ETH0_CON_INFSEL::mii:
        result = "mii";
        break;
    case ETH0_CON_ETH0_CON_INFSEL::rmii:
        result = "rmii";
        break;
    }

    return result;
}

/**
 * Converts a C string to ETH0_CON_ETH0_CON_INFSEL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, ETH0_CON_ETH0_CON_INFSEL &output)
{
    bool result = false;

    if ((result = !strncmp(data, "mii", 3)))
    {
        output = ETH0_CON_ETH0_CON_INFSEL::mii;
    }
    else if ((result = !strncmp(data, "rmii", 4)))
    {
        output = ETH0_CON_ETH0_CON_INFSEL::rmii;
    }

    return result;
}

}; // namespace XMC4700
