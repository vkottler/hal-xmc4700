/**
 * \file
 * \brief Generated by ifgen (3.2.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class EBU_BUSRCON0_BCGEN : uint8_t
{
    chip_select_timing /*!< Byte control signals follow chip select timing. */,
    control_signal_timing_rd_rdwr_default_after_reset =
        1 /*!< Byte control signals follow control signal timing (RD, RD/WR)
             (default after reset). */
        ,
    write_enable_signal_timing_rdwr_only =
        2 /*!< Byte control signals follow write enable signal timing (RD/WR
             only). */
};
static_assert(sizeof(EBU_BUSRCON0_BCGEN) == 1);

/**
 * Converts EBU_BUSRCON0_BCGEN to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(EBU_BUSRCON0_BCGEN instance)
{
    const char *result = "UNKNOWN EBU_BUSRCON0_BCGEN";

    switch (instance)
    {
    case EBU_BUSRCON0_BCGEN::chip_select_timing:
        result = "chip_select_timing";
        break;
    case EBU_BUSRCON0_BCGEN::control_signal_timing_rd_rdwr_default_after_reset:
        result = "control_signal_timing_rd_rdwr_default_after_reset";
        break;
    case EBU_BUSRCON0_BCGEN::write_enable_signal_timing_rdwr_only:
        result = "write_enable_signal_timing_rdwr_only";
        break;
    }

    return result;
}

/**
 * Converts a C string to EBU_BUSRCON0_BCGEN.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, EBU_BUSRCON0_BCGEN &output)
{
    bool result = false;

    if ((result = !strncmp(data, "chip_select_timing", 18)))
    {
        output = EBU_BUSRCON0_BCGEN::chip_select_timing;
    }
    else if ((result = !strncmp(
                  data, "control_signal_timing_rd_rdwr_default_after_reset",
                  49)))
    {
        output = EBU_BUSRCON0_BCGEN::
            control_signal_timing_rd_rdwr_default_after_reset;
    }
    else if ((result =
                  !strncmp(data, "write_enable_signal_timing_rdwr_only", 36)))
    {
        output = EBU_BUSRCON0_BCGEN::write_enable_signal_timing_rdwr_only;
    }

    return result;
}

}; // namespace XMC4700
