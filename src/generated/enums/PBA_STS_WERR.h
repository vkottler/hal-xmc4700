/**
 * \file
 * \brief Generated by ifgen (3.0.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class PBA_STS_WERR : uint8_t
{
    value1 /*!< no write error occurred. */,
    value2 = 1 /*!< write error occurred, interrupt request is pending. */
};
static_assert(sizeof(PBA_STS_WERR) == 1);

static constexpr uint16_t PBA_STS_WERR_id = 597;

/**
 * Converts PBA_STS_WERR to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(PBA_STS_WERR instance)
{
    const char *result = "UNKNOWN PBA_STS_WERR";

    switch (instance)
    {
    case PBA_STS_WERR::value1:
        result = "value1";
        break;
    case PBA_STS_WERR::value2:
        result = "value2";
        break;
    }

    return result;
}

/**
 * Converts a C string to PBA_STS_WERR.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, PBA_STS_WERR &output)
{
    bool result = false;

    if ((result = !strncmp(data, "value1", 6)))
    {
        output = PBA_STS_WERR::value1;
    }
    else if ((result = !strncmp(data, "value2", 6)))
    {
        output = PBA_STS_WERR::value2;
    }

    return result;
}

}; // namespace XMC4700
