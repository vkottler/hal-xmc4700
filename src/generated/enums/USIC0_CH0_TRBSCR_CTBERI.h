/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_TRBSCR_CTBERI : uint8_t
{
    no_effect /*!< No effect. */,
    clear_trbsrtberi = 1 /*!< Clear TRBSR.TBERI. */
};
static_assert(sizeof(USIC0_CH0_TRBSCR_CTBERI) == 1);

/**
 * Converts USIC0_CH0_TRBSCR_CTBERI to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_TRBSCR_CTBERI instance)
{
    const char *result = "UNKNOWN USIC0_CH0_TRBSCR_CTBERI";

    switch (instance)
    {
    case USIC0_CH0_TRBSCR_CTBERI::no_effect:
        result = "no_effect";
        break;
    case USIC0_CH0_TRBSCR_CTBERI::clear_trbsrtberi:
        result = "clear_trbsrtberi";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_TRBSCR_CTBERI.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_TRBSCR_CTBERI &output)
{
    bool result = false;

    if ((result = !strncmp(data, "no_effect", 9)))
    {
        output = USIC0_CH0_TRBSCR_CTBERI::no_effect;
    }
    else if ((result = !strncmp(data, "clear_trbsrtberi", 16)))
    {
        output = USIC0_CH0_TRBSCR_CTBERI::clear_trbsrtberi;
    }

    return result;
}

}; // namespace XMC4700
