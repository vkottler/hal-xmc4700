/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL : uint8_t
{
    _13 /*!< TMCLK * 2^13 */,
    _14 = 1 /*!< TMCLK * 2^14 */,
    _27 = 14 /*!< TMCLK * 2^27 */
};
static_assert(sizeof(SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL) == 1);

/**
 * Converts SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL instance)
{
    const char *result = "UNKNOWN SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL";

    switch (instance)
    {
    case SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL::_13:
        result = "_13";
        break;
    case SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL::_14:
        result = "_14";
        break;
    case SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL::_27:
        result = "_27";
        break;
    }

    return result;
}

/**
 * Converts a C string to SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_13", 3)))
    {
        output = SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL::_13;
    }
    else if ((result = !strncmp(data, "_14", 3)))
    {
        output = SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL::_14;
    }
    else if ((result = !strncmp(data, "_27", 3)))
    {
        output = SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL::_27;
    }

    return result;
}

}; // namespace XMC4700
