/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SCU_PARITY_PEFLAG_PESD1 : uint8_t
{
    no_parity_error_detected /*!< No parity error detected */,
    parity_error_detected = 1 /*!< Parity error detected */
};
static_assert(sizeof(SCU_PARITY_PEFLAG_PESD1) == 1);

/**
 * Converts SCU_PARITY_PEFLAG_PESD1 to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SCU_PARITY_PEFLAG_PESD1 instance)
{
    const char *result = "UNKNOWN SCU_PARITY_PEFLAG_PESD1";

    switch (instance)
    {
    case SCU_PARITY_PEFLAG_PESD1::no_parity_error_detected:
        result = "no_parity_error_detected";
        break;
    case SCU_PARITY_PEFLAG_PESD1::parity_error_detected:
        result = "parity_error_detected";
        break;
    }

    return result;
}

/**
 * Converts a C string to SCU_PARITY_PEFLAG_PESD1.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, SCU_PARITY_PEFLAG_PESD1 &output)
{
    bool result = false;

    if ((result = !strncmp(data, "no_parity_error_detected", 24)))
    {
        output = SCU_PARITY_PEFLAG_PESD1::no_parity_error_detected;
    }
    else if ((result = !strncmp(data, "parity_error_detected", 21)))
    {
        output = SCU_PARITY_PEFLAG_PESD1::parity_error_detected;
    }

    return result;
}

}; // namespace XMC4700
