/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class DSD_OCS_SUS : uint8_t
{
    not_suspend /*!< Will not suspend */,
    hard_suspend_clock_switched_off_immediately =
        1 /*!< Hard suspend: Clock is switched off immediately. */,
    soft_suspend_channel_0 = 2 /*!< Soft suspend channel 0 */,
    soft_suspend_channel_1 = 3 /*!< Soft suspend channel 1 */,
    soft_suspend_channel_3 = 5 /*!< Soft suspend channel 3 */
};
static_assert(sizeof(DSD_OCS_SUS) == 1);

/**
 * Converts DSD_OCS_SUS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(DSD_OCS_SUS instance)
{
    const char *result = "UNKNOWN DSD_OCS_SUS";

    switch (instance)
    {
    case DSD_OCS_SUS::not_suspend:
        result = "not_suspend";
        break;
    case DSD_OCS_SUS::hard_suspend_clock_switched_off_immediately:
        result = "hard_suspend_clock_switched_off_immediately";
        break;
    case DSD_OCS_SUS::soft_suspend_channel_0:
        result = "soft_suspend_channel_0";
        break;
    case DSD_OCS_SUS::soft_suspend_channel_1:
        result = "soft_suspend_channel_1";
        break;
    case DSD_OCS_SUS::soft_suspend_channel_3:
        result = "soft_suspend_channel_3";
        break;
    }

    return result;
}

/**
 * Converts a C string to DSD_OCS_SUS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, DSD_OCS_SUS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "not_suspend", 11)))
    {
        output = DSD_OCS_SUS::not_suspend;
    }
    else if ((result = !strncmp(
                  data, "hard_suspend_clock_switched_off_immediately", 43)))
    {
        output = DSD_OCS_SUS::hard_suspend_clock_switched_off_immediately;
    }
    else if ((result = !strncmp(data, "soft_suspend_channel_0", 22)))
    {
        output = DSD_OCS_SUS::soft_suspend_channel_0;
    }
    else if ((result = !strncmp(data, "soft_suspend_channel_1", 22)))
    {
        output = DSD_OCS_SUS::soft_suspend_channel_1;
    }
    else if ((result = !strncmp(data, "soft_suspend_channel_3", 22)))
    {
        output = DSD_OCS_SUS::soft_suspend_channel_3;
    }

    return result;
}

}; // namespace XMC4700
