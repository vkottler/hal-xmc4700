/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class CCU80_CC80_TC_TLS : uint8_t
{
    _1 /*!< Timer is loaded with the value of CR1 */,
    _2 = 1 /*!< Timer is loaded with the value of CR2 */
};
static_assert(sizeof(CCU80_CC80_TC_TLS) == 1);

/**
 * Converts CCU80_CC80_TC_TLS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CCU80_CC80_TC_TLS instance)
{
    const char *result = "UNKNOWN CCU80_CC80_TC_TLS";

    switch (instance)
    {
    case CCU80_CC80_TC_TLS::_1:
        result = "_1";
        break;
    case CCU80_CC80_TC_TLS::_2:
        result = "_2";
        break;
    }

    return result;
}

/**
 * Converts a C string to CCU80_CC80_TC_TLS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CCU80_CC80_TC_TLS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_1", 2)))
    {
        output = CCU80_CC80_TC_TLS::_1;
    }
    else if ((result = !strncmp(data, "_2", 2)))
    {
        output = CCU80_CC80_TC_TLS::_2;
    }

    return result;
}

}; // namespace XMC4700
