/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class CAN_MO_MOSTAT_MSGLST : uint8_t
{
    no_can_message_lost /*!< No CAN message is lost. */,
    can_message_lost_because_newdat_has_become_se_cont =
        1 /*!< A CAN message is lost because NEWDAT has become set again when
             it has already been set. */
};
static_assert(sizeof(CAN_MO_MOSTAT_MSGLST) == 1);

/**
 * Converts CAN_MO_MOSTAT_MSGLST to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CAN_MO_MOSTAT_MSGLST instance)
{
    const char *result = "UNKNOWN CAN_MO_MOSTAT_MSGLST";

    switch (instance)
    {
    case CAN_MO_MOSTAT_MSGLST::no_can_message_lost:
        result = "no_can_message_lost";
        break;
    case CAN_MO_MOSTAT_MSGLST::
        can_message_lost_because_newdat_has_become_se_cont:
        result = "can_message_lost_because_newdat_has_become_se_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to CAN_MO_MOSTAT_MSGLST.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CAN_MO_MOSTAT_MSGLST &output)
{
    bool result = false;

    if ((result = !strncmp(data, "no_can_message_lost", 19)))
    {
        output = CAN_MO_MOSTAT_MSGLST::no_can_message_lost;
    }
    else if ((result = !strncmp(
                  data, "can_message_lost_because_newdat_has_become_se_cont",
                  50)))
    {
        output = CAN_MO_MOSTAT_MSGLST::
            can_message_lost_because_newdat_has_become_se_cont;
    }

    return result;
}

}; // namespace XMC4700
