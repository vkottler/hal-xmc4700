/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SCU_PLL_PLLSTAT_PLLSP : uint8_t
{
    not_usable_spikes_detected_disturb_locked_ope_cont /*!< The OSC frequency
                                                          is not usable. Spikes
                                                          are detected that
                                                          disturb a locked
                                                          operation */
        ,
    usable = 1 /*!< The OSC frequency is usable */
};
static_assert(sizeof(SCU_PLL_PLLSTAT_PLLSP) == 1);

/**
 * Converts SCU_PLL_PLLSTAT_PLLSP to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SCU_PLL_PLLSTAT_PLLSP instance)
{
    const char *result = "UNKNOWN SCU_PLL_PLLSTAT_PLLSP";

    switch (instance)
    {
    case SCU_PLL_PLLSTAT_PLLSP::
        not_usable_spikes_detected_disturb_locked_ope_cont:
        result = "not_usable_spikes_detected_disturb_locked_ope_cont";
        break;
    case SCU_PLL_PLLSTAT_PLLSP::usable:
        result = "usable";
        break;
    }

    return result;
}

/**
 * Converts a C string to SCU_PLL_PLLSTAT_PLLSP.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, SCU_PLL_PLLSTAT_PLLSP &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "not_usable_spikes_detected_disturb_locked_ope_cont", 50)))
    {
        output = SCU_PLL_PLLSTAT_PLLSP::
            not_usable_spikes_detected_disturb_locked_ope_cont;
    }
    else if ((result = !strncmp(data, "usable", 6)))
    {
        output = SCU_PLL_PLLSTAT_PLLSP::usable;
    }

    return result;
}

}; // namespace XMC4700
