/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SCU_PLL_PLLCON0_FINDIS : uint8_t
{
    connect_oscillator_vco_part /*!< connect oscillator to the VCO part */,
    disconnect_oscillator_vco_part =
        1 /*!< disconnect oscillator from the VCO part. */
};
static_assert(sizeof(SCU_PLL_PLLCON0_FINDIS) == 1);

/**
 * Converts SCU_PLL_PLLCON0_FINDIS to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SCU_PLL_PLLCON0_FINDIS instance)
{
    const char *result = "UNKNOWN SCU_PLL_PLLCON0_FINDIS";

    switch (instance)
    {
    case SCU_PLL_PLLCON0_FINDIS::connect_oscillator_vco_part:
        result = "connect_oscillator_vco_part";
        break;
    case SCU_PLL_PLLCON0_FINDIS::disconnect_oscillator_vco_part:
        result = "disconnect_oscillator_vco_part";
        break;
    }

    return result;
}

/**
 * Converts a C string to SCU_PLL_PLLCON0_FINDIS.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, SCU_PLL_PLLCON0_FINDIS &output)
{
    bool result = false;

    if ((result = !strncmp(data, "connect_oscillator_vco_part", 27)))
    {
        output = SCU_PLL_PLLCON0_FINDIS::connect_oscillator_vco_part;
    }
    else if ((result = !strncmp(data, "disconnect_oscillator_vco_part", 30)))
    {
        output = SCU_PLL_PLLCON0_FINDIS::disconnect_oscillator_vco_part;
    }

    return result;
}

}; // namespace XMC4700
