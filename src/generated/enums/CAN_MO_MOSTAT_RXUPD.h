/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class CAN_MO_MOSTAT_RXUPD : uint8_t
{
    no_receive_update_ongoing /*!< No receive update ongoing. */,
    message_identifier_dlc_data_message_object_cu_cont =
        1 /*!< Message identifier, DLC, and data of the message object are
             currently updated. */
};
static_assert(sizeof(CAN_MO_MOSTAT_RXUPD) == 1);

/**
 * Converts CAN_MO_MOSTAT_RXUPD to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CAN_MO_MOSTAT_RXUPD instance)
{
    const char *result = "UNKNOWN CAN_MO_MOSTAT_RXUPD";

    switch (instance)
    {
    case CAN_MO_MOSTAT_RXUPD::no_receive_update_ongoing:
        result = "no_receive_update_ongoing";
        break;
    case CAN_MO_MOSTAT_RXUPD::
        message_identifier_dlc_data_message_object_cu_cont:
        result = "message_identifier_dlc_data_message_object_cu_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to CAN_MO_MOSTAT_RXUPD.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CAN_MO_MOSTAT_RXUPD &output)
{
    bool result = false;

    if ((result = !strncmp(data, "no_receive_update_ongoing", 25)))
    {
        output = CAN_MO_MOSTAT_RXUPD::no_receive_update_ongoing;
    }
    else if ((result = !strncmp(
                  data, "message_identifier_dlc_data_message_object_cu_cont",
                  50)))
    {
        output = CAN_MO_MOSTAT_RXUPD::
            message_identifier_dlc_data_message_object_cu_cont;
    }

    return result;
}

}; // namespace XMC4700
