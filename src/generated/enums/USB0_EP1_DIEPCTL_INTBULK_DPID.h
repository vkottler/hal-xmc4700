/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_EP1_DIEPCTL_INTBULK_DPID : uint8_t
{
    0 /*!< DATA0 */,
    1 = 1 /*!< DATA1 */
};
static_assert(sizeof(USB0_EP1_DIEPCTL_INTBULK_DPID) == 1);

/**
 * Converts USB0_EP1_DIEPCTL_INTBULK_DPID to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_EP1_DIEPCTL_INTBULK_DPID instance)
{
    const char *result = "UNKNOWN USB0_EP1_DIEPCTL_INTBULK_DPID";

    switch (instance)
    {
    case USB0_EP1_DIEPCTL_INTBULK_DPID::0:
        result = "0";
        break;
    case USB0_EP1_DIEPCTL_INTBULK_DPID::1:
        result = "1";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_EP1_DIEPCTL_INTBULK_DPID.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data,
                        USB0_EP1_DIEPCTL_INTBULK_DPID &output)
{
    bool result = false;

    if ((result = !strncmp(data, "0", 1)))
    {
        output = USB0_EP1_DIEPCTL_INTBULK_DPID::0;
    }
    else if ((result = !strncmp(data, "1", 1)))
    {
        output = USB0_EP1_DIEPCTL_INTBULK_DPID::1;
    }

    return result;
}

}; // namespace XMC4700
