/**
 * \file
 * \brief Generated by ifgen (3.2.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SDMMC_COMMAND_CMD_TYPE : uint8_t
{
    normal /*!< Normal */,
    suspend = 1 /*!< Suspend */,
    resume = 2 /*!< Resume */,
    abort = 3 /*!< Abort */
};
static_assert(sizeof(SDMMC_COMMAND_CMD_TYPE) == 1);

/**
 * Converts SDMMC_COMMAND_CMD_TYPE to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SDMMC_COMMAND_CMD_TYPE instance)
{
    const char *result = "UNKNOWN SDMMC_COMMAND_CMD_TYPE";

    switch (instance)
    {
    case SDMMC_COMMAND_CMD_TYPE::normal:
        result = "normal";
        break;
    case SDMMC_COMMAND_CMD_TYPE::suspend:
        result = "suspend";
        break;
    case SDMMC_COMMAND_CMD_TYPE::resume:
        result = "resume";
        break;
    case SDMMC_COMMAND_CMD_TYPE::abort:
        result = "abort";
        break;
    }

    return result;
}

/**
 * Converts a C string to SDMMC_COMMAND_CMD_TYPE.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, SDMMC_COMMAND_CMD_TYPE &output)
{
    bool result = false;

    if ((result = !strncmp(data, "normal", 6)))
    {
        output = SDMMC_COMMAND_CMD_TYPE::normal;
    }
    else if ((result = !strncmp(data, "suspend", 7)))
    {
        output = SDMMC_COMMAND_CMD_TYPE::suspend;
    }
    else if ((result = !strncmp(data, "resume", 6)))
    {
        output = SDMMC_COMMAND_CMD_TYPE::resume;
    }
    else if ((result = !strncmp(data, "abort", 5)))
    {
        output = SDMMC_COMMAND_CMD_TYPE::abort;
    }

    return result;
}

}; // namespace XMC4700
