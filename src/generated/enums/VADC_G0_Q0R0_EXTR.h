/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_G0_Q0R0_EXTR : uint8_t
{
    valid_queue_entry_immediately_leads_conversio_cont /*!< A valid queue entry
                                                          immediately leads to
                                                          a conversion request
                                                        */
        ,
    request_handler_waits_trigger_event =
        1 /*!< The request handler waits for a trigger event */
};
static_assert(sizeof(VADC_G0_Q0R0_EXTR) == 1);

/**
 * Converts VADC_G0_Q0R0_EXTR to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_G0_Q0R0_EXTR instance)
{
    const char *result = "UNKNOWN VADC_G0_Q0R0_EXTR";

    switch (instance)
    {
    case VADC_G0_Q0R0_EXTR::valid_queue_entry_immediately_leads_conversio_cont:
        result = "valid_queue_entry_immediately_leads_conversio_cont";
        break;
    case VADC_G0_Q0R0_EXTR::request_handler_waits_trigger_event:
        result = "request_handler_waits_trigger_event";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_G0_Q0R0_EXTR.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_G0_Q0R0_EXTR &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "valid_queue_entry_immediately_leads_conversio_cont", 50)))
    {
        output = VADC_G0_Q0R0_EXTR::
            valid_queue_entry_immediately_leads_conversio_cont;
    }
    else if ((result =
                  !strncmp(data, "request_handler_waits_trigger_event", 35)))
    {
        output = VADC_G0_Q0R0_EXTR::request_handler_waits_trigger_event;
    }

    return result;
}

}; // namespace XMC4700
