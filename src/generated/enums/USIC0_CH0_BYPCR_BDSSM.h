/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_BYPCR_BDSSM : uint8_t
{
    still_considered_valid_after_has_been_loaded__cont /*!< The bypass data is
                                                          still considered as
                                                          valid after it has
                                                          been loaded into
                                                          TBUF. The loading of
                                                          the data into TBUF
                                                          does not clear BDV.
                                                        */
        ,
    considered_invalid_after_has_been_loaded_into_cont =
        1 /*!< The bypass data is considered as invalid after it has been
             loaded into TBUF. The loading of the data into TBUF clears BDV. */
};
static_assert(sizeof(USIC0_CH0_BYPCR_BDSSM) == 1);

/**
 * Converts USIC0_CH0_BYPCR_BDSSM to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_BYPCR_BDSSM instance)
{
    const char *result = "UNKNOWN USIC0_CH0_BYPCR_BDSSM";

    switch (instance)
    {
    case USIC0_CH0_BYPCR_BDSSM::
        still_considered_valid_after_has_been_loaded__cont:
        result = "still_considered_valid_after_has_been_loaded__cont";
        break;
    case USIC0_CH0_BYPCR_BDSSM::
        considered_invalid_after_has_been_loaded_into_cont:
        result = "considered_invalid_after_has_been_loaded_into_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_BYPCR_BDSSM.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_BYPCR_BDSSM &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "still_considered_valid_after_has_been_loaded__cont", 50)))
    {
        output = USIC0_CH0_BYPCR_BDSSM::
            still_considered_valid_after_has_been_loaded__cont;
    }
    else if ((result = !strncmp(
                  data, "considered_invalid_after_has_been_loaded_into_cont",
                  50)))
    {
        output = USIC0_CH0_BYPCR_BDSSM::
            considered_invalid_after_has_been_loaded_into_cont;
    }

    return result;
}

}; // namespace XMC4700
