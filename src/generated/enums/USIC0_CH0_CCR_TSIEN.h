/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_CCR_TSIEN : uint8_t
{
    disabled /*!< The transmit shift interrupt is disabled. */,
    enabled_case_transmit_shift_interrupt_event_s_cont =
        1 /*!< The transmit shift interrupt is enabled. In case of a transmit
             shift interrupt event, the service request output SRx indicated by
             INPR.TSINP is activated. */
};
static_assert(sizeof(USIC0_CH0_CCR_TSIEN) == 1);

/**
 * Converts USIC0_CH0_CCR_TSIEN to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_CCR_TSIEN instance)
{
    const char *result = "UNKNOWN USIC0_CH0_CCR_TSIEN";

    switch (instance)
    {
    case USIC0_CH0_CCR_TSIEN::disabled:
        result = "disabled";
        break;
    case USIC0_CH0_CCR_TSIEN::
        enabled_case_transmit_shift_interrupt_event_s_cont:
        result = "enabled_case_transmit_shift_interrupt_event_s_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_CCR_TSIEN.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_CCR_TSIEN &output)
{
    bool result = false;

    if ((result = !strncmp(data, "disabled", 8)))
    {
        output = USIC0_CH0_CCR_TSIEN::disabled;
    }
    else if ((result = !strncmp(
                  data, "enabled_case_transmit_shift_interrupt_event_s_cont",
                  50)))
    {
        output = USIC0_CH0_CCR_TSIEN::
            enabled_case_transmit_shift_interrupt_event_s_cont;
    }

    return result;
}

}; // namespace XMC4700
