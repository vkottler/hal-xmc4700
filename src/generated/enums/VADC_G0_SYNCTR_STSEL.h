/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class VADC_G0_SYNCTR_STSEL : uint8_t
{
    master_use_own_bitfiel_cont /*!< Kernel is synchronization master: Use own
                                   bitfield GxARBCFG.ANONC */
        ,
    slave_control_informat_cont = 1 /*!< Kernel is synchronization slave:
                                       Control information from input CI1 */
        ,
    slave_control_informat_cont_ = 2 /*!< Kernel is synchronization slave:
                                        Control information from input CI2 */
        ,
    slave_control_informat_cont__ = 3 /*!< Kernel is synchronization slave:
                                         Control information from input CI3 */
};
static_assert(sizeof(VADC_G0_SYNCTR_STSEL) == 1);

/**
 * Converts VADC_G0_SYNCTR_STSEL to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(VADC_G0_SYNCTR_STSEL instance)
{
    const char *result = "UNKNOWN VADC_G0_SYNCTR_STSEL";

    switch (instance)
    {
    case VADC_G0_SYNCTR_STSEL::master_use_own_bitfiel_cont:
        result = "master_use_own_bitfiel_cont";
        break;
    case VADC_G0_SYNCTR_STSEL::slave_control_informat_cont:
        result = "slave_control_informat_cont";
        break;
    case VADC_G0_SYNCTR_STSEL::slave_control_informat_cont_:
        result = "slave_control_informat_cont_";
        break;
    case VADC_G0_SYNCTR_STSEL::slave_control_informat_cont__:
        result = "slave_control_informat_cont__";
        break;
    }

    return result;
}

/**
 * Converts a C string to VADC_G0_SYNCTR_STSEL.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, VADC_G0_SYNCTR_STSEL &output)
{
    bool result = false;

    if ((result = !strncmp(data, "master_use_own_bitfiel_cont", 27)))
    {
        output = VADC_G0_SYNCTR_STSEL::master_use_own_bitfiel_cont;
    }
    else if ((result = !strncmp(data, "slave_control_informat_cont", 27)))
    {
        output = VADC_G0_SYNCTR_STSEL::slave_control_informat_cont;
    }
    else if ((result = !strncmp(data, "slave_control_informat_cont_", 28)))
    {
        output = VADC_G0_SYNCTR_STSEL::slave_control_informat_cont_;
    }
    else if ((result = !strncmp(data, "slave_control_informat_cont__", 29)))
    {
        output = VADC_G0_SYNCTR_STSEL::slave_control_informat_cont__;
    }

    return result;
}

}; // namespace XMC4700
