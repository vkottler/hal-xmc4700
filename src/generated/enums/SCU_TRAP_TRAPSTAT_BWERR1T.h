/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class SCU_TRAP_TRAPSTAT_BWERR1T : uint8_t
{
    no_pending_trap_request /*!< No pending trap request */,
    pending_trap_request = 1 /*!< Pending trap request */
};
static_assert(sizeof(SCU_TRAP_TRAPSTAT_BWERR1T) == 1);

/**
 * Converts SCU_TRAP_TRAPSTAT_BWERR1T to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(SCU_TRAP_TRAPSTAT_BWERR1T instance)
{
    const char *result = "UNKNOWN SCU_TRAP_TRAPSTAT_BWERR1T";

    switch (instance)
    {
    case SCU_TRAP_TRAPSTAT_BWERR1T::no_pending_trap_request:
        result = "no_pending_trap_request";
        break;
    case SCU_TRAP_TRAPSTAT_BWERR1T::pending_trap_request:
        result = "pending_trap_request";
        break;
    }

    return result;
}

/**
 * Converts a C string to SCU_TRAP_TRAPSTAT_BWERR1T.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, SCU_TRAP_TRAPSTAT_BWERR1T &output)
{
    bool result = false;

    if ((result = !strncmp(data, "no_pending_trap_request", 23)))
    {
        output = SCU_TRAP_TRAPSTAT_BWERR1T::no_pending_trap_request;
    }
    else if ((result = !strncmp(data, "pending_trap_request", 20)))
    {
        output = SCU_TRAP_TRAPSTAT_BWERR1T::pending_trap_request;
    }

    return result;
}

}; // namespace XMC4700
