/**
 * \file
 * \brief Generated by ifgen (3.1.6).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class CCU80_CC80_TC_ECM : uint8_t
{
    normal_capture_mode_clear_full_flag_each_capt_cont /*!< Normal Capture
                                                          Mode. Clear of the
                                                          Full Flag of each
                                                          capture register is
                                                          done by accessing the
                                                          registers
                                                          individually only. */
        ,
    extended_capture_mode_clear_full_flag_each_ca_cont =
        1 /*!< Extended Capture Mode. Clear of the Full Flag of each capture
             register is done not only by accessing the individual registers
             but also by accessing the ECRD register. When reading the ECRD
             register, only the capture register register full flag pointed by
             the VPTR is cleared */
};
static_assert(sizeof(CCU80_CC80_TC_ECM) == 1);

/**
 * Converts CCU80_CC80_TC_ECM to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(CCU80_CC80_TC_ECM instance)
{
    const char *result = "UNKNOWN CCU80_CC80_TC_ECM";

    switch (instance)
    {
    case CCU80_CC80_TC_ECM::normal_capture_mode_clear_full_flag_each_capt_cont:
        result = "normal_capture_mode_clear_full_flag_each_capt_cont";
        break;
    case CCU80_CC80_TC_ECM::extended_capture_mode_clear_full_flag_each_ca_cont:
        result = "extended_capture_mode_clear_full_flag_each_ca_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to CCU80_CC80_TC_ECM.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, CCU80_CC80_TC_ECM &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "normal_capture_mode_clear_full_flag_each_capt_cont", 50)))
    {
        output = CCU80_CC80_TC_ECM::
            normal_capture_mode_clear_full_flag_each_capt_cont;
    }
    else if ((result = !strncmp(
                  data, "extended_capture_mode_clear_full_flag_each_ca_cont",
                  50)))
    {
        output = CCU80_CC80_TC_ECM::
            extended_capture_mode_clear_full_flag_each_ca_cont;
    }

    return result;
}

}; // namespace XMC4700
