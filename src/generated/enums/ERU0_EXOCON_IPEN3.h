/**
 * \file
 * \brief Generated by ifgen (3.1.7).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class ERU0_EXOCON_IPEN3 : uint8_t
{
    excluded_pattern_detection /*!< Flag EXICONx.FL is excluded from the
                                  pattern detection */
        ,
    included_pattern_detection =
        1 /*!< Flag EXICONx.FL is included in the pattern detection */
};
static_assert(sizeof(ERU0_EXOCON_IPEN3) == 1);

/**
 * Converts ERU0_EXOCON_IPEN3 to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(ERU0_EXOCON_IPEN3 instance)
{
    const char *result = "UNKNOWN ERU0_EXOCON_IPEN3";

    switch (instance)
    {
    case ERU0_EXOCON_IPEN3::excluded_pattern_detection:
        result = "excluded_pattern_detection";
        break;
    case ERU0_EXOCON_IPEN3::included_pattern_detection:
        result = "included_pattern_detection";
        break;
    }

    return result;
}

/**
 * Converts a C string to ERU0_EXOCON_IPEN3.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, ERU0_EXOCON_IPEN3 &output)
{
    bool result = false;

    if ((result = !strncmp(data, "excluded_pattern_detection", 26)))
    {
        output = ERU0_EXOCON_IPEN3::excluded_pattern_detection;
    }
    else if ((result = !strncmp(data, "included_pattern_detection", 26)))
    {
        output = ERU0_EXOCON_IPEN3::included_pattern_detection;
    }

    return result;
}

}; // namespace XMC4700
