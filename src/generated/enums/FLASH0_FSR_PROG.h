/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class FLASH0_FSR_PROG : uint8_t
{
    there_no_program_operation_requested_or_progr_cont /*!< There is no program
                                                          operation requested
                                                          or in progress or
                                                          just finished. */
        ,
    programming_operation_write_page_requested_fi_cont =
        1 /*!< Programming operation (write page) requested (from FIM) or in
             action or finished. */
};
static_assert(sizeof(FLASH0_FSR_PROG) == 1);

/**
 * Converts FLASH0_FSR_PROG to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLASH0_FSR_PROG instance)
{
    const char *result = "UNKNOWN FLASH0_FSR_PROG";

    switch (instance)
    {
    case FLASH0_FSR_PROG::there_no_program_operation_requested_or_progr_cont:
        result = "there_no_program_operation_requested_or_progr_cont";
        break;
    case FLASH0_FSR_PROG::programming_operation_write_page_requested_fi_cont:
        result = "programming_operation_write_page_requested_fi_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLASH0_FSR_PROG.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLASH0_FSR_PROG &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "there_no_program_operation_requested_or_progr_cont", 50)))
    {
        output = FLASH0_FSR_PROG::
            there_no_program_operation_requested_or_progr_cont;
    }
    else if ((result = !strncmp(
                  data, "programming_operation_write_page_requested_fi_cont",
                  50)))
    {
        output = FLASH0_FSR_PROG::
            programming_operation_write_page_requested_fi_cont;
    }

    return result;
}

}; // namespace XMC4700
