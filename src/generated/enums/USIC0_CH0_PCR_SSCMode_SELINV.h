/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USIC0_CH0_PCR_SSCMode_SELINV : uint8_t
{
    same_polarity_msls_signal_a_cont /*!< The SELO outputs have the same
                                        polarity as the MSLS signal (active
                                        high). */
        ,
    inverted_polarity_msls_sign_cont =
        1 /*!< The SELO outputs have the inverted polarity to the MSLS signal
             (active low). */
};
static_assert(sizeof(USIC0_CH0_PCR_SSCMode_SELINV) == 1);

/**
 * Converts USIC0_CH0_PCR_SSCMode_SELINV to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USIC0_CH0_PCR_SSCMode_SELINV instance)
{
    const char *result = "UNKNOWN USIC0_CH0_PCR_SSCMode_SELINV";

    switch (instance)
    {
    case USIC0_CH0_PCR_SSCMode_SELINV::same_polarity_msls_signal_a_cont:
        result = "same_polarity_msls_signal_a_cont";
        break;
    case USIC0_CH0_PCR_SSCMode_SELINV::inverted_polarity_msls_sign_cont:
        result = "inverted_polarity_msls_sign_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to USIC0_CH0_PCR_SSCMode_SELINV.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USIC0_CH0_PCR_SSCMode_SELINV &output)
{
    bool result = false;

    if ((result = !strncmp(data, "same_polarity_msls_signal_a_cont", 32)))
    {
        output =
            USIC0_CH0_PCR_SSCMode_SELINV::same_polarity_msls_signal_a_cont;
    }
    else if ((result = !strncmp(data, "inverted_polarity_msls_sign_cont", 32)))
    {
        output =
            USIC0_CH0_PCR_SSCMode_SELINV::inverted_polarity_msls_sign_cont;
    }

    return result;
}

}; // namespace XMC4700
