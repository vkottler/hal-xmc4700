/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class FLASH0_FCON_DCF : uint8_t
{
    allowed /*!< Code fetching from the Flash memory area is allowed. */,
    not_allowed_t_cont =
        1 /*!< Code fetching from the Flash memory area is not allowed. This
             bit is not taken into account while RPA='0'. */
};
static_assert(sizeof(FLASH0_FCON_DCF) == 1);

/**
 * Converts FLASH0_FCON_DCF to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLASH0_FCON_DCF instance)
{
    const char *result = "UNKNOWN FLASH0_FCON_DCF";

    switch (instance)
    {
    case FLASH0_FCON_DCF::allowed:
        result = "allowed";
        break;
    case FLASH0_FCON_DCF::not_allowed_t_cont:
        result = "not_allowed_t_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLASH0_FCON_DCF.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLASH0_FCON_DCF &output)
{
    bool result = false;

    if ((result = !strncmp(data, "allowed", 7)))
    {
        output = FLASH0_FCON_DCF::allowed;
    }
    else if ((result = !strncmp(data, "not_allowed_t_cont", 18)))
    {
        output = FLASH0_FCON_DCF::not_allowed_t_cont;
    }

    return result;
}

}; // namespace XMC4700
