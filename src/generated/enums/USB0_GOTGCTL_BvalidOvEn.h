/**
 * \file
 * \brief Generated by ifgen (3.1.2).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class USB0_GOTGCTL_BvalidOvEn : uint8_t
{
    override_disabled_bvalid_signal_phy_used_inte_cont /*!< Override is
                                                          disabled and Bvalid
                                                          signal from the PHY
                                                          is used internally by
                                                          the core. */
        ,
    internally_bvalid_received_phy_overridden_wit_cont =
        1 /*!< Internally Bvalid received from the PHY is overridden with
             GOTGCTL.BvalidOvVal. */
};
static_assert(sizeof(USB0_GOTGCTL_BvalidOvEn) == 1);

/**
 * Converts USB0_GOTGCTL_BvalidOvEn to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(USB0_GOTGCTL_BvalidOvEn instance)
{
    const char *result = "UNKNOWN USB0_GOTGCTL_BvalidOvEn";

    switch (instance)
    {
    case USB0_GOTGCTL_BvalidOvEn::
        override_disabled_bvalid_signal_phy_used_inte_cont:
        result = "override_disabled_bvalid_signal_phy_used_inte_cont";
        break;
    case USB0_GOTGCTL_BvalidOvEn::
        internally_bvalid_received_phy_overridden_wit_cont:
        result = "internally_bvalid_received_phy_overridden_wit_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to USB0_GOTGCTL_BvalidOvEn.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, USB0_GOTGCTL_BvalidOvEn &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "override_disabled_bvalid_signal_phy_used_inte_cont", 50)))
    {
        output = USB0_GOTGCTL_BvalidOvEn::
            override_disabled_bvalid_signal_phy_used_inte_cont;
    }
    else if ((result = !strncmp(
                  data, "internally_bvalid_received_phy_overridden_wit_cont",
                  50)))
    {
        output = USB0_GOTGCTL_BvalidOvEn::
            internally_bvalid_received_phy_overridden_wit_cont;
    }

    return result;
}

}; // namespace XMC4700
