/**
 * \file
 * \brief Generated by ifgen (3.1.4).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace XMC4700
{

enum class FLASH0_FSR_VER : uint8_t
{
    page_correctly_programmed_or_sector_correctly_cont /*!< The page is
                                                          correctly programmed
                                                          or the sector
                                                          correctly erased. All
                                                          programmed or erased
                                                          bits have full
                                                          expected quality. */
        ,
    program_verify_error_or_an_erase_verify_error_cont =
        1 /*!< A program verify error or an erase verify error has been
             detected. Full quality (retention time) of all programmed ("1") or
             erased ("0") bits cannot be guaranteed. */
};
static_assert(sizeof(FLASH0_FSR_VER) == 1);

/**
 * Converts FLASH0_FSR_VER to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(FLASH0_FSR_VER instance)
{
    const char *result = "UNKNOWN FLASH0_FSR_VER";

    switch (instance)
    {
    case FLASH0_FSR_VER::page_correctly_programmed_or_sector_correctly_cont:
        result = "page_correctly_programmed_or_sector_correctly_cont";
        break;
    case FLASH0_FSR_VER::program_verify_error_or_an_erase_verify_error_cont:
        result = "program_verify_error_or_an_erase_verify_error_cont";
        break;
    }

    return result;
}

/**
 * Converts a C string to FLASH0_FSR_VER.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, FLASH0_FSR_VER &output)
{
    bool result = false;

    if ((result = !strncmp(
             data, "page_correctly_programmed_or_sector_correctly_cont", 50)))
    {
        output =
            FLASH0_FSR_VER::page_correctly_programmed_or_sector_correctly_cont;
    }
    else if ((result = !strncmp(
                  data, "program_verify_error_or_an_erase_verify_error_cont",
                  50)))
    {
        output =
            FLASH0_FSR_VER::program_verify_error_or_an_erase_verify_error_cont;
    }

    return result;
}

}; // namespace XMC4700
